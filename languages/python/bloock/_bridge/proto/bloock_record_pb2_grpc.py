# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import bloock_record_pb2 as bloock__record__pb2


class RecordServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.BuildRecordFromString = channel.unary_unary(
                '/bloock.RecordService/BuildRecordFromString',
                request_serializer=bloock__record__pb2.RecordBuilderFromStringRequest.SerializeToString,
                response_deserializer=bloock__record__pb2.RecordBuilderResponse.FromString,
                )
        self.BuildRecordFromHex = channel.unary_unary(
                '/bloock.RecordService/BuildRecordFromHex',
                request_serializer=bloock__record__pb2.RecordBuilderFromHexRequest.SerializeToString,
                response_deserializer=bloock__record__pb2.RecordBuilderResponse.FromString,
                )
        self.BuildRecordFromJson = channel.unary_unary(
                '/bloock.RecordService/BuildRecordFromJson',
                request_serializer=bloock__record__pb2.RecordBuilderFromJSONRequest.SerializeToString,
                response_deserializer=bloock__record__pb2.RecordBuilderResponse.FromString,
                )
        self.BuildRecordFromFile = channel.unary_unary(
                '/bloock.RecordService/BuildRecordFromFile',
                request_serializer=bloock__record__pb2.RecordBuilderFromFileRequest.SerializeToString,
                response_deserializer=bloock__record__pb2.RecordBuilderResponse.FromString,
                )
        self.BuildRecordFromBytes = channel.unary_unary(
                '/bloock.RecordService/BuildRecordFromBytes',
                request_serializer=bloock__record__pb2.RecordBuilderFromBytesRequest.SerializeToString,
                response_deserializer=bloock__record__pb2.RecordBuilderResponse.FromString,
                )
        self.BuildRecordFromRecord = channel.unary_unary(
                '/bloock.RecordService/BuildRecordFromRecord',
                request_serializer=bloock__record__pb2.RecordBuilderFromRecordRequest.SerializeToString,
                response_deserializer=bloock__record__pb2.RecordBuilderResponse.FromString,
                )
        self.BuildRecordFromLoader = channel.unary_unary(
                '/bloock.RecordService/BuildRecordFromLoader',
                request_serializer=bloock__record__pb2.RecordBuilderFromLoaderRequest.SerializeToString,
                response_deserializer=bloock__record__pb2.RecordBuilderResponse.FromString,
                )
        self.GetDetails = channel.unary_unary(
                '/bloock.RecordService/GetDetails',
                request_serializer=bloock__record__pb2.GetDetailsRequest.SerializeToString,
                response_deserializer=bloock__record__pb2.GetDetailsResponse.FromString,
                )
        self.GetHash = channel.unary_unary(
                '/bloock.RecordService/GetHash',
                request_serializer=bloock__record__pb2.GetHashRequest.SerializeToString,
                response_deserializer=bloock__record__pb2.GetHashResponse.FromString,
                )
        self.GetPayload = channel.unary_unary(
                '/bloock.RecordService/GetPayload',
                request_serializer=bloock__record__pb2.GetPayloadRequest.SerializeToString,
                response_deserializer=bloock__record__pb2.GetPayloadResponse.FromString,
                )
        self.SetProof = channel.unary_unary(
                '/bloock.RecordService/SetProof',
                request_serializer=bloock__record__pb2.SetProofRequest.SerializeToString,
                response_deserializer=bloock__record__pb2.SetProofResponse.FromString,
                )


class RecordServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def BuildRecordFromString(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BuildRecordFromHex(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BuildRecordFromJson(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BuildRecordFromFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BuildRecordFromBytes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BuildRecordFromRecord(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BuildRecordFromLoader(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDetails(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHash(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPayload(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetProof(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RecordServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'BuildRecordFromString': grpc.unary_unary_rpc_method_handler(
                    servicer.BuildRecordFromString,
                    request_deserializer=bloock__record__pb2.RecordBuilderFromStringRequest.FromString,
                    response_serializer=bloock__record__pb2.RecordBuilderResponse.SerializeToString,
            ),
            'BuildRecordFromHex': grpc.unary_unary_rpc_method_handler(
                    servicer.BuildRecordFromHex,
                    request_deserializer=bloock__record__pb2.RecordBuilderFromHexRequest.FromString,
                    response_serializer=bloock__record__pb2.RecordBuilderResponse.SerializeToString,
            ),
            'BuildRecordFromJson': grpc.unary_unary_rpc_method_handler(
                    servicer.BuildRecordFromJson,
                    request_deserializer=bloock__record__pb2.RecordBuilderFromJSONRequest.FromString,
                    response_serializer=bloock__record__pb2.RecordBuilderResponse.SerializeToString,
            ),
            'BuildRecordFromFile': grpc.unary_unary_rpc_method_handler(
                    servicer.BuildRecordFromFile,
                    request_deserializer=bloock__record__pb2.RecordBuilderFromFileRequest.FromString,
                    response_serializer=bloock__record__pb2.RecordBuilderResponse.SerializeToString,
            ),
            'BuildRecordFromBytes': grpc.unary_unary_rpc_method_handler(
                    servicer.BuildRecordFromBytes,
                    request_deserializer=bloock__record__pb2.RecordBuilderFromBytesRequest.FromString,
                    response_serializer=bloock__record__pb2.RecordBuilderResponse.SerializeToString,
            ),
            'BuildRecordFromRecord': grpc.unary_unary_rpc_method_handler(
                    servicer.BuildRecordFromRecord,
                    request_deserializer=bloock__record__pb2.RecordBuilderFromRecordRequest.FromString,
                    response_serializer=bloock__record__pb2.RecordBuilderResponse.SerializeToString,
            ),
            'BuildRecordFromLoader': grpc.unary_unary_rpc_method_handler(
                    servicer.BuildRecordFromLoader,
                    request_deserializer=bloock__record__pb2.RecordBuilderFromLoaderRequest.FromString,
                    response_serializer=bloock__record__pb2.RecordBuilderResponse.SerializeToString,
            ),
            'GetDetails': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDetails,
                    request_deserializer=bloock__record__pb2.GetDetailsRequest.FromString,
                    response_serializer=bloock__record__pb2.GetDetailsResponse.SerializeToString,
            ),
            'GetHash': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHash,
                    request_deserializer=bloock__record__pb2.GetHashRequest.FromString,
                    response_serializer=bloock__record__pb2.GetHashResponse.SerializeToString,
            ),
            'GetPayload': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPayload,
                    request_deserializer=bloock__record__pb2.GetPayloadRequest.FromString,
                    response_serializer=bloock__record__pb2.GetPayloadResponse.SerializeToString,
            ),
            'SetProof': grpc.unary_unary_rpc_method_handler(
                    servicer.SetProof,
                    request_deserializer=bloock__record__pb2.SetProofRequest.FromString,
                    response_serializer=bloock__record__pb2.SetProofResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'bloock.RecordService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RecordService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def BuildRecordFromString(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.RecordService/BuildRecordFromString',
            bloock__record__pb2.RecordBuilderFromStringRequest.SerializeToString,
            bloock__record__pb2.RecordBuilderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BuildRecordFromHex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.RecordService/BuildRecordFromHex',
            bloock__record__pb2.RecordBuilderFromHexRequest.SerializeToString,
            bloock__record__pb2.RecordBuilderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BuildRecordFromJson(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.RecordService/BuildRecordFromJson',
            bloock__record__pb2.RecordBuilderFromJSONRequest.SerializeToString,
            bloock__record__pb2.RecordBuilderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BuildRecordFromFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.RecordService/BuildRecordFromFile',
            bloock__record__pb2.RecordBuilderFromFileRequest.SerializeToString,
            bloock__record__pb2.RecordBuilderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BuildRecordFromBytes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.RecordService/BuildRecordFromBytes',
            bloock__record__pb2.RecordBuilderFromBytesRequest.SerializeToString,
            bloock__record__pb2.RecordBuilderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BuildRecordFromRecord(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.RecordService/BuildRecordFromRecord',
            bloock__record__pb2.RecordBuilderFromRecordRequest.SerializeToString,
            bloock__record__pb2.RecordBuilderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BuildRecordFromLoader(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.RecordService/BuildRecordFromLoader',
            bloock__record__pb2.RecordBuilderFromLoaderRequest.SerializeToString,
            bloock__record__pb2.RecordBuilderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDetails(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.RecordService/GetDetails',
            bloock__record__pb2.GetDetailsRequest.SerializeToString,
            bloock__record__pb2.GetDetailsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetHash(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.RecordService/GetHash',
            bloock__record__pb2.GetHashRequest.SerializeToString,
            bloock__record__pb2.GetHashResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPayload(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.RecordService/GetPayload',
            bloock__record__pb2.GetPayloadRequest.SerializeToString,
            bloock__record__pb2.GetPayloadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetProof(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.RecordService/SetProof',
            bloock__record__pb2.SetProofRequest.SerializeToString,
            bloock__record__pb2.SetProofResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
