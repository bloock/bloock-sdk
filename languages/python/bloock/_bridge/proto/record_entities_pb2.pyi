"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import authenticity_entities_pb2
import builtins
import collections.abc
import config_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import integrity_entities_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _RecordTypes:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _RecordTypesEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_RecordTypes.ValueType], builtins.type):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    STRING: _RecordTypes.ValueType  # 0
    HEX: _RecordTypes.ValueType  # 1
    JSON: _RecordTypes.ValueType  # 2
    BYTES: _RecordTypes.ValueType  # 3
    FILE: _RecordTypes.ValueType  # 4
    RECORD: _RecordTypes.ValueType  # 5
    LOADER: _RecordTypes.ValueType  # 6

class RecordTypes(_RecordTypes, metaclass=_RecordTypesEnumTypeWrapper): ...

STRING: RecordTypes.ValueType  # 0
HEX: RecordTypes.ValueType  # 1
JSON: RecordTypes.ValueType  # 2
BYTES: RecordTypes.ValueType  # 3
FILE: RecordTypes.ValueType  # 4
RECORD: RecordTypes.ValueType  # 5
LOADER: RecordTypes.ValueType  # 6
global___RecordTypes = RecordTypes

class RecordHeader(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TY_FIELD_NUMBER: builtins.int
    ty: builtins.str
    def __init__(
        self,
        *,
        ty: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ty", b"ty"]) -> None: ...

global___RecordHeader = RecordHeader

class Record(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONFIG_DATA_FIELD_NUMBER: builtins.int
    PAYLOAD_FIELD_NUMBER: builtins.int
    HASH_FIELD_NUMBER: builtins.int
    @property
    def config_data(self) -> config_pb2.ConfigData: ...
    payload: builtins.bytes
    hash: builtins.str
    def __init__(
        self,
        *,
        config_data: config_pb2.ConfigData | None = ...,
        payload: builtins.bytes = ...,
        hash: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_config_data", b"_config_data", "config_data", b"config_data"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_config_data", b"_config_data", "config_data", b"config_data", "hash", b"hash", "payload", b"payload"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_config_data", b"_config_data"]) -> typing_extensions.Literal["config_data"] | None: ...

global___Record = Record

class IntegrityDetails(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HASH_FIELD_NUMBER: builtins.int
    PROOF_FIELD_NUMBER: builtins.int
    hash: builtins.str
    @property
    def proof(self) -> integrity_entities_pb2.Proof: ...
    def __init__(
        self,
        *,
        hash: builtins.str = ...,
        proof: integrity_entities_pb2.Proof | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_proof", b"_proof", "proof", b"proof"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_proof", b"_proof", "hash", b"hash", "proof", b"proof"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_proof", b"_proof"]) -> typing_extensions.Literal["proof"] | None: ...

global___IntegrityDetails = IntegrityDetails

class AuthenticityDetails(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SIGNATURES_FIELD_NUMBER: builtins.int
    @property
    def signatures(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[authenticity_entities_pb2.Signature]: ...
    def __init__(
        self,
        *,
        signatures: collections.abc.Iterable[authenticity_entities_pb2.Signature] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["signatures", b"signatures"]) -> None: ...

global___AuthenticityDetails = AuthenticityDetails

class EncryptionDetails(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ALG_FIELD_NUMBER: builtins.int
    KEY_FIELD_NUMBER: builtins.int
    SUBJECT_FIELD_NUMBER: builtins.int
    alg: builtins.str
    key: builtins.str
    subject: builtins.str
    def __init__(
        self,
        *,
        alg: builtins.str | None = ...,
        key: builtins.str | None = ...,
        subject: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_alg", b"_alg", "_key", b"_key", "_subject", b"_subject", "alg", b"alg", "key", b"key", "subject", b"subject"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_alg", b"_alg", "_key", b"_key", "_subject", b"_subject", "alg", b"alg", "key", b"key", "subject", b"subject"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_alg", b"_alg"]) -> typing_extensions.Literal["alg"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_key", b"_key"]) -> typing_extensions.Literal["key"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_subject", b"_subject"]) -> typing_extensions.Literal["subject"] | None: ...

global___EncryptionDetails = EncryptionDetails

class AvailabilityDetails(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SIZE_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    size: builtins.int
    type: builtins.str
    def __init__(
        self,
        *,
        size: builtins.int = ...,
        type: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_type", b"_type", "type", b"type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_type", b"_type", "size", b"size", "type", b"type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_type", b"_type"]) -> typing_extensions.Literal["type"] | None: ...

global___AvailabilityDetails = AvailabilityDetails

class RecordDetails(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    INTEGRITY_FIELD_NUMBER: builtins.int
    AUTHENTICITY_FIELD_NUMBER: builtins.int
    ENCRYPTION_FIELD_NUMBER: builtins.int
    AVAILABILITY_FIELD_NUMBER: builtins.int
    @property
    def integrity(self) -> global___IntegrityDetails: ...
    @property
    def authenticity(self) -> global___AuthenticityDetails: ...
    @property
    def encryption(self) -> global___EncryptionDetails: ...
    @property
    def availability(self) -> global___AvailabilityDetails: ...
    def __init__(
        self,
        *,
        integrity: global___IntegrityDetails | None = ...,
        authenticity: global___AuthenticityDetails | None = ...,
        encryption: global___EncryptionDetails | None = ...,
        availability: global___AvailabilityDetails | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_authenticity", b"_authenticity", "_availability", b"_availability", "_encryption", b"_encryption", "_integrity", b"_integrity", "authenticity", b"authenticity", "availability", b"availability", "encryption", b"encryption", "integrity", b"integrity"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_authenticity", b"_authenticity", "_availability", b"_availability", "_encryption", b"_encryption", "_integrity", b"_integrity", "authenticity", b"authenticity", "availability", b"availability", "encryption", b"encryption", "integrity", b"integrity"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_authenticity", b"_authenticity"]) -> typing_extensions.Literal["authenticity"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_availability", b"_availability"]) -> typing_extensions.Literal["availability"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_encryption", b"_encryption"]) -> typing_extensions.Literal["encryption"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_integrity", b"_integrity"]) -> typing_extensions.Literal["integrity"] | None: ...

global___RecordDetails = RecordDetails
