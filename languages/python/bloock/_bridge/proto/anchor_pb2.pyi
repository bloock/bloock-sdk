"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import config_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import shared_pb2
import sys
import typing

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class Anchor(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    BLOCK_ROOTS_FIELD_NUMBER: builtins.int
    NETWORKS_FIELD_NUMBER: builtins.int
    ROOT_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    id: builtins.int
    @property
    def block_roots(
        self,
    ) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[
        builtins.str
    ]: ...
    @property
    def networks(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___AnchorNetwork
    ]: ...
    root: builtins.str
    status: builtins.str
    def __init__(
        self,
        *,
        id: builtins.int = ...,
        block_roots: collections.abc.Iterable[builtins.str] | None = ...,
        networks: collections.abc.Iterable[global___AnchorNetwork] | None = ...,
        root: builtins.str = ...,
        status: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "block_roots",
            b"block_roots",
            "id",
            b"id",
            "networks",
            b"networks",
            "root",
            b"root",
            "status",
            b"status",
        ],
    ) -> None: ...

global___Anchor = Anchor

@typing_extensions.final
class AnchorNetwork(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    TX_HASH_FIELD_NUMBER: builtins.int
    name: builtins.str
    state: builtins.str
    tx_hash: builtins.str
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        state: builtins.str = ...,
        tx_hash: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "name", b"name", "state", b"state", "tx_hash", b"tx_hash"
        ],
    ) -> None: ...

global___AnchorNetwork = AnchorNetwork

@typing_extensions.final
class GetAnchorRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONFIG_DATA_FIELD_NUMBER: builtins.int
    ANCHOR_ID_FIELD_NUMBER: builtins.int
    @property
    def config_data(self) -> config_pb2.ConfigData: ...
    anchor_id: builtins.int
    def __init__(
        self,
        *,
        config_data: config_pb2.ConfigData | None = ...,
        anchor_id: builtins.int = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["config_data", b"config_data"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "anchor_id", b"anchor_id", "config_data", b"config_data"
        ],
    ) -> None: ...

global___GetAnchorRequest = GetAnchorRequest

@typing_extensions.final
class GetAnchorResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ANCHOR_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    @property
    def anchor(self) -> global___Anchor: ...
    @property
    def error(self) -> shared_pb2.Error: ...
    def __init__(
        self,
        *,
        anchor: global___Anchor | None = ...,
        error: shared_pb2.Error | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "_anchor",
            b"_anchor",
            "_error",
            b"_error",
            "anchor",
            b"anchor",
            "error",
            b"error",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_anchor",
            b"_anchor",
            "_error",
            b"_error",
            "anchor",
            b"anchor",
            "error",
            b"error",
        ],
    ) -> None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_anchor", b"_anchor"]
    ) -> typing_extensions.Literal["anchor"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_error", b"_error"]
    ) -> typing_extensions.Literal["error"] | None: ...

global___GetAnchorResponse = GetAnchorResponse

@typing_extensions.final
class WaitAnchorRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONFIG_DATA_FIELD_NUMBER: builtins.int
    ANCHOR_ID_FIELD_NUMBER: builtins.int
    TIMEOUT_FIELD_NUMBER: builtins.int
    @property
    def config_data(self) -> config_pb2.ConfigData: ...
    anchor_id: builtins.int
    timeout: builtins.int
    def __init__(
        self,
        *,
        config_data: config_pb2.ConfigData | None = ...,
        anchor_id: builtins.int = ...,
        timeout: builtins.int = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["config_data", b"config_data"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "anchor_id",
            b"anchor_id",
            "config_data",
            b"config_data",
            "timeout",
            b"timeout",
        ],
    ) -> None: ...

global___WaitAnchorRequest = WaitAnchorRequest

@typing_extensions.final
class WaitAnchorResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ANCHOR_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    @property
    def anchor(self) -> global___Anchor: ...
    @property
    def error(self) -> shared_pb2.Error: ...
    def __init__(
        self,
        *,
        anchor: global___Anchor | None = ...,
        error: shared_pb2.Error | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "_anchor",
            b"_anchor",
            "_error",
            b"_error",
            "anchor",
            b"anchor",
            "error",
            b"error",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_anchor",
            b"_anchor",
            "_error",
            b"_error",
            "anchor",
            b"anchor",
            "error",
            b"error",
        ],
    ) -> None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_anchor", b"_anchor"]
    ) -> typing_extensions.Literal["anchor"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_error", b"_error"]
    ) -> typing_extensions.Literal["error"] | None: ...

global___WaitAnchorResponse = WaitAnchorResponse
