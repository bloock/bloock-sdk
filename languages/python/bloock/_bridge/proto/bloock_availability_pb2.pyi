"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import bloock_availability_entities_pb2
import bloock_config_pb2
import bloock_record_entities_pb2
import bloock_shared_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class PublishRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONFIG_DATA_FIELD_NUMBER: builtins.int
    RECORD_FIELD_NUMBER: builtins.int
    PUBLISHER_FIELD_NUMBER: builtins.int
    @property
    def config_data(self) -> bloock_config_pb2.ConfigData: ...
    @property
    def record(self) -> bloock_record_entities_pb2.Record: ...
    @property
    def publisher(self) -> bloock_availability_entities_pb2.Publisher: ...
    def __init__(
        self,
        *,
        config_data: bloock_config_pb2.ConfigData | None = ...,
        record: bloock_record_entities_pb2.Record | None = ...,
        publisher: bloock_availability_entities_pb2.Publisher | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["config_data", b"config_data", "publisher", b"publisher", "record", b"record"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["config_data", b"config_data", "publisher", b"publisher", "record", b"record"]) -> None: ...

global___PublishRequest = PublishRequest

@typing_extensions.final
class PublishResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    IPNS_KEY_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    id: builtins.str
    @property
    def ipns_key(self) -> bloock_availability_entities_pb2.IpnsKey: ...
    @property
    def error(self) -> bloock_shared_pb2.Error: ...
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        ipns_key: bloock_availability_entities_pb2.IpnsKey | None = ...,
        error: bloock_shared_pb2.Error | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_error", b"_error", "_ipns_key", b"_ipns_key", "error", b"error", "ipns_key", b"ipns_key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_error", b"_error", "_ipns_key", b"_ipns_key", "error", b"error", "id", b"id", "ipns_key", b"ipns_key"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_error", b"_error"]) -> typing_extensions.Literal["error"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ipns_key", b"_ipns_key"]) -> typing_extensions.Literal["ipns_key"] | None: ...

global___PublishResponse = PublishResponse

@typing_extensions.final
class RetrieveRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONFIG_DATA_FIELD_NUMBER: builtins.int
    LOADER_FIELD_NUMBER: builtins.int
    @property
    def config_data(self) -> bloock_config_pb2.ConfigData: ...
    @property
    def loader(self) -> bloock_availability_entities_pb2.Loader: ...
    def __init__(
        self,
        *,
        config_data: bloock_config_pb2.ConfigData | None = ...,
        loader: bloock_availability_entities_pb2.Loader | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["config_data", b"config_data", "loader", b"loader"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["config_data", b"config_data", "loader", b"loader"]) -> None: ...

global___RetrieveRequest = RetrieveRequest

@typing_extensions.final
class RetrieveResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RECORD_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    @property
    def record(self) -> bloock_record_entities_pb2.Record: ...
    @property
    def error(self) -> bloock_shared_pb2.Error: ...
    def __init__(
        self,
        *,
        record: bloock_record_entities_pb2.Record | None = ...,
        error: bloock_shared_pb2.Error | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_error", b"_error", "error", b"error", "record", b"record"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_error", b"_error", "error", b"error", "record", b"record"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_error", b"_error"]) -> typing_extensions.Literal["error"] | None: ...

global___RetrieveResponse = RetrieveResponse
