# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import identity_v2_pb2 as identity__v2__pb2


class IdentityServiceV2Stub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateIssuer = channel.unary_unary(
                '/bloock.IdentityServiceV2/CreateIssuer',
                request_serializer=identity__v2__pb2.CreateIssuerRequest.SerializeToString,
                response_deserializer=identity__v2__pb2.CreateIssuerResponse.FromString,
                )
        self.GetIssuerList = channel.unary_unary(
                '/bloock.IdentityServiceV2/GetIssuerList',
                request_serializer=identity__v2__pb2.GetIssuerListRequest.SerializeToString,
                response_deserializer=identity__v2__pb2.GetIssuerListResponse.FromString,
                )
        self.GetIssuerByKey = channel.unary_unary(
                '/bloock.IdentityServiceV2/GetIssuerByKey',
                request_serializer=identity__v2__pb2.GetIssuerByKeyRequest.SerializeToString,
                response_deserializer=identity__v2__pb2.GetIssuerByKeyResponse.FromString,
                )
        self.BuildSchema = channel.unary_unary(
                '/bloock.IdentityServiceV2/BuildSchema',
                request_serializer=identity__v2__pb2.BuildSchemaRequestV2.SerializeToString,
                response_deserializer=identity__v2__pb2.BuildSchemaResponseV2.FromString,
                )
        self.GetSchema = channel.unary_unary(
                '/bloock.IdentityServiceV2/GetSchema',
                request_serializer=identity__v2__pb2.GetSchemaRequestV2.SerializeToString,
                response_deserializer=identity__v2__pb2.GetSchemaResponseV2.FromString,
                )
        self.CreateCredential = channel.unary_unary(
                '/bloock.IdentityServiceV2/CreateCredential',
                request_serializer=identity__v2__pb2.CreateCredentialRequestV2.SerializeToString,
                response_deserializer=identity__v2__pb2.CreateCredentialResponseV2.FromString,
                )
        self.GetCredentialProof = channel.unary_unary(
                '/bloock.IdentityServiceV2/GetCredentialProof',
                request_serializer=identity__v2__pb2.GetCredentialProofRequest.SerializeToString,
                response_deserializer=identity__v2__pb2.GetCredentialProofResponse.FromString,
                )
        self.RevokeCredential = channel.unary_unary(
                '/bloock.IdentityServiceV2/RevokeCredential',
                request_serializer=identity__v2__pb2.RevokeCredentialRequestV2.SerializeToString,
                response_deserializer=identity__v2__pb2.RevokeCredentialResponseV2.FromString,
                )
        self.CredentialToJson = channel.unary_unary(
                '/bloock.IdentityServiceV2/CredentialToJson',
                request_serializer=identity__v2__pb2.CredentialToJsonRequestV2.SerializeToString,
                response_deserializer=identity__v2__pb2.CredentialToJsonResponseV2.FromString,
                )
        self.CredentialFromJson = channel.unary_unary(
                '/bloock.IdentityServiceV2/CredentialFromJson',
                request_serializer=identity__v2__pb2.CredentialFromJsonRequestV2.SerializeToString,
                response_deserializer=identity__v2__pb2.CredentialFromJsonResponseV2.FromString,
                )
        self.PublishIssuerState = channel.unary_unary(
                '/bloock.IdentityServiceV2/PublishIssuerState',
                request_serializer=identity__v2__pb2.PublishIssuerStateRequest.SerializeToString,
                response_deserializer=identity__v2__pb2.PublishIssuerStateResponse.FromString,
                )


class IdentityServiceV2Servicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateIssuer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetIssuerList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetIssuerByKey(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BuildSchema(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSchema(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateCredential(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCredentialProof(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RevokeCredential(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CredentialToJson(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CredentialFromJson(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PublishIssuerState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_IdentityServiceV2Servicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateIssuer': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateIssuer,
                    request_deserializer=identity__v2__pb2.CreateIssuerRequest.FromString,
                    response_serializer=identity__v2__pb2.CreateIssuerResponse.SerializeToString,
            ),
            'GetIssuerList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetIssuerList,
                    request_deserializer=identity__v2__pb2.GetIssuerListRequest.FromString,
                    response_serializer=identity__v2__pb2.GetIssuerListResponse.SerializeToString,
            ),
            'GetIssuerByKey': grpc.unary_unary_rpc_method_handler(
                    servicer.GetIssuerByKey,
                    request_deserializer=identity__v2__pb2.GetIssuerByKeyRequest.FromString,
                    response_serializer=identity__v2__pb2.GetIssuerByKeyResponse.SerializeToString,
            ),
            'BuildSchema': grpc.unary_unary_rpc_method_handler(
                    servicer.BuildSchema,
                    request_deserializer=identity__v2__pb2.BuildSchemaRequestV2.FromString,
                    response_serializer=identity__v2__pb2.BuildSchemaResponseV2.SerializeToString,
            ),
            'GetSchema': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSchema,
                    request_deserializer=identity__v2__pb2.GetSchemaRequestV2.FromString,
                    response_serializer=identity__v2__pb2.GetSchemaResponseV2.SerializeToString,
            ),
            'CreateCredential': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCredential,
                    request_deserializer=identity__v2__pb2.CreateCredentialRequestV2.FromString,
                    response_serializer=identity__v2__pb2.CreateCredentialResponseV2.SerializeToString,
            ),
            'GetCredentialProof': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCredentialProof,
                    request_deserializer=identity__v2__pb2.GetCredentialProofRequest.FromString,
                    response_serializer=identity__v2__pb2.GetCredentialProofResponse.SerializeToString,
            ),
            'RevokeCredential': grpc.unary_unary_rpc_method_handler(
                    servicer.RevokeCredential,
                    request_deserializer=identity__v2__pb2.RevokeCredentialRequestV2.FromString,
                    response_serializer=identity__v2__pb2.RevokeCredentialResponseV2.SerializeToString,
            ),
            'CredentialToJson': grpc.unary_unary_rpc_method_handler(
                    servicer.CredentialToJson,
                    request_deserializer=identity__v2__pb2.CredentialToJsonRequestV2.FromString,
                    response_serializer=identity__v2__pb2.CredentialToJsonResponseV2.SerializeToString,
            ),
            'CredentialFromJson': grpc.unary_unary_rpc_method_handler(
                    servicer.CredentialFromJson,
                    request_deserializer=identity__v2__pb2.CredentialFromJsonRequestV2.FromString,
                    response_serializer=identity__v2__pb2.CredentialFromJsonResponseV2.SerializeToString,
            ),
            'PublishIssuerState': grpc.unary_unary_rpc_method_handler(
                    servicer.PublishIssuerState,
                    request_deserializer=identity__v2__pb2.PublishIssuerStateRequest.FromString,
                    response_serializer=identity__v2__pb2.PublishIssuerStateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'bloock.IdentityServiceV2', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class IdentityServiceV2(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateIssuer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.IdentityServiceV2/CreateIssuer',
            identity__v2__pb2.CreateIssuerRequest.SerializeToString,
            identity__v2__pb2.CreateIssuerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetIssuerList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.IdentityServiceV2/GetIssuerList',
            identity__v2__pb2.GetIssuerListRequest.SerializeToString,
            identity__v2__pb2.GetIssuerListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetIssuerByKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.IdentityServiceV2/GetIssuerByKey',
            identity__v2__pb2.GetIssuerByKeyRequest.SerializeToString,
            identity__v2__pb2.GetIssuerByKeyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BuildSchema(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.IdentityServiceV2/BuildSchema',
            identity__v2__pb2.BuildSchemaRequestV2.SerializeToString,
            identity__v2__pb2.BuildSchemaResponseV2.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSchema(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.IdentityServiceV2/GetSchema',
            identity__v2__pb2.GetSchemaRequestV2.SerializeToString,
            identity__v2__pb2.GetSchemaResponseV2.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateCredential(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.IdentityServiceV2/CreateCredential',
            identity__v2__pb2.CreateCredentialRequestV2.SerializeToString,
            identity__v2__pb2.CreateCredentialResponseV2.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCredentialProof(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.IdentityServiceV2/GetCredentialProof',
            identity__v2__pb2.GetCredentialProofRequest.SerializeToString,
            identity__v2__pb2.GetCredentialProofResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RevokeCredential(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.IdentityServiceV2/RevokeCredential',
            identity__v2__pb2.RevokeCredentialRequestV2.SerializeToString,
            identity__v2__pb2.RevokeCredentialResponseV2.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CredentialToJson(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.IdentityServiceV2/CredentialToJson',
            identity__v2__pb2.CredentialToJsonRequestV2.SerializeToString,
            identity__v2__pb2.CredentialToJsonResponseV2.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CredentialFromJson(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.IdentityServiceV2/CredentialFromJson',
            identity__v2__pb2.CredentialFromJsonRequestV2.SerializeToString,
            identity__v2__pb2.CredentialFromJsonResponseV2.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PublishIssuerState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.IdentityServiceV2/PublishIssuerState',
            identity__v2__pb2.PublishIssuerStateRequest.SerializeToString,
            identity__v2__pb2.PublishIssuerStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
