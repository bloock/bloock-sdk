# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import identity_pb2 as identity__pb2


class IdentityServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateHolder = channel.unary_unary(
                '/bloock.IdentityService/CreateHolder',
                request_serializer=identity__pb2.CreateHolderRequest.SerializeToString,
                response_deserializer=identity__pb2.CreateHolderResponse.FromString,
                )
        self.CreateIssuer = channel.unary_unary(
                '/bloock.IdentityService/CreateIssuer',
                request_serializer=identity__pb2.CreateIssuerRequest.SerializeToString,
                response_deserializer=identity__pb2.CreateIssuerResponse.FromString,
                )
        self.ImportIssuer = channel.unary_unary(
                '/bloock.IdentityService/ImportIssuer',
                request_serializer=identity__pb2.ImportIssuerRequest.SerializeToString,
                response_deserializer=identity__pb2.ImportIssuerResponse.FromString,
                )
        self.BuildSchema = channel.unary_unary(
                '/bloock.IdentityService/BuildSchema',
                request_serializer=identity__pb2.BuildSchemaRequest.SerializeToString,
                response_deserializer=identity__pb2.BuildSchemaResponse.FromString,
                )
        self.GetSchema = channel.unary_unary(
                '/bloock.IdentityService/GetSchema',
                request_serializer=identity__pb2.GetSchemaRequest.SerializeToString,
                response_deserializer=identity__pb2.GetSchemaResponse.FromString,
                )
        self.CreateCredential = channel.unary_unary(
                '/bloock.IdentityService/CreateCredential',
                request_serializer=identity__pb2.CreateCredentialRequest.SerializeToString,
                response_deserializer=identity__pb2.CreateCredentialResponse.FromString,
                )
        self.GetCredentialProof = channel.unary_unary(
                '/bloock.IdentityService/GetCredentialProof',
                request_serializer=identity__pb2.GetCredentialProofRequest.SerializeToString,
                response_deserializer=identity__pb2.GetCredentialProofResponse.FromString,
                )
        self.RevokeCredential = channel.unary_unary(
                '/bloock.IdentityService/RevokeCredential',
                request_serializer=identity__pb2.RevokeCredentialRequest.SerializeToString,
                response_deserializer=identity__pb2.RevokeCredentialResponse.FromString,
                )
        self.CredentialToJson = channel.unary_unary(
                '/bloock.IdentityService/CredentialToJson',
                request_serializer=identity__pb2.CredentialToJsonRequest.SerializeToString,
                response_deserializer=identity__pb2.CredentialToJsonResponse.FromString,
                )
        self.CredentialFromJson = channel.unary_unary(
                '/bloock.IdentityService/CredentialFromJson',
                request_serializer=identity__pb2.CredentialFromJsonRequest.SerializeToString,
                response_deserializer=identity__pb2.CredentialFromJsonResponse.FromString,
                )
        self.ForcePublishIssuerState = channel.unary_unary(
                '/bloock.IdentityService/ForcePublishIssuerState',
                request_serializer=identity__pb2.ForcePublishIssuerStateRequest.SerializeToString,
                response_deserializer=identity__pb2.ForcePublishIssuerStateResponse.FromString,
                )
        self.CreateVerification = channel.unary_unary(
                '/bloock.IdentityService/CreateVerification',
                request_serializer=identity__pb2.CreateVerificationRequest.SerializeToString,
                response_deserializer=identity__pb2.CreateVerificationResponse.FromString,
                )
        self.WaitVerification = channel.unary_unary(
                '/bloock.IdentityService/WaitVerification',
                request_serializer=identity__pb2.WaitVerificationRequest.SerializeToString,
                response_deserializer=identity__pb2.WaitVerificationResponse.FromString,
                )
        self.GetVerificationStatus = channel.unary_unary(
                '/bloock.IdentityService/GetVerificationStatus',
                request_serializer=identity__pb2.GetVerificationStatusRequest.SerializeToString,
                response_deserializer=identity__pb2.GetVerificationStatusResponse.FromString,
                )


class IdentityServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateHolder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateIssuer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ImportIssuer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BuildSchema(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSchema(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateCredential(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCredentialProof(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RevokeCredential(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CredentialToJson(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CredentialFromJson(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ForcePublishIssuerState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateVerification(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WaitVerification(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVerificationStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_IdentityServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateHolder': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateHolder,
                    request_deserializer=identity__pb2.CreateHolderRequest.FromString,
                    response_serializer=identity__pb2.CreateHolderResponse.SerializeToString,
            ),
            'CreateIssuer': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateIssuer,
                    request_deserializer=identity__pb2.CreateIssuerRequest.FromString,
                    response_serializer=identity__pb2.CreateIssuerResponse.SerializeToString,
            ),
            'ImportIssuer': grpc.unary_unary_rpc_method_handler(
                    servicer.ImportIssuer,
                    request_deserializer=identity__pb2.ImportIssuerRequest.FromString,
                    response_serializer=identity__pb2.ImportIssuerResponse.SerializeToString,
            ),
            'BuildSchema': grpc.unary_unary_rpc_method_handler(
                    servicer.BuildSchema,
                    request_deserializer=identity__pb2.BuildSchemaRequest.FromString,
                    response_serializer=identity__pb2.BuildSchemaResponse.SerializeToString,
            ),
            'GetSchema': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSchema,
                    request_deserializer=identity__pb2.GetSchemaRequest.FromString,
                    response_serializer=identity__pb2.GetSchemaResponse.SerializeToString,
            ),
            'CreateCredential': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCredential,
                    request_deserializer=identity__pb2.CreateCredentialRequest.FromString,
                    response_serializer=identity__pb2.CreateCredentialResponse.SerializeToString,
            ),
            'GetCredentialProof': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCredentialProof,
                    request_deserializer=identity__pb2.GetCredentialProofRequest.FromString,
                    response_serializer=identity__pb2.GetCredentialProofResponse.SerializeToString,
            ),
            'RevokeCredential': grpc.unary_unary_rpc_method_handler(
                    servicer.RevokeCredential,
                    request_deserializer=identity__pb2.RevokeCredentialRequest.FromString,
                    response_serializer=identity__pb2.RevokeCredentialResponse.SerializeToString,
            ),
            'CredentialToJson': grpc.unary_unary_rpc_method_handler(
                    servicer.CredentialToJson,
                    request_deserializer=identity__pb2.CredentialToJsonRequest.FromString,
                    response_serializer=identity__pb2.CredentialToJsonResponse.SerializeToString,
            ),
            'CredentialFromJson': grpc.unary_unary_rpc_method_handler(
                    servicer.CredentialFromJson,
                    request_deserializer=identity__pb2.CredentialFromJsonRequest.FromString,
                    response_serializer=identity__pb2.CredentialFromJsonResponse.SerializeToString,
            ),
            'ForcePublishIssuerState': grpc.unary_unary_rpc_method_handler(
                    servicer.ForcePublishIssuerState,
                    request_deserializer=identity__pb2.ForcePublishIssuerStateRequest.FromString,
                    response_serializer=identity__pb2.ForcePublishIssuerStateResponse.SerializeToString,
            ),
            'CreateVerification': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateVerification,
                    request_deserializer=identity__pb2.CreateVerificationRequest.FromString,
                    response_serializer=identity__pb2.CreateVerificationResponse.SerializeToString,
            ),
            'WaitVerification': grpc.unary_unary_rpc_method_handler(
                    servicer.WaitVerification,
                    request_deserializer=identity__pb2.WaitVerificationRequest.FromString,
                    response_serializer=identity__pb2.WaitVerificationResponse.SerializeToString,
            ),
            'GetVerificationStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVerificationStatus,
                    request_deserializer=identity__pb2.GetVerificationStatusRequest.FromString,
                    response_serializer=identity__pb2.GetVerificationStatusResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'bloock.IdentityService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class IdentityService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateHolder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.IdentityService/CreateHolder',
            identity__pb2.CreateHolderRequest.SerializeToString,
            identity__pb2.CreateHolderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateIssuer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.IdentityService/CreateIssuer',
            identity__pb2.CreateIssuerRequest.SerializeToString,
            identity__pb2.CreateIssuerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ImportIssuer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.IdentityService/ImportIssuer',
            identity__pb2.ImportIssuerRequest.SerializeToString,
            identity__pb2.ImportIssuerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BuildSchema(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.IdentityService/BuildSchema',
            identity__pb2.BuildSchemaRequest.SerializeToString,
            identity__pb2.BuildSchemaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSchema(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.IdentityService/GetSchema',
            identity__pb2.GetSchemaRequest.SerializeToString,
            identity__pb2.GetSchemaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateCredential(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.IdentityService/CreateCredential',
            identity__pb2.CreateCredentialRequest.SerializeToString,
            identity__pb2.CreateCredentialResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCredentialProof(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.IdentityService/GetCredentialProof',
            identity__pb2.GetCredentialProofRequest.SerializeToString,
            identity__pb2.GetCredentialProofResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RevokeCredential(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.IdentityService/RevokeCredential',
            identity__pb2.RevokeCredentialRequest.SerializeToString,
            identity__pb2.RevokeCredentialResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CredentialToJson(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.IdentityService/CredentialToJson',
            identity__pb2.CredentialToJsonRequest.SerializeToString,
            identity__pb2.CredentialToJsonResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CredentialFromJson(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.IdentityService/CredentialFromJson',
            identity__pb2.CredentialFromJsonRequest.SerializeToString,
            identity__pb2.CredentialFromJsonResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ForcePublishIssuerState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.IdentityService/ForcePublishIssuerState',
            identity__pb2.ForcePublishIssuerStateRequest.SerializeToString,
            identity__pb2.ForcePublishIssuerStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateVerification(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.IdentityService/CreateVerification',
            identity__pb2.CreateVerificationRequest.SerializeToString,
            identity__pb2.CreateVerificationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WaitVerification(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.IdentityService/WaitVerification',
            identity__pb2.WaitVerificationRequest.SerializeToString,
            identity__pb2.WaitVerificationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVerificationStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.IdentityService/GetVerificationStatus',
            identity__pb2.GetVerificationStatusRequest.SerializeToString,
            identity__pb2.GetVerificationStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
