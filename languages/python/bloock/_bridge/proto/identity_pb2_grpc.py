# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import identity_pb2 as identity__pb2


class IdentityServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateIdentity = channel.unary_unary(
                '/bloock.IdentityService/CreateIdentity',
                request_serializer=identity__pb2.CreateIdentityRequest.SerializeToString,
                response_deserializer=identity__pb2.CreateIdentityResponse.FromString,
                )
        self.LoadIdentity = channel.unary_unary(
                '/bloock.IdentityService/LoadIdentity',
                request_serializer=identity__pb2.LoadIdentityRequest.SerializeToString,
                response_deserializer=identity__pb2.LoadIdentityResponse.FromString,
                )
        self.BuildSchema = channel.unary_unary(
                '/bloock.IdentityService/BuildSchema',
                request_serializer=identity__pb2.BuildSchemaRequest.SerializeToString,
                response_deserializer=identity__pb2.BuildSchemaResponse.FromString,
                )
        self.GetSchema = channel.unary_unary(
                '/bloock.IdentityService/GetSchema',
                request_serializer=identity__pb2.GetSchemaRequest.SerializeToString,
                response_deserializer=identity__pb2.GetSchemaResponse.FromString,
                )
        self.CreateCredential = channel.unary_unary(
                '/bloock.IdentityService/CreateCredential',
                request_serializer=identity__pb2.CreateCredentialRequest.SerializeToString,
                response_deserializer=identity__pb2.CreateCredentialResponse.FromString,
                )
        self.GetOffer = channel.unary_unary(
                '/bloock.IdentityService/GetOffer',
                request_serializer=identity__pb2.GetOfferRequest.SerializeToString,
                response_deserializer=identity__pb2.GetOfferResponse.FromString,
                )
        self.WaitOffer = channel.unary_unary(
                '/bloock.IdentityService/WaitOffer',
                request_serializer=identity__pb2.WaitOfferRequest.SerializeToString,
                response_deserializer=identity__pb2.WaitOfferResponse.FromString,
                )
        self.CredentialOfferToJson = channel.unary_unary(
                '/bloock.IdentityService/CredentialOfferToJson',
                request_serializer=identity__pb2.CredentialOfferToJsonRequest.SerializeToString,
                response_deserializer=identity__pb2.CredentialOfferToJsonResponse.FromString,
                )
        self.CredentialOfferFromJson = channel.unary_unary(
                '/bloock.IdentityService/CredentialOfferFromJson',
                request_serializer=identity__pb2.CredentialOfferFromJsonRequest.SerializeToString,
                response_deserializer=identity__pb2.CredentialOfferFromJsonResponse.FromString,
                )
        self.CredentialOfferRedeem = channel.unary_unary(
                '/bloock.IdentityService/CredentialOfferRedeem',
                request_serializer=identity__pb2.CredentialOfferRedeemRequest.SerializeToString,
                response_deserializer=identity__pb2.CredentialOfferRedeemResponse.FromString,
                )
        self.CredentialToJson = channel.unary_unary(
                '/bloock.IdentityService/CredentialToJson',
                request_serializer=identity__pb2.CredentialToJsonRequest.SerializeToString,
                response_deserializer=identity__pb2.CredentialToJsonResponse.FromString,
                )
        self.CredentialFromJson = channel.unary_unary(
                '/bloock.IdentityService/CredentialFromJson',
                request_serializer=identity__pb2.CredentialFromJsonRequest.SerializeToString,
                response_deserializer=identity__pb2.CredentialFromJsonResponse.FromString,
                )
        self.VerifyCredential = channel.unary_unary(
                '/bloock.IdentityService/VerifyCredential',
                request_serializer=identity__pb2.VerifyCredentialRequest.SerializeToString,
                response_deserializer=identity__pb2.VerifyCredentialResponse.FromString,
                )
        self.RevokeCredential = channel.unary_unary(
                '/bloock.IdentityService/RevokeCredential',
                request_serializer=identity__pb2.RevokeCredentialRequest.SerializeToString,
                response_deserializer=identity__pb2.RevokeCredentialResponse.FromString,
                )


class IdentityServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateIdentity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoadIdentity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BuildSchema(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSchema(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateCredential(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOffer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WaitOffer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CredentialOfferToJson(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CredentialOfferFromJson(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CredentialOfferRedeem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CredentialToJson(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CredentialFromJson(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VerifyCredential(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RevokeCredential(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_IdentityServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateIdentity': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateIdentity,
                    request_deserializer=identity__pb2.CreateIdentityRequest.FromString,
                    response_serializer=identity__pb2.CreateIdentityResponse.SerializeToString,
            ),
            'LoadIdentity': grpc.unary_unary_rpc_method_handler(
                    servicer.LoadIdentity,
                    request_deserializer=identity__pb2.LoadIdentityRequest.FromString,
                    response_serializer=identity__pb2.LoadIdentityResponse.SerializeToString,
            ),
            'BuildSchema': grpc.unary_unary_rpc_method_handler(
                    servicer.BuildSchema,
                    request_deserializer=identity__pb2.BuildSchemaRequest.FromString,
                    response_serializer=identity__pb2.BuildSchemaResponse.SerializeToString,
            ),
            'GetSchema': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSchema,
                    request_deserializer=identity__pb2.GetSchemaRequest.FromString,
                    response_serializer=identity__pb2.GetSchemaResponse.SerializeToString,
            ),
            'CreateCredential': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCredential,
                    request_deserializer=identity__pb2.CreateCredentialRequest.FromString,
                    response_serializer=identity__pb2.CreateCredentialResponse.SerializeToString,
            ),
            'GetOffer': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOffer,
                    request_deserializer=identity__pb2.GetOfferRequest.FromString,
                    response_serializer=identity__pb2.GetOfferResponse.SerializeToString,
            ),
            'WaitOffer': grpc.unary_unary_rpc_method_handler(
                    servicer.WaitOffer,
                    request_deserializer=identity__pb2.WaitOfferRequest.FromString,
                    response_serializer=identity__pb2.WaitOfferResponse.SerializeToString,
            ),
            'CredentialOfferToJson': grpc.unary_unary_rpc_method_handler(
                    servicer.CredentialOfferToJson,
                    request_deserializer=identity__pb2.CredentialOfferToJsonRequest.FromString,
                    response_serializer=identity__pb2.CredentialOfferToJsonResponse.SerializeToString,
            ),
            'CredentialOfferFromJson': grpc.unary_unary_rpc_method_handler(
                    servicer.CredentialOfferFromJson,
                    request_deserializer=identity__pb2.CredentialOfferFromJsonRequest.FromString,
                    response_serializer=identity__pb2.CredentialOfferFromJsonResponse.SerializeToString,
            ),
            'CredentialOfferRedeem': grpc.unary_unary_rpc_method_handler(
                    servicer.CredentialOfferRedeem,
                    request_deserializer=identity__pb2.CredentialOfferRedeemRequest.FromString,
                    response_serializer=identity__pb2.CredentialOfferRedeemResponse.SerializeToString,
            ),
            'CredentialToJson': grpc.unary_unary_rpc_method_handler(
                    servicer.CredentialToJson,
                    request_deserializer=identity__pb2.CredentialToJsonRequest.FromString,
                    response_serializer=identity__pb2.CredentialToJsonResponse.SerializeToString,
            ),
            'CredentialFromJson': grpc.unary_unary_rpc_method_handler(
                    servicer.CredentialFromJson,
                    request_deserializer=identity__pb2.CredentialFromJsonRequest.FromString,
                    response_serializer=identity__pb2.CredentialFromJsonResponse.SerializeToString,
            ),
            'VerifyCredential': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyCredential,
                    request_deserializer=identity__pb2.VerifyCredentialRequest.FromString,
                    response_serializer=identity__pb2.VerifyCredentialResponse.SerializeToString,
            ),
            'RevokeCredential': grpc.unary_unary_rpc_method_handler(
                    servicer.RevokeCredential,
                    request_deserializer=identity__pb2.RevokeCredentialRequest.FromString,
                    response_serializer=identity__pb2.RevokeCredentialResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'bloock.IdentityService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class IdentityService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateIdentity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.IdentityService/CreateIdentity',
            identity__pb2.CreateIdentityRequest.SerializeToString,
            identity__pb2.CreateIdentityResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LoadIdentity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.IdentityService/LoadIdentity',
            identity__pb2.LoadIdentityRequest.SerializeToString,
            identity__pb2.LoadIdentityResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BuildSchema(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.IdentityService/BuildSchema',
            identity__pb2.BuildSchemaRequest.SerializeToString,
            identity__pb2.BuildSchemaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSchema(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.IdentityService/GetSchema',
            identity__pb2.GetSchemaRequest.SerializeToString,
            identity__pb2.GetSchemaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateCredential(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.IdentityService/CreateCredential',
            identity__pb2.CreateCredentialRequest.SerializeToString,
            identity__pb2.CreateCredentialResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOffer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.IdentityService/GetOffer',
            identity__pb2.GetOfferRequest.SerializeToString,
            identity__pb2.GetOfferResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WaitOffer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.IdentityService/WaitOffer',
            identity__pb2.WaitOfferRequest.SerializeToString,
            identity__pb2.WaitOfferResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CredentialOfferToJson(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.IdentityService/CredentialOfferToJson',
            identity__pb2.CredentialOfferToJsonRequest.SerializeToString,
            identity__pb2.CredentialOfferToJsonResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CredentialOfferFromJson(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.IdentityService/CredentialOfferFromJson',
            identity__pb2.CredentialOfferFromJsonRequest.SerializeToString,
            identity__pb2.CredentialOfferFromJsonResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CredentialOfferRedeem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.IdentityService/CredentialOfferRedeem',
            identity__pb2.CredentialOfferRedeemRequest.SerializeToString,
            identity__pb2.CredentialOfferRedeemResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CredentialToJson(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.IdentityService/CredentialToJson',
            identity__pb2.CredentialToJsonRequest.SerializeToString,
            identity__pb2.CredentialToJsonResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CredentialFromJson(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.IdentityService/CredentialFromJson',
            identity__pb2.CredentialFromJsonRequest.SerializeToString,
            identity__pb2.CredentialFromJsonResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VerifyCredential(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.IdentityService/VerifyCredential',
            identity__pb2.VerifyCredentialRequest.SerializeToString,
            identity__pb2.VerifyCredentialResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RevokeCredential(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bloock.IdentityService/RevokeCredential',
            identity__pb2.RevokeCredentialRequest.SerializeToString,
            identity__pb2.RevokeCredentialResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
