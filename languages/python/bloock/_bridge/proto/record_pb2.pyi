"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import bloock_pb2
import builtins
import collections.abc
import config_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class Record(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HASH_FIELD_NUMBER: builtins.int
    hash: builtins.str
    def __init__(
        self,
        *,
        hash: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["hash", b"hash"]) -> None: ...

global___Record = Record

class RecordReceipt(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ANCHOR_FIELD_NUMBER: builtins.int
    CLIENT_FIELD_NUMBER: builtins.int
    RECORD_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    anchor: builtins.int
    client: builtins.str
    record: builtins.str
    status: builtins.str
    def __init__(
        self,
        *,
        anchor: builtins.int = ...,
        client: builtins.str = ...,
        record: builtins.str = ...,
        status: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["anchor", b"anchor", "client", b"client", "record", b"record", "status", b"status"]) -> None: ...

global___RecordReceipt = RecordReceipt

class SendRecordsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONFIG_DATA_FIELD_NUMBER: builtins.int
    RECORDS_FIELD_NUMBER: builtins.int
    @property
    def config_data(self) -> config_pb2.ConfigData: ...
    @property
    def records(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Record]: ...
    def __init__(
        self,
        *,
        config_data: config_pb2.ConfigData | None = ...,
        records: collections.abc.Iterable[global___Record] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["config_data", b"config_data"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["config_data", b"config_data", "records", b"records"]) -> None: ...

global___SendRecordsRequest = SendRecordsRequest

class SendRecordsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RECORDS_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    @property
    def records(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RecordReceipt]: ...
    @property
    def error(self) -> bloock_pb2.Error: ...
    def __init__(
        self,
        *,
        records: collections.abc.Iterable[global___RecordReceipt] | None = ...,
        error: bloock_pb2.Error | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_error", b"_error", "error", b"error"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_error", b"_error", "error", b"error", "records", b"records"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_error", b"_error"]) -> typing_extensions.Literal["error"] | None: ...

global___SendRecordsResponse = SendRecordsResponse

class FromHashRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HASH_FIELD_NUMBER: builtins.int
    hash: builtins.str
    def __init__(
        self,
        *,
        hash: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["hash", b"hash"]) -> None: ...

global___FromHashRequest = FromHashRequest

class FromHexRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HEX_FIELD_NUMBER: builtins.int
    hex: builtins.str
    def __init__(
        self,
        *,
        hex: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["hex", b"hex"]) -> None: ...

global___FromHexRequest = FromHexRequest

class FromStringRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STR_FIELD_NUMBER: builtins.int
    str: builtins.str
    def __init__(
        self,
        *,
        str: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["str", b"str"]) -> None: ...

global___FromStringRequest = FromStringRequest

class FromTypedArrayRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ARRAY_FIELD_NUMBER: builtins.int
    array: builtins.bytes
    def __init__(
        self,
        *,
        array: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["array", b"array"]) -> None: ...

global___FromTypedArrayRequest = FromTypedArrayRequest

class FromHexResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RECORD_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    @property
    def record(self) -> global___Record: ...
    @property
    def error(self) -> bloock_pb2.Error: ...
    def __init__(
        self,
        *,
        record: global___Record | None = ...,
        error: bloock_pb2.Error | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_error", b"_error", "_record", b"_record", "error", b"error", "record", b"record"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_error", b"_error", "_record", b"_record", "error", b"error", "record", b"record"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_error", b"_error"]) -> typing_extensions.Literal["error"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_record", b"_record"]) -> typing_extensions.Literal["record"] | None: ...

global___FromHexResponse = FromHexResponse
