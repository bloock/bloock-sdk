"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import config_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import shared_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _RecordTypes:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _RecordTypesEnumTypeWrapper(
    google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_RecordTypes.ValueType],
    builtins.type,
):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    STRING: _RecordTypes.ValueType  # 0
    HEX: _RecordTypes.ValueType  # 1
    JSON: _RecordTypes.ValueType  # 2
    BYTES: _RecordTypes.ValueType  # 3
    FILE: _RecordTypes.ValueType  # 4
    RECORD: _RecordTypes.ValueType  # 5
    LOADER: _RecordTypes.ValueType  # 6

class RecordTypes(_RecordTypes, metaclass=_RecordTypesEnumTypeWrapper): ...

STRING: RecordTypes.ValueType  # 0
HEX: RecordTypes.ValueType  # 1
JSON: RecordTypes.ValueType  # 2
BYTES: RecordTypes.ValueType  # 3
FILE: RecordTypes.ValueType  # 4
RECORD: RecordTypes.ValueType  # 5
LOADER: RecordTypes.ValueType  # 6
global___RecordTypes = RecordTypes

class _SignerAlg:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _SignerAlgEnumTypeWrapper(
    google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SignerAlg.ValueType],
    builtins.type,
):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    ES256K: _SignerAlg.ValueType  # 0

class SignerAlg(_SignerAlg, metaclass=_SignerAlgEnumTypeWrapper): ...

ES256K: SignerAlg.ValueType  # 0
global___SignerAlg = SignerAlg

class _EncryptionAlg:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _EncryptionAlgEnumTypeWrapper(
    google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[
        _EncryptionAlg.ValueType
    ],
    builtins.type,
):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    A256GCM: _EncryptionAlg.ValueType  # 0
    RSA: _EncryptionAlg.ValueType  # 1
    ECIES: _EncryptionAlg.ValueType  # 2

class EncryptionAlg(_EncryptionAlg, metaclass=_EncryptionAlgEnumTypeWrapper): ...

A256GCM: EncryptionAlg.ValueType  # 0
RSA: EncryptionAlg.ValueType  # 1
ECIES: EncryptionAlg.ValueType  # 2
global___EncryptionAlg = EncryptionAlg

class _DataAvailabilityType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _DataAvailabilityTypeEnumTypeWrapper(
    google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[
        _DataAvailabilityType.ValueType
    ],
    builtins.type,
):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    HOSTED: _DataAvailabilityType.ValueType  # 0
    IPFS: _DataAvailabilityType.ValueType  # 1

class DataAvailabilityType(
    _DataAvailabilityType, metaclass=_DataAvailabilityTypeEnumTypeWrapper
): ...

HOSTED: DataAvailabilityType.ValueType  # 0
IPFS: DataAvailabilityType.ValueType  # 1
global___DataAvailabilityType = DataAvailabilityType

class GenerateKeysRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONFIG_DATA_FIELD_NUMBER: builtins.int
    @property
    def config_data(self) -> config_pb2.ConfigData: ...
    def __init__(
        self,
        *,
        config_data: config_pb2.ConfigData | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["config_data", b"config_data"]
    ) -> builtins.bool: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["config_data", b"config_data"]
    ) -> None: ...

global___GenerateKeysRequest = GenerateKeysRequest

class GenerateKeysResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PRIVATEKEY_FIELD_NUMBER: builtins.int
    PUBLICKEY_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    privateKey: builtins.str
    publicKey: builtins.str
    @property
    def error(self) -> shared_pb2.Error: ...
    def __init__(
        self,
        *,
        privateKey: builtins.str = ...,
        publicKey: builtins.str = ...,
        error: shared_pb2.Error | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal["_error", b"_error", "error", b"error"],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_error",
            b"_error",
            "error",
            b"error",
            "privateKey",
            b"privateKey",
            "publicKey",
            b"publicKey",
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_error", b"_error"]
    ) -> typing_extensions.Literal["error"] | None: ...

global___GenerateKeysResponse = GenerateKeysResponse

class GenerateRsaKeyPairRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONFIG_DATA_FIELD_NUMBER: builtins.int
    @property
    def config_data(self) -> config_pb2.ConfigData: ...
    def __init__(
        self,
        *,
        config_data: config_pb2.ConfigData | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["config_data", b"config_data"]
    ) -> builtins.bool: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["config_data", b"config_data"]
    ) -> None: ...

global___GenerateRsaKeyPairRequest = GenerateRsaKeyPairRequest

class GenerateRsaKeyPairResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PRIVATEKEY_FIELD_NUMBER: builtins.int
    PUBLICKEY_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    privateKey: builtins.str
    publicKey: builtins.str
    @property
    def error(self) -> shared_pb2.Error: ...
    def __init__(
        self,
        *,
        privateKey: builtins.str = ...,
        publicKey: builtins.str = ...,
        error: shared_pb2.Error | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal["_error", b"_error", "error", b"error"],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_error",
            b"_error",
            "error",
            b"error",
            "privateKey",
            b"privateKey",
            "publicKey",
            b"publicKey",
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_error", b"_error"]
    ) -> typing_extensions.Literal["error"] | None: ...

global___GenerateRsaKeyPairResponse = GenerateRsaKeyPairResponse

class GenerateEciesKeyPairRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONFIG_DATA_FIELD_NUMBER: builtins.int
    @property
    def config_data(self) -> config_pb2.ConfigData: ...
    def __init__(
        self,
        *,
        config_data: config_pb2.ConfigData | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["config_data", b"config_data"]
    ) -> builtins.bool: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["config_data", b"config_data"]
    ) -> None: ...

global___GenerateEciesKeyPairRequest = GenerateEciesKeyPairRequest

class GenerateEciesKeyPairResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PRIVATEKEY_FIELD_NUMBER: builtins.int
    PUBLICKEY_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    privateKey: builtins.str
    publicKey: builtins.str
    @property
    def error(self) -> shared_pb2.Error: ...
    def __init__(
        self,
        *,
        privateKey: builtins.str = ...,
        publicKey: builtins.str = ...,
        error: shared_pb2.Error | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal["_error", b"_error", "error", b"error"],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_error",
            b"_error",
            "error",
            b"error",
            "privateKey",
            b"privateKey",
            "publicKey",
            b"publicKey",
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_error", b"_error"]
    ) -> typing_extensions.Literal["error"] | None: ...

global___GenerateEciesKeyPairResponse = GenerateEciesKeyPairResponse

class RecordHash(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HASH_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    hash: builtins.str
    @property
    def error(self) -> shared_pb2.Error: ...
    def __init__(
        self,
        *,
        hash: builtins.str = ...,
        error: shared_pb2.Error | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal["_error", b"_error", "error", b"error"],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_error", b"_error", "error", b"error", "hash", b"hash"
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_error", b"_error"]
    ) -> typing_extensions.Literal["error"] | None: ...

global___RecordHash = RecordHash

class RecordSignatures(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SIGNATURES_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    @property
    def signatures(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___Signature
    ]: ...
    @property
    def error(self) -> shared_pb2.Error: ...
    def __init__(
        self,
        *,
        signatures: collections.abc.Iterable[global___Signature] | None = ...,
        error: shared_pb2.Error | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal["_error", b"_error", "error", b"error"],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_error", b"_error", "error", b"error", "signatures", b"signatures"
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_error", b"_error"]
    ) -> typing_extensions.Literal["error"] | None: ...

global___RecordSignatures = RecordSignatures

class RecordHeader(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TY_FIELD_NUMBER: builtins.int
    ty: builtins.str
    def __init__(
        self,
        *,
        ty: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["ty", b"ty"]
    ) -> None: ...

global___RecordHeader = RecordHeader

class Record(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONFIG_DATA_FIELD_NUMBER: builtins.int
    PAYLOAD_FIELD_NUMBER: builtins.int
    @property
    def config_data(self) -> config_pb2.ConfigData: ...
    payload: builtins.bytes
    def __init__(
        self,
        *,
        config_data: config_pb2.ConfigData | None = ...,
        payload: builtins.bytes = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "_config_data", b"_config_data", "config_data", b"config_data"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_config_data",
            b"_config_data",
            "config_data",
            b"config_data",
            "payload",
            b"payload",
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_config_data", b"_config_data"]
    ) -> typing_extensions.Literal["config_data"] | None: ...

global___Record = Record

class Signer(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ALG_FIELD_NUMBER: builtins.int
    ARGS_FIELD_NUMBER: builtins.int
    alg: global___SignerAlg.ValueType
    @property
    def args(self) -> global___SignerArgs: ...
    def __init__(
        self,
        *,
        alg: global___SignerAlg.ValueType = ...,
        args: global___SignerArgs | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["args", b"args"]
    ) -> builtins.bool: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["alg", b"alg", "args", b"args"]
    ) -> None: ...

global___Signer = Signer

class SignerArgs(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PRIVATE_KEY_FIELD_NUMBER: builtins.int
    COMMON_NAME_FIELD_NUMBER: builtins.int
    private_key: builtins.str
    common_name: builtins.str
    def __init__(
        self,
        *,
        private_key: builtins.str | None = ...,
        common_name: builtins.str | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "_common_name",
            b"_common_name",
            "_private_key",
            b"_private_key",
            "common_name",
            b"common_name",
            "private_key",
            b"private_key",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_common_name",
            b"_common_name",
            "_private_key",
            b"_private_key",
            "common_name",
            b"common_name",
            "private_key",
            b"private_key",
        ],
    ) -> None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_common_name", b"_common_name"]
    ) -> typing_extensions.Literal["common_name"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_private_key", b"_private_key"]
    ) -> typing_extensions.Literal["private_key"] | None: ...

global___SignerArgs = SignerArgs

class Encrypter(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ALG_FIELD_NUMBER: builtins.int
    ARGS_FIELD_NUMBER: builtins.int
    alg: global___EncryptionAlg.ValueType
    @property
    def args(self) -> global___EncrypterArgs: ...
    def __init__(
        self,
        *,
        alg: global___EncryptionAlg.ValueType = ...,
        args: global___EncrypterArgs | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["args", b"args"]
    ) -> builtins.bool: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["alg", b"alg", "args", b"args"]
    ) -> None: ...

global___Encrypter = Encrypter

class EncrypterArgs(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEY_FIELD_NUMBER: builtins.int
    key: builtins.str
    def __init__(
        self,
        *,
        key: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["key", b"key"]
    ) -> None: ...

global___EncrypterArgs = EncrypterArgs

class Decrypter(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ALG_FIELD_NUMBER: builtins.int
    ARGS_FIELD_NUMBER: builtins.int
    alg: global___EncryptionAlg.ValueType
    @property
    def args(self) -> global___DecrypterArgs: ...
    def __init__(
        self,
        *,
        alg: global___EncryptionAlg.ValueType = ...,
        args: global___DecrypterArgs | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["args", b"args"]
    ) -> builtins.bool: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["alg", b"alg", "args", b"args"]
    ) -> None: ...

global___Decrypter = Decrypter

class DecrypterArgs(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEY_FIELD_NUMBER: builtins.int
    key: builtins.str
    def __init__(
        self,
        *,
        key: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["key", b"key"]
    ) -> None: ...

global___DecrypterArgs = DecrypterArgs

class Signature(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SIGNATURE_FIELD_NUMBER: builtins.int
    PROTECTED_FIELD_NUMBER: builtins.int
    HEADER_FIELD_NUMBER: builtins.int
    signature: builtins.str
    protected: builtins.str
    @property
    def header(self) -> global___SignatureHeader: ...
    def __init__(
        self,
        *,
        signature: builtins.str = ...,
        protected: builtins.str = ...,
        header: global___SignatureHeader | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["header", b"header"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "header", b"header", "protected", b"protected", "signature", b"signature"
        ],
    ) -> None: ...

global___Signature = Signature

class SignatureHeader(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ALG_FIELD_NUMBER: builtins.int
    KID_FIELD_NUMBER: builtins.int
    alg: builtins.str
    kid: builtins.str
    def __init__(
        self,
        *,
        alg: builtins.str = ...,
        kid: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["alg", b"alg", "kid", b"kid"]
    ) -> None: ...

global___SignatureHeader = SignatureHeader

class RecordReceipt(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ANCHOR_FIELD_NUMBER: builtins.int
    CLIENT_FIELD_NUMBER: builtins.int
    RECORD_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    anchor: builtins.int
    client: builtins.str
    record: builtins.str
    status: builtins.str
    def __init__(
        self,
        *,
        anchor: builtins.int = ...,
        client: builtins.str = ...,
        record: builtins.str = ...,
        status: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "anchor",
            b"anchor",
            "client",
            b"client",
            "record",
            b"record",
            "status",
            b"status",
        ],
    ) -> None: ...

global___RecordReceipt = RecordReceipt

class RecordBuilderFromStringRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONFIG_DATA_FIELD_NUMBER: builtins.int
    PAYLOAD_FIELD_NUMBER: builtins.int
    SIGNER_FIELD_NUMBER: builtins.int
    ENCRYPTER_FIELD_NUMBER: builtins.int
    DECRYPTER_FIELD_NUMBER: builtins.int
    @property
    def config_data(self) -> config_pb2.ConfigData: ...
    payload: builtins.str
    @property
    def signer(self) -> global___Signer: ...
    @property
    def encrypter(self) -> global___Encrypter: ...
    @property
    def decrypter(self) -> global___Decrypter: ...
    def __init__(
        self,
        *,
        config_data: config_pb2.ConfigData | None = ...,
        payload: builtins.str = ...,
        signer: global___Signer | None = ...,
        encrypter: global___Encrypter | None = ...,
        decrypter: global___Decrypter | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "_decrypter",
            b"_decrypter",
            "_encrypter",
            b"_encrypter",
            "_signer",
            b"_signer",
            "config_data",
            b"config_data",
            "decrypter",
            b"decrypter",
            "encrypter",
            b"encrypter",
            "signer",
            b"signer",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_decrypter",
            b"_decrypter",
            "_encrypter",
            b"_encrypter",
            "_signer",
            b"_signer",
            "config_data",
            b"config_data",
            "decrypter",
            b"decrypter",
            "encrypter",
            b"encrypter",
            "payload",
            b"payload",
            "signer",
            b"signer",
        ],
    ) -> None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_decrypter", b"_decrypter"]
    ) -> typing_extensions.Literal["decrypter"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_encrypter", b"_encrypter"]
    ) -> typing_extensions.Literal["encrypter"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_signer", b"_signer"]
    ) -> typing_extensions.Literal["signer"] | None: ...

global___RecordBuilderFromStringRequest = RecordBuilderFromStringRequest

class RecordBuilderFromHexRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONFIG_DATA_FIELD_NUMBER: builtins.int
    PAYLOAD_FIELD_NUMBER: builtins.int
    SIGNER_FIELD_NUMBER: builtins.int
    ENCRYPTER_FIELD_NUMBER: builtins.int
    DECRYPTER_FIELD_NUMBER: builtins.int
    @property
    def config_data(self) -> config_pb2.ConfigData: ...
    payload: builtins.str
    @property
    def signer(self) -> global___Signer: ...
    @property
    def encrypter(self) -> global___Encrypter: ...
    @property
    def decrypter(self) -> global___Decrypter: ...
    def __init__(
        self,
        *,
        config_data: config_pb2.ConfigData | None = ...,
        payload: builtins.str = ...,
        signer: global___Signer | None = ...,
        encrypter: global___Encrypter | None = ...,
        decrypter: global___Decrypter | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "_decrypter",
            b"_decrypter",
            "_encrypter",
            b"_encrypter",
            "_signer",
            b"_signer",
            "config_data",
            b"config_data",
            "decrypter",
            b"decrypter",
            "encrypter",
            b"encrypter",
            "signer",
            b"signer",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_decrypter",
            b"_decrypter",
            "_encrypter",
            b"_encrypter",
            "_signer",
            b"_signer",
            "config_data",
            b"config_data",
            "decrypter",
            b"decrypter",
            "encrypter",
            b"encrypter",
            "payload",
            b"payload",
            "signer",
            b"signer",
        ],
    ) -> None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_decrypter", b"_decrypter"]
    ) -> typing_extensions.Literal["decrypter"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_encrypter", b"_encrypter"]
    ) -> typing_extensions.Literal["encrypter"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_signer", b"_signer"]
    ) -> typing_extensions.Literal["signer"] | None: ...

global___RecordBuilderFromHexRequest = RecordBuilderFromHexRequest

class RecordBuilderFromJSONRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONFIG_DATA_FIELD_NUMBER: builtins.int
    PAYLOAD_FIELD_NUMBER: builtins.int
    SIGNER_FIELD_NUMBER: builtins.int
    ENCRYPTER_FIELD_NUMBER: builtins.int
    DECRYPTER_FIELD_NUMBER: builtins.int
    @property
    def config_data(self) -> config_pb2.ConfigData: ...
    payload: builtins.str
    @property
    def signer(self) -> global___Signer: ...
    @property
    def encrypter(self) -> global___Encrypter: ...
    @property
    def decrypter(self) -> global___Decrypter: ...
    def __init__(
        self,
        *,
        config_data: config_pb2.ConfigData | None = ...,
        payload: builtins.str = ...,
        signer: global___Signer | None = ...,
        encrypter: global___Encrypter | None = ...,
        decrypter: global___Decrypter | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "_decrypter",
            b"_decrypter",
            "_encrypter",
            b"_encrypter",
            "_signer",
            b"_signer",
            "config_data",
            b"config_data",
            "decrypter",
            b"decrypter",
            "encrypter",
            b"encrypter",
            "signer",
            b"signer",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_decrypter",
            b"_decrypter",
            "_encrypter",
            b"_encrypter",
            "_signer",
            b"_signer",
            "config_data",
            b"config_data",
            "decrypter",
            b"decrypter",
            "encrypter",
            b"encrypter",
            "payload",
            b"payload",
            "signer",
            b"signer",
        ],
    ) -> None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_decrypter", b"_decrypter"]
    ) -> typing_extensions.Literal["decrypter"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_encrypter", b"_encrypter"]
    ) -> typing_extensions.Literal["encrypter"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_signer", b"_signer"]
    ) -> typing_extensions.Literal["signer"] | None: ...

global___RecordBuilderFromJSONRequest = RecordBuilderFromJSONRequest

class RecordBuilderFromBytesRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONFIG_DATA_FIELD_NUMBER: builtins.int
    PAYLOAD_FIELD_NUMBER: builtins.int
    SIGNER_FIELD_NUMBER: builtins.int
    ENCRYPTER_FIELD_NUMBER: builtins.int
    DECRYPTER_FIELD_NUMBER: builtins.int
    @property
    def config_data(self) -> config_pb2.ConfigData: ...
    payload: builtins.bytes
    @property
    def signer(self) -> global___Signer: ...
    @property
    def encrypter(self) -> global___Encrypter: ...
    @property
    def decrypter(self) -> global___Decrypter: ...
    def __init__(
        self,
        *,
        config_data: config_pb2.ConfigData | None = ...,
        payload: builtins.bytes = ...,
        signer: global___Signer | None = ...,
        encrypter: global___Encrypter | None = ...,
        decrypter: global___Decrypter | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "_decrypter",
            b"_decrypter",
            "_encrypter",
            b"_encrypter",
            "_signer",
            b"_signer",
            "config_data",
            b"config_data",
            "decrypter",
            b"decrypter",
            "encrypter",
            b"encrypter",
            "signer",
            b"signer",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_decrypter",
            b"_decrypter",
            "_encrypter",
            b"_encrypter",
            "_signer",
            b"_signer",
            "config_data",
            b"config_data",
            "decrypter",
            b"decrypter",
            "encrypter",
            b"encrypter",
            "payload",
            b"payload",
            "signer",
            b"signer",
        ],
    ) -> None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_decrypter", b"_decrypter"]
    ) -> typing_extensions.Literal["decrypter"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_encrypter", b"_encrypter"]
    ) -> typing_extensions.Literal["encrypter"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_signer", b"_signer"]
    ) -> typing_extensions.Literal["signer"] | None: ...

global___RecordBuilderFromBytesRequest = RecordBuilderFromBytesRequest

class RecordBuilderFromFileRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONFIG_DATA_FIELD_NUMBER: builtins.int
    PAYLOAD_FIELD_NUMBER: builtins.int
    SIGNER_FIELD_NUMBER: builtins.int
    ENCRYPTER_FIELD_NUMBER: builtins.int
    DECRYPTER_FIELD_NUMBER: builtins.int
    @property
    def config_data(self) -> config_pb2.ConfigData: ...
    payload: builtins.bytes
    @property
    def signer(self) -> global___Signer: ...
    @property
    def encrypter(self) -> global___Encrypter: ...
    @property
    def decrypter(self) -> global___Decrypter: ...
    def __init__(
        self,
        *,
        config_data: config_pb2.ConfigData | None = ...,
        payload: builtins.bytes = ...,
        signer: global___Signer | None = ...,
        encrypter: global___Encrypter | None = ...,
        decrypter: global___Decrypter | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "_decrypter",
            b"_decrypter",
            "_encrypter",
            b"_encrypter",
            "_signer",
            b"_signer",
            "config_data",
            b"config_data",
            "decrypter",
            b"decrypter",
            "encrypter",
            b"encrypter",
            "signer",
            b"signer",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_decrypter",
            b"_decrypter",
            "_encrypter",
            b"_encrypter",
            "_signer",
            b"_signer",
            "config_data",
            b"config_data",
            "decrypter",
            b"decrypter",
            "encrypter",
            b"encrypter",
            "payload",
            b"payload",
            "signer",
            b"signer",
        ],
    ) -> None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_decrypter", b"_decrypter"]
    ) -> typing_extensions.Literal["decrypter"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_encrypter", b"_encrypter"]
    ) -> typing_extensions.Literal["encrypter"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_signer", b"_signer"]
    ) -> typing_extensions.Literal["signer"] | None: ...

global___RecordBuilderFromFileRequest = RecordBuilderFromFileRequest

class RecordBuilderFromRecordRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONFIG_DATA_FIELD_NUMBER: builtins.int
    PAYLOAD_FIELD_NUMBER: builtins.int
    SIGNER_FIELD_NUMBER: builtins.int
    ENCRYPTER_FIELD_NUMBER: builtins.int
    DECRYPTER_FIELD_NUMBER: builtins.int
    @property
    def config_data(self) -> config_pb2.ConfigData: ...
    @property
    def payload(self) -> global___Record: ...
    @property
    def signer(self) -> global___Signer: ...
    @property
    def encrypter(self) -> global___Encrypter: ...
    @property
    def decrypter(self) -> global___Decrypter: ...
    def __init__(
        self,
        *,
        config_data: config_pb2.ConfigData | None = ...,
        payload: global___Record | None = ...,
        signer: global___Signer | None = ...,
        encrypter: global___Encrypter | None = ...,
        decrypter: global___Decrypter | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "_decrypter",
            b"_decrypter",
            "_encrypter",
            b"_encrypter",
            "_signer",
            b"_signer",
            "config_data",
            b"config_data",
            "decrypter",
            b"decrypter",
            "encrypter",
            b"encrypter",
            "payload",
            b"payload",
            "signer",
            b"signer",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_decrypter",
            b"_decrypter",
            "_encrypter",
            b"_encrypter",
            "_signer",
            b"_signer",
            "config_data",
            b"config_data",
            "decrypter",
            b"decrypter",
            "encrypter",
            b"encrypter",
            "payload",
            b"payload",
            "signer",
            b"signer",
        ],
    ) -> None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_decrypter", b"_decrypter"]
    ) -> typing_extensions.Literal["decrypter"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_encrypter", b"_encrypter"]
    ) -> typing_extensions.Literal["encrypter"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_signer", b"_signer"]
    ) -> typing_extensions.Literal["signer"] | None: ...

global___RecordBuilderFromRecordRequest = RecordBuilderFromRecordRequest

class RecordBuilderResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RECORD_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    @property
    def record(self) -> global___Record: ...
    @property
    def error(self) -> shared_pb2.Error: ...
    def __init__(
        self,
        *,
        record: global___Record | None = ...,
        error: shared_pb2.Error | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "_error", b"_error", "error", b"error", "record", b"record"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_error", b"_error", "error", b"error", "record", b"record"
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_error", b"_error"]
    ) -> typing_extensions.Literal["error"] | None: ...

global___RecordBuilderResponse = RecordBuilderResponse

class SendRecordsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONFIG_DATA_FIELD_NUMBER: builtins.int
    RECORDS_FIELD_NUMBER: builtins.int
    @property
    def config_data(self) -> config_pb2.ConfigData: ...
    @property
    def records(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___Record
    ]: ...
    def __init__(
        self,
        *,
        config_data: config_pb2.ConfigData | None = ...,
        records: collections.abc.Iterable[global___Record] | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["config_data", b"config_data"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "config_data", b"config_data", "records", b"records"
        ],
    ) -> None: ...

global___SendRecordsRequest = SendRecordsRequest

class SendRecordsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RECORDS_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    @property
    def records(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___RecordReceipt
    ]: ...
    @property
    def error(self) -> shared_pb2.Error: ...
    def __init__(
        self,
        *,
        records: collections.abc.Iterable[global___RecordReceipt] | None = ...,
        error: shared_pb2.Error | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal["_error", b"_error", "error", b"error"],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_error", b"_error", "error", b"error", "records", b"records"
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_error", b"_error"]
    ) -> typing_extensions.Literal["error"] | None: ...

global___SendRecordsResponse = SendRecordsResponse

class Loader(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TYPE_FIELD_NUMBER: builtins.int
    ARGS_FIELD_NUMBER: builtins.int
    type: global___DataAvailabilityType.ValueType
    @property
    def args(self) -> global___LoaderArgs: ...
    def __init__(
        self,
        *,
        type: global___DataAvailabilityType.ValueType = ...,
        args: global___LoaderArgs | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["args", b"args"]
    ) -> builtins.bool: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["args", b"args", "type", b"type"]
    ) -> None: ...

global___Loader = Loader

class LoaderArgs(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HASH_FIELD_NUMBER: builtins.int
    hash: builtins.str
    def __init__(
        self,
        *,
        hash: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["hash", b"hash"]
    ) -> None: ...

global___LoaderArgs = LoaderArgs

class RecordBuilderFromLoaderRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONFIG_DATA_FIELD_NUMBER: builtins.int
    LOADER_FIELD_NUMBER: builtins.int
    SIGNER_FIELD_NUMBER: builtins.int
    ENCRYPTER_FIELD_NUMBER: builtins.int
    DECRYPTER_FIELD_NUMBER: builtins.int
    @property
    def config_data(self) -> config_pb2.ConfigData: ...
    @property
    def loader(self) -> global___Loader: ...
    @property
    def signer(self) -> global___Signer: ...
    @property
    def encrypter(self) -> global___Encrypter: ...
    @property
    def decrypter(self) -> global___Decrypter: ...
    def __init__(
        self,
        *,
        config_data: config_pb2.ConfigData | None = ...,
        loader: global___Loader | None = ...,
        signer: global___Signer | None = ...,
        encrypter: global___Encrypter | None = ...,
        decrypter: global___Decrypter | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "_decrypter",
            b"_decrypter",
            "_encrypter",
            b"_encrypter",
            "_signer",
            b"_signer",
            "config_data",
            b"config_data",
            "decrypter",
            b"decrypter",
            "encrypter",
            b"encrypter",
            "loader",
            b"loader",
            "signer",
            b"signer",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_decrypter",
            b"_decrypter",
            "_encrypter",
            b"_encrypter",
            "_signer",
            b"_signer",
            "config_data",
            b"config_data",
            "decrypter",
            b"decrypter",
            "encrypter",
            b"encrypter",
            "loader",
            b"loader",
            "signer",
            b"signer",
        ],
    ) -> None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_decrypter", b"_decrypter"]
    ) -> typing_extensions.Literal["decrypter"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_encrypter", b"_encrypter"]
    ) -> typing_extensions.Literal["encrypter"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_signer", b"_signer"]
    ) -> typing_extensions.Literal["signer"] | None: ...

global___RecordBuilderFromLoaderRequest = RecordBuilderFromLoaderRequest

class Publisher(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TYPE_FIELD_NUMBER: builtins.int
    ARGS_FIELD_NUMBER: builtins.int
    type: global___DataAvailabilityType.ValueType
    @property
    def args(self) -> global___PublisherArgs: ...
    def __init__(
        self,
        *,
        type: global___DataAvailabilityType.ValueType = ...,
        args: global___PublisherArgs | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["args", b"args"]
    ) -> builtins.bool: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["args", b"args", "type", b"type"]
    ) -> None: ...

global___Publisher = Publisher

class PublisherArgs(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___PublisherArgs = PublisherArgs

class PublishRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONFIG_DATA_FIELD_NUMBER: builtins.int
    PUBLISHER_FIELD_NUMBER: builtins.int
    RECORD_FIELD_NUMBER: builtins.int
    @property
    def config_data(self) -> config_pb2.ConfigData: ...
    @property
    def publisher(self) -> global___Publisher: ...
    @property
    def record(self) -> global___Record: ...
    def __init__(
        self,
        *,
        config_data: config_pb2.ConfigData | None = ...,
        publisher: global___Publisher | None = ...,
        record: global___Record | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "config_data",
            b"config_data",
            "publisher",
            b"publisher",
            "record",
            b"record",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "config_data",
            b"config_data",
            "publisher",
            b"publisher",
            "record",
            b"record",
        ],
    ) -> None: ...

global___PublishRequest = PublishRequest

class PublishResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HASH_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    hash: builtins.str
    @property
    def error(self) -> shared_pb2.Error: ...
    def __init__(
        self,
        *,
        hash: builtins.str = ...,
        error: shared_pb2.Error | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal["_error", b"_error", "error", b"error"],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_error", b"_error", "error", b"error", "hash", b"hash"
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_error", b"_error"]
    ) -> typing_extensions.Literal["error"] | None: ...

global___PublishResponse = PublishResponse

class SignatureCommonNameRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONFIG_DATA_FIELD_NUMBER: builtins.int
    SIGNATURE_FIELD_NUMBER: builtins.int
    @property
    def config_data(self) -> config_pb2.ConfigData: ...
    @property
    def signature(self) -> global___Signature: ...
    def __init__(
        self,
        *,
        config_data: config_pb2.ConfigData | None = ...,
        signature: global___Signature | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "config_data", b"config_data", "signature", b"signature"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "config_data", b"config_data", "signature", b"signature"
        ],
    ) -> None: ...

global___SignatureCommonNameRequest = SignatureCommonNameRequest

class SignatureCommonNameResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    COMMON_NAME_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    common_name: builtins.str
    @property
    def error(self) -> shared_pb2.Error: ...
    def __init__(
        self,
        *,
        common_name: builtins.str = ...,
        error: shared_pb2.Error | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal["_error", b"_error", "error", b"error"],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_error", b"_error", "common_name", b"common_name", "error", b"error"
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_error", b"_error"]
    ) -> typing_extensions.Literal["error"] | None: ...

global___SignatureCommonNameResponse = SignatureCommonNameResponse
