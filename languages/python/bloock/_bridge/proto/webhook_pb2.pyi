"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import config_pb2
import google.protobuf.descriptor
import google.protobuf.message
import shared_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class VerifyWebhookSignatureRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONFIG_DATA_FIELD_NUMBER: builtins.int
    PAYLOAD_FIELD_NUMBER: builtins.int
    HEADER_FIELD_NUMBER: builtins.int
    SECRETKEY_FIELD_NUMBER: builtins.int
    ENFORCETOLERANCE_FIELD_NUMBER: builtins.int
    @property
    def config_data(self) -> config_pb2.ConfigData: ...
    payload: builtins.bytes
    header: builtins.str
    secretKey: builtins.str
    enforceTolerance: builtins.bool
    def __init__(
        self,
        *,
        config_data: config_pb2.ConfigData | None = ...,
        payload: builtins.bytes = ...,
        header: builtins.str = ...,
        secretKey: builtins.str = ...,
        enforceTolerance: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["config_data", b"config_data"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["config_data", b"config_data", "enforceTolerance", b"enforceTolerance", "header", b"header", "payload", b"payload", "secretKey", b"secretKey"]) -> None: ...

global___VerifyWebhookSignatureRequest = VerifyWebhookSignatureRequest

class VerifyWebhookSignatureResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    IS_VALID_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    is_valid: builtins.bool
    @property
    def error(self) -> shared_pb2.Error: ...
    def __init__(
        self,
        *,
        is_valid: builtins.bool = ...,
        error: shared_pb2.Error | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_error", b"_error", "error", b"error"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_error", b"_error", "error", b"error", "is_valid", b"is_valid"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_error", b"_error"]) -> typing_extensions.Literal["error"] | None: ...

global___VerifyWebhookSignatureResponse = VerifyWebhookSignatureResponse
