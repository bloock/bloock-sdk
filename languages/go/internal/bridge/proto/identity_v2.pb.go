// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.17.3
// source: identity_v2.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetSchemaRequestV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigData *ConfigData `protobuf:"bytes,1,opt,name=config_data,json=configData,proto3" json:"config_data,omitempty"`
	Id         string      `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetSchemaRequestV2) Reset() {
	*x = GetSchemaRequestV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_v2_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSchemaRequestV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSchemaRequestV2) ProtoMessage() {}

func (x *GetSchemaRequestV2) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v2_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSchemaRequestV2.ProtoReflect.Descriptor instead.
func (*GetSchemaRequestV2) Descriptor() ([]byte, []int) {
	return file_identity_v2_proto_rawDescGZIP(), []int{0}
}

func (x *GetSchemaRequestV2) GetConfigData() *ConfigData {
	if x != nil {
		return x.ConfigData
	}
	return nil
}

func (x *GetSchemaRequestV2) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetSchemaResponseV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schema *SchemaV2 `protobuf:"bytes,1,opt,name=schema,proto3" json:"schema,omitempty"`
	Error  *Error    `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *GetSchemaResponseV2) Reset() {
	*x = GetSchemaResponseV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_v2_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSchemaResponseV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSchemaResponseV2) ProtoMessage() {}

func (x *GetSchemaResponseV2) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v2_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSchemaResponseV2.ProtoReflect.Descriptor instead.
func (*GetSchemaResponseV2) Descriptor() ([]byte, []int) {
	return file_identity_v2_proto_rawDescGZIP(), []int{1}
}

func (x *GetSchemaResponseV2) GetSchema() *SchemaV2 {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *GetSchemaResponseV2) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type GetIssuerByKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Did   string `protobuf:"bytes,1,opt,name=did,proto3" json:"did,omitempty"`
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *GetIssuerByKeyResponse) Reset() {
	*x = GetIssuerByKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_v2_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIssuerByKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIssuerByKeyResponse) ProtoMessage() {}

func (x *GetIssuerByKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v2_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIssuerByKeyResponse.ProtoReflect.Descriptor instead.
func (*GetIssuerByKeyResponse) Descriptor() ([]byte, []int) {
	return file_identity_v2_proto_rawDescGZIP(), []int{2}
}

func (x *GetIssuerByKeyResponse) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *GetIssuerByKeyResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type GetCredentialProofRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigData   *ConfigData `protobuf:"bytes,1,opt,name=config_data,json=configData,proto3" json:"config_data,omitempty"`
	IssuerDid    string      `protobuf:"bytes,2,opt,name=issuer_did,json=issuerDid,proto3" json:"issuer_did,omitempty"`
	CredentialId string      `protobuf:"bytes,3,opt,name=credential_id,json=credentialId,proto3" json:"credential_id,omitempty"`
}

func (x *GetCredentialProofRequest) Reset() {
	*x = GetCredentialProofRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_v2_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCredentialProofRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCredentialProofRequest) ProtoMessage() {}

func (x *GetCredentialProofRequest) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v2_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCredentialProofRequest.ProtoReflect.Descriptor instead.
func (*GetCredentialProofRequest) Descriptor() ([]byte, []int) {
	return file_identity_v2_proto_rawDescGZIP(), []int{3}
}

func (x *GetCredentialProofRequest) GetConfigData() *ConfigData {
	if x != nil {
		return x.ConfigData
	}
	return nil
}

func (x *GetCredentialProofRequest) GetIssuerDid() string {
	if x != nil {
		return x.IssuerDid
	}
	return ""
}

func (x *GetCredentialProofRequest) GetCredentialId() string {
	if x != nil {
		return x.CredentialId
	}
	return ""
}

type GetCredentialProofResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proof *CredentialProofV2 `protobuf:"bytes,1,opt,name=proof,proto3" json:"proof,omitempty"`
	Error *Error             `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *GetCredentialProofResponse) Reset() {
	*x = GetCredentialProofResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_v2_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCredentialProofResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCredentialProofResponse) ProtoMessage() {}

func (x *GetCredentialProofResponse) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v2_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCredentialProofResponse.ProtoReflect.Descriptor instead.
func (*GetCredentialProofResponse) Descriptor() ([]byte, []int) {
	return file_identity_v2_proto_rawDescGZIP(), []int{4}
}

func (x *GetCredentialProofResponse) GetProof() *CredentialProofV2 {
	if x != nil {
		return x.Proof
	}
	return nil
}

func (x *GetCredentialProofResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type CredentialToJsonRequestV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigData *ConfigData   `protobuf:"bytes,1,opt,name=config_data,json=configData,proto3" json:"config_data,omitempty"`
	Credential *CredentialV2 `protobuf:"bytes,2,opt,name=credential,proto3" json:"credential,omitempty"`
}

func (x *CredentialToJsonRequestV2) Reset() {
	*x = CredentialToJsonRequestV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_v2_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CredentialToJsonRequestV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CredentialToJsonRequestV2) ProtoMessage() {}

func (x *CredentialToJsonRequestV2) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v2_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CredentialToJsonRequestV2.ProtoReflect.Descriptor instead.
func (*CredentialToJsonRequestV2) Descriptor() ([]byte, []int) {
	return file_identity_v2_proto_rawDescGZIP(), []int{5}
}

func (x *CredentialToJsonRequestV2) GetConfigData() *ConfigData {
	if x != nil {
		return x.ConfigData
	}
	return nil
}

func (x *CredentialToJsonRequestV2) GetCredential() *CredentialV2 {
	if x != nil {
		return x.Credential
	}
	return nil
}

type CredentialToJsonResponseV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Json  string `protobuf:"bytes,1,opt,name=json,proto3" json:"json,omitempty"`
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *CredentialToJsonResponseV2) Reset() {
	*x = CredentialToJsonResponseV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_v2_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CredentialToJsonResponseV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CredentialToJsonResponseV2) ProtoMessage() {}

func (x *CredentialToJsonResponseV2) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v2_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CredentialToJsonResponseV2.ProtoReflect.Descriptor instead.
func (*CredentialToJsonResponseV2) Descriptor() ([]byte, []int) {
	return file_identity_v2_proto_rawDescGZIP(), []int{6}
}

func (x *CredentialToJsonResponseV2) GetJson() string {
	if x != nil {
		return x.Json
	}
	return ""
}

func (x *CredentialToJsonResponseV2) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type CredentialFromJsonRequestV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigData *ConfigData `protobuf:"bytes,1,opt,name=config_data,json=configData,proto3" json:"config_data,omitempty"`
	Json       string      `protobuf:"bytes,2,opt,name=json,proto3" json:"json,omitempty"`
}

func (x *CredentialFromJsonRequestV2) Reset() {
	*x = CredentialFromJsonRequestV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_v2_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CredentialFromJsonRequestV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CredentialFromJsonRequestV2) ProtoMessage() {}

func (x *CredentialFromJsonRequestV2) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v2_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CredentialFromJsonRequestV2.ProtoReflect.Descriptor instead.
func (*CredentialFromJsonRequestV2) Descriptor() ([]byte, []int) {
	return file_identity_v2_proto_rawDescGZIP(), []int{7}
}

func (x *CredentialFromJsonRequestV2) GetConfigData() *ConfigData {
	if x != nil {
		return x.ConfigData
	}
	return nil
}

func (x *CredentialFromJsonRequestV2) GetJson() string {
	if x != nil {
		return x.Json
	}
	return ""
}

type CredentialFromJsonResponseV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Credential *CredentialV2 `protobuf:"bytes,1,opt,name=credential,proto3" json:"credential,omitempty"`
	Error      *Error        `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *CredentialFromJsonResponseV2) Reset() {
	*x = CredentialFromJsonResponseV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_v2_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CredentialFromJsonResponseV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CredentialFromJsonResponseV2) ProtoMessage() {}

func (x *CredentialFromJsonResponseV2) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v2_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CredentialFromJsonResponseV2.ProtoReflect.Descriptor instead.
func (*CredentialFromJsonResponseV2) Descriptor() ([]byte, []int) {
	return file_identity_v2_proto_rawDescGZIP(), []int{8}
}

func (x *CredentialFromJsonResponseV2) GetCredential() *CredentialV2 {
	if x != nil {
		return x.Credential
	}
	return nil
}

func (x *CredentialFromJsonResponseV2) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type CreateCredentialRequestV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigData         *ConfigData            `protobuf:"bytes,1,opt,name=config_data,json=configData,proto3" json:"config_data,omitempty"`
	SchemaId           string                 `protobuf:"bytes,2,opt,name=schema_id,json=schemaId,proto3" json:"schema_id,omitempty"`
	IssuerDid          string                 `protobuf:"bytes,3,opt,name=issuer_did,json=issuerDid,proto3" json:"issuer_did,omitempty"`
	HolderDid          string                 `protobuf:"bytes,4,opt,name=holder_did,json=holderDid,proto3" json:"holder_did,omitempty"`
	Expiration         int64                  `protobuf:"varint,5,opt,name=expiration,proto3" json:"expiration,omitempty"`
	Version            *int32                 `protobuf:"varint,6,opt,name=version,proto3,oneof" json:"version,omitempty"`
	Signer             *Signer                `protobuf:"bytes,7,opt,name=signer,proto3" json:"signer,omitempty"`
	StringAttributes   []*StringAttributeV2   `protobuf:"bytes,8,rep,name=string_attributes,json=stringAttributes,proto3" json:"string_attributes,omitempty"`
	IntegerAttributes  []*IntegerAttributeV2  `protobuf:"bytes,9,rep,name=integer_attributes,json=integerAttributes,proto3" json:"integer_attributes,omitempty"`
	DecimalAttributes  []*DecimalAttributeV2  `protobuf:"bytes,10,rep,name=decimal_attributes,json=decimalAttributes,proto3" json:"decimal_attributes,omitempty"`
	BooleanAttributes  []*BooleanAttributeV2  `protobuf:"bytes,11,rep,name=boolean_attributes,json=booleanAttributes,proto3" json:"boolean_attributes,omitempty"`
	DateAttributes     []*DateAttributeV2     `protobuf:"bytes,12,rep,name=date_attributes,json=dateAttributes,proto3" json:"date_attributes,omitempty"`
	DatetimeAttributes []*DateTimeAttributeV2 `protobuf:"bytes,13,rep,name=datetime_attributes,json=datetimeAttributes,proto3" json:"datetime_attributes,omitempty"`
}

func (x *CreateCredentialRequestV2) Reset() {
	*x = CreateCredentialRequestV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_v2_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCredentialRequestV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCredentialRequestV2) ProtoMessage() {}

func (x *CreateCredentialRequestV2) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v2_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCredentialRequestV2.ProtoReflect.Descriptor instead.
func (*CreateCredentialRequestV2) Descriptor() ([]byte, []int) {
	return file_identity_v2_proto_rawDescGZIP(), []int{9}
}

func (x *CreateCredentialRequestV2) GetConfigData() *ConfigData {
	if x != nil {
		return x.ConfigData
	}
	return nil
}

func (x *CreateCredentialRequestV2) GetSchemaId() string {
	if x != nil {
		return x.SchemaId
	}
	return ""
}

func (x *CreateCredentialRequestV2) GetIssuerDid() string {
	if x != nil {
		return x.IssuerDid
	}
	return ""
}

func (x *CreateCredentialRequestV2) GetHolderDid() string {
	if x != nil {
		return x.HolderDid
	}
	return ""
}

func (x *CreateCredentialRequestV2) GetExpiration() int64 {
	if x != nil {
		return x.Expiration
	}
	return 0
}

func (x *CreateCredentialRequestV2) GetVersion() int32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *CreateCredentialRequestV2) GetSigner() *Signer {
	if x != nil {
		return x.Signer
	}
	return nil
}

func (x *CreateCredentialRequestV2) GetStringAttributes() []*StringAttributeV2 {
	if x != nil {
		return x.StringAttributes
	}
	return nil
}

func (x *CreateCredentialRequestV2) GetIntegerAttributes() []*IntegerAttributeV2 {
	if x != nil {
		return x.IntegerAttributes
	}
	return nil
}

func (x *CreateCredentialRequestV2) GetDecimalAttributes() []*DecimalAttributeV2 {
	if x != nil {
		return x.DecimalAttributes
	}
	return nil
}

func (x *CreateCredentialRequestV2) GetBooleanAttributes() []*BooleanAttributeV2 {
	if x != nil {
		return x.BooleanAttributes
	}
	return nil
}

func (x *CreateCredentialRequestV2) GetDateAttributes() []*DateAttributeV2 {
	if x != nil {
		return x.DateAttributes
	}
	return nil
}

func (x *CreateCredentialRequestV2) GetDatetimeAttributes() []*DateTimeAttributeV2 {
	if x != nil {
		return x.DatetimeAttributes
	}
	return nil
}

type BuildSchemaRequestV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigData            *ConfigData                         `protobuf:"bytes,1,opt,name=config_data,json=configData,proto3" json:"config_data,omitempty"`
	DisplayName           string                              `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	SchemaType            string                              `protobuf:"bytes,3,opt,name=schema_type,json=schemaType,proto3" json:"schema_type,omitempty"`
	Version               string                              `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	Description           string                              `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	StringAttributes      []*StringAttributeDefinitionV2      `protobuf:"bytes,6,rep,name=string_attributes,json=stringAttributes,proto3" json:"string_attributes,omitempty"`
	IntegerAttributes     []*IntegerAttributeDefinitionV2     `protobuf:"bytes,7,rep,name=integer_attributes,json=integerAttributes,proto3" json:"integer_attributes,omitempty"`
	DecimalAttributes     []*DecimalAttributeDefinitionV2     `protobuf:"bytes,8,rep,name=decimal_attributes,json=decimalAttributes,proto3" json:"decimal_attributes,omitempty"`
	BooleanAttributes     []*BooleanAttributeDefinitionV2     `protobuf:"bytes,9,rep,name=boolean_attributes,json=booleanAttributes,proto3" json:"boolean_attributes,omitempty"`
	DateAttributes        []*DateAttributeDefinitionV2        `protobuf:"bytes,10,rep,name=date_attributes,json=dateAttributes,proto3" json:"date_attributes,omitempty"`
	DatetimeAttributes    []*DateTimeAttributeDefinitionV2    `protobuf:"bytes,11,rep,name=datetime_attributes,json=datetimeAttributes,proto3" json:"datetime_attributes,omitempty"`
	StringEnumAttributes  []*StringEnumAttributeDefinitionV2  `protobuf:"bytes,12,rep,name=string_enum_attributes,json=stringEnumAttributes,proto3" json:"string_enum_attributes,omitempty"`
	IntegerEnumAttributes []*IntegerEnumAttributeDefinitionV2 `protobuf:"bytes,13,rep,name=integer_enum_attributes,json=integerEnumAttributes,proto3" json:"integer_enum_attributes,omitempty"`
	DecimalEnumAttributes []*DecimalEnumAttributeDefinitionV2 `protobuf:"bytes,14,rep,name=decimal_enum_attributes,json=decimalEnumAttributes,proto3" json:"decimal_enum_attributes,omitempty"`
}

func (x *BuildSchemaRequestV2) Reset() {
	*x = BuildSchemaRequestV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_v2_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildSchemaRequestV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildSchemaRequestV2) ProtoMessage() {}

func (x *BuildSchemaRequestV2) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v2_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildSchemaRequestV2.ProtoReflect.Descriptor instead.
func (*BuildSchemaRequestV2) Descriptor() ([]byte, []int) {
	return file_identity_v2_proto_rawDescGZIP(), []int{10}
}

func (x *BuildSchemaRequestV2) GetConfigData() *ConfigData {
	if x != nil {
		return x.ConfigData
	}
	return nil
}

func (x *BuildSchemaRequestV2) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *BuildSchemaRequestV2) GetSchemaType() string {
	if x != nil {
		return x.SchemaType
	}
	return ""
}

func (x *BuildSchemaRequestV2) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *BuildSchemaRequestV2) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *BuildSchemaRequestV2) GetStringAttributes() []*StringAttributeDefinitionV2 {
	if x != nil {
		return x.StringAttributes
	}
	return nil
}

func (x *BuildSchemaRequestV2) GetIntegerAttributes() []*IntegerAttributeDefinitionV2 {
	if x != nil {
		return x.IntegerAttributes
	}
	return nil
}

func (x *BuildSchemaRequestV2) GetDecimalAttributes() []*DecimalAttributeDefinitionV2 {
	if x != nil {
		return x.DecimalAttributes
	}
	return nil
}

func (x *BuildSchemaRequestV2) GetBooleanAttributes() []*BooleanAttributeDefinitionV2 {
	if x != nil {
		return x.BooleanAttributes
	}
	return nil
}

func (x *BuildSchemaRequestV2) GetDateAttributes() []*DateAttributeDefinitionV2 {
	if x != nil {
		return x.DateAttributes
	}
	return nil
}

func (x *BuildSchemaRequestV2) GetDatetimeAttributes() []*DateTimeAttributeDefinitionV2 {
	if x != nil {
		return x.DatetimeAttributes
	}
	return nil
}

func (x *BuildSchemaRequestV2) GetStringEnumAttributes() []*StringEnumAttributeDefinitionV2 {
	if x != nil {
		return x.StringEnumAttributes
	}
	return nil
}

func (x *BuildSchemaRequestV2) GetIntegerEnumAttributes() []*IntegerEnumAttributeDefinitionV2 {
	if x != nil {
		return x.IntegerEnumAttributes
	}
	return nil
}

func (x *BuildSchemaRequestV2) GetDecimalEnumAttributes() []*DecimalEnumAttributeDefinitionV2 {
	if x != nil {
		return x.DecimalEnumAttributes
	}
	return nil
}

type CreateIdentityV2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IssuerKey  *IdentityKey `protobuf:"bytes,1,opt,name=issuer_key,json=issuerKey,proto3" json:"issuer_key,omitempty"`
	ConfigData *ConfigData  `protobuf:"bytes,2,opt,name=config_data,json=configData,proto3" json:"config_data,omitempty"`
	DidParams  *DidParams   `protobuf:"bytes,3,opt,name=did_params,json=didParams,proto3,oneof" json:"did_params,omitempty"`
}

func (x *CreateIdentityV2Request) Reset() {
	*x = CreateIdentityV2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_v2_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateIdentityV2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIdentityV2Request) ProtoMessage() {}

func (x *CreateIdentityV2Request) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v2_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIdentityV2Request.ProtoReflect.Descriptor instead.
func (*CreateIdentityV2Request) Descriptor() ([]byte, []int) {
	return file_identity_v2_proto_rawDescGZIP(), []int{11}
}

func (x *CreateIdentityV2Request) GetIssuerKey() *IdentityKey {
	if x != nil {
		return x.IssuerKey
	}
	return nil
}

func (x *CreateIdentityV2Request) GetConfigData() *ConfigData {
	if x != nil {
		return x.ConfigData
	}
	return nil
}

func (x *CreateIdentityV2Request) GetDidParams() *DidParams {
	if x != nil {
		return x.DidParams
	}
	return nil
}

type CreateIssuerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IssuerKey       *IdentityKey    `protobuf:"bytes,1,opt,name=issuer_key,json=issuerKey,proto3" json:"issuer_key,omitempty"`
	ConfigData      *ConfigData     `protobuf:"bytes,2,opt,name=config_data,json=configData,proto3" json:"config_data,omitempty"`
	IssuerParams    *DidParams      `protobuf:"bytes,3,opt,name=issuer_params,json=issuerParams,proto3,oneof" json:"issuer_params,omitempty"`
	Name            *string         `protobuf:"bytes,4,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Description     *string         `protobuf:"bytes,5,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Image           *string         `protobuf:"bytes,6,opt,name=image,proto3,oneof" json:"image,omitempty"`
	PublishInterval PublishInterval `protobuf:"varint,7,opt,name=publish_interval,json=publishInterval,proto3,enum=bloock.PublishInterval" json:"publish_interval,omitempty"`
}

func (x *CreateIssuerRequest) Reset() {
	*x = CreateIssuerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_v2_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateIssuerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIssuerRequest) ProtoMessage() {}

func (x *CreateIssuerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v2_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIssuerRequest.ProtoReflect.Descriptor instead.
func (*CreateIssuerRequest) Descriptor() ([]byte, []int) {
	return file_identity_v2_proto_rawDescGZIP(), []int{12}
}

func (x *CreateIssuerRequest) GetIssuerKey() *IdentityKey {
	if x != nil {
		return x.IssuerKey
	}
	return nil
}

func (x *CreateIssuerRequest) GetConfigData() *ConfigData {
	if x != nil {
		return x.ConfigData
	}
	return nil
}

func (x *CreateIssuerRequest) GetIssuerParams() *DidParams {
	if x != nil {
		return x.IssuerParams
	}
	return nil
}

func (x *CreateIssuerRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CreateIssuerRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *CreateIssuerRequest) GetImage() string {
	if x != nil && x.Image != nil {
		return *x.Image
	}
	return ""
}

func (x *CreateIssuerRequest) GetPublishInterval() PublishInterval {
	if x != nil {
		return x.PublishInterval
	}
	return PublishInterval_INTERVAL_1
}

type GetIssuerByKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IssuerKey    *IdentityKey `protobuf:"bytes,1,opt,name=issuer_key,json=issuerKey,proto3" json:"issuer_key,omitempty"`
	ConfigData   *ConfigData  `protobuf:"bytes,2,opt,name=config_data,json=configData,proto3" json:"config_data,omitempty"`
	IssuerParams *DidParams   `protobuf:"bytes,3,opt,name=issuer_params,json=issuerParams,proto3,oneof" json:"issuer_params,omitempty"`
}

func (x *GetIssuerByKeyRequest) Reset() {
	*x = GetIssuerByKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_v2_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIssuerByKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIssuerByKeyRequest) ProtoMessage() {}

func (x *GetIssuerByKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v2_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIssuerByKeyRequest.ProtoReflect.Descriptor instead.
func (*GetIssuerByKeyRequest) Descriptor() ([]byte, []int) {
	return file_identity_v2_proto_rawDescGZIP(), []int{13}
}

func (x *GetIssuerByKeyRequest) GetIssuerKey() *IdentityKey {
	if x != nil {
		return x.IssuerKey
	}
	return nil
}

func (x *GetIssuerByKeyRequest) GetConfigData() *ConfigData {
	if x != nil {
		return x.ConfigData
	}
	return nil
}

func (x *GetIssuerByKeyRequest) GetIssuerParams() *DidParams {
	if x != nil {
		return x.IssuerParams
	}
	return nil
}

type PublishIssuerStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigData *ConfigData `protobuf:"bytes,1,opt,name=config_data,json=configData,proto3" json:"config_data,omitempty"`
	IssuerDid  string      `protobuf:"bytes,2,opt,name=issuer_did,json=issuerDid,proto3" json:"issuer_did,omitempty"`
	Signer     *Signer     `protobuf:"bytes,3,opt,name=signer,proto3" json:"signer,omitempty"`
}

func (x *PublishIssuerStateRequest) Reset() {
	*x = PublishIssuerStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_v2_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishIssuerStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishIssuerStateRequest) ProtoMessage() {}

func (x *PublishIssuerStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v2_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishIssuerStateRequest.ProtoReflect.Descriptor instead.
func (*PublishIssuerStateRequest) Descriptor() ([]byte, []int) {
	return file_identity_v2_proto_rawDescGZIP(), []int{14}
}

func (x *PublishIssuerStateRequest) GetConfigData() *ConfigData {
	if x != nil {
		return x.ConfigData
	}
	return nil
}

func (x *PublishIssuerStateRequest) GetIssuerDid() string {
	if x != nil {
		return x.IssuerDid
	}
	return ""
}

func (x *PublishIssuerStateRequest) GetSigner() *Signer {
	if x != nil {
		return x.Signer
	}
	return nil
}

type CreateCredentialResponseV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CredentialReceipt *CredentialReceiptV2 `protobuf:"bytes,1,opt,name=credential_receipt,json=credentialReceipt,proto3" json:"credential_receipt,omitempty"`
	Error             *Error               `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *CreateCredentialResponseV2) Reset() {
	*x = CreateCredentialResponseV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_v2_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCredentialResponseV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCredentialResponseV2) ProtoMessage() {}

func (x *CreateCredentialResponseV2) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v2_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCredentialResponseV2.ProtoReflect.Descriptor instead.
func (*CreateCredentialResponseV2) Descriptor() ([]byte, []int) {
	return file_identity_v2_proto_rawDescGZIP(), []int{15}
}

func (x *CreateCredentialResponseV2) GetCredentialReceipt() *CredentialReceiptV2 {
	if x != nil {
		return x.CredentialReceipt
	}
	return nil
}

func (x *CreateCredentialResponseV2) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type CreateIdentityV2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Did   string `protobuf:"bytes,1,opt,name=did,proto3" json:"did,omitempty"`
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *CreateIdentityV2Response) Reset() {
	*x = CreateIdentityV2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_v2_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateIdentityV2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIdentityV2Response) ProtoMessage() {}

func (x *CreateIdentityV2Response) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v2_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIdentityV2Response.ProtoReflect.Descriptor instead.
func (*CreateIdentityV2Response) Descriptor() ([]byte, []int) {
	return file_identity_v2_proto_rawDescGZIP(), []int{16}
}

func (x *CreateIdentityV2Response) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *CreateIdentityV2Response) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type CreateIssuerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Did   string `protobuf:"bytes,1,opt,name=did,proto3" json:"did,omitempty"`
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *CreateIssuerResponse) Reset() {
	*x = CreateIssuerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_v2_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateIssuerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIssuerResponse) ProtoMessage() {}

func (x *CreateIssuerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v2_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIssuerResponse.ProtoReflect.Descriptor instead.
func (*CreateIssuerResponse) Descriptor() ([]byte, []int) {
	return file_identity_v2_proto_rawDescGZIP(), []int{17}
}

func (x *CreateIssuerResponse) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *CreateIssuerResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type BuildSchemaResponseV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schema *SchemaV2 `protobuf:"bytes,1,opt,name=schema,proto3" json:"schema,omitempty"`
	Error  *Error    `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *BuildSchemaResponseV2) Reset() {
	*x = BuildSchemaResponseV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_v2_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildSchemaResponseV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildSchemaResponseV2) ProtoMessage() {}

func (x *BuildSchemaResponseV2) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v2_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildSchemaResponseV2.ProtoReflect.Descriptor instead.
func (*BuildSchemaResponseV2) Descriptor() ([]byte, []int) {
	return file_identity_v2_proto_rawDescGZIP(), []int{18}
}

func (x *BuildSchemaResponseV2) GetSchema() *SchemaV2 {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *BuildSchemaResponseV2) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type PublishIssuerStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateReceipt *IssuerStateReceipt `protobuf:"bytes,1,opt,name=state_receipt,json=stateReceipt,proto3" json:"state_receipt,omitempty"`
	Error        *Error              `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *PublishIssuerStateResponse) Reset() {
	*x = PublishIssuerStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_v2_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishIssuerStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishIssuerStateResponse) ProtoMessage() {}

func (x *PublishIssuerStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v2_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishIssuerStateResponse.ProtoReflect.Descriptor instead.
func (*PublishIssuerStateResponse) Descriptor() ([]byte, []int) {
	return file_identity_v2_proto_rawDescGZIP(), []int{19}
}

func (x *PublishIssuerStateResponse) GetStateReceipt() *IssuerStateReceipt {
	if x != nil {
		return x.StateReceipt
	}
	return nil
}

func (x *PublishIssuerStateResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type RevokeCredentialRequestV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigData *ConfigData   `protobuf:"bytes,1,opt,name=config_data,json=configData,proto3" json:"config_data,omitempty"`
	Credential *CredentialV2 `protobuf:"bytes,2,opt,name=credential,proto3" json:"credential,omitempty"`
	Signer     *Signer       `protobuf:"bytes,3,opt,name=signer,proto3" json:"signer,omitempty"`
}

func (x *RevokeCredentialRequestV2) Reset() {
	*x = RevokeCredentialRequestV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_v2_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeCredentialRequestV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeCredentialRequestV2) ProtoMessage() {}

func (x *RevokeCredentialRequestV2) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v2_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeCredentialRequestV2.ProtoReflect.Descriptor instead.
func (*RevokeCredentialRequestV2) Descriptor() ([]byte, []int) {
	return file_identity_v2_proto_rawDescGZIP(), []int{20}
}

func (x *RevokeCredentialRequestV2) GetConfigData() *ConfigData {
	if x != nil {
		return x.ConfigData
	}
	return nil
}

func (x *RevokeCredentialRequestV2) GetCredential() *CredentialV2 {
	if x != nil {
		return x.Credential
	}
	return nil
}

func (x *RevokeCredentialRequestV2) GetSigner() *Signer {
	if x != nil {
		return x.Signer
	}
	return nil
}

type RevokeCredentialResponseV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *CredentialRevocationV2 `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Error  *Error                  `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *RevokeCredentialResponseV2) Reset() {
	*x = RevokeCredentialResponseV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_v2_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeCredentialResponseV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeCredentialResponseV2) ProtoMessage() {}

func (x *RevokeCredentialResponseV2) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v2_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeCredentialResponseV2.ProtoReflect.Descriptor instead.
func (*RevokeCredentialResponseV2) Descriptor() ([]byte, []int) {
	return file_identity_v2_proto_rawDescGZIP(), []int{21}
}

func (x *RevokeCredentialResponseV2) GetResult() *CredentialRevocationV2 {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *RevokeCredentialResponseV2) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type CreateVerificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigData   *ConfigData `protobuf:"bytes,1,opt,name=config_data,json=configData,proto3" json:"config_data,omitempty"`
	ProofRequest string      `protobuf:"bytes,2,opt,name=proof_request,json=proofRequest,proto3" json:"proof_request,omitempty"`
}

func (x *CreateVerificationRequest) Reset() {
	*x = CreateVerificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_v2_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVerificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVerificationRequest) ProtoMessage() {}

func (x *CreateVerificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v2_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVerificationRequest.ProtoReflect.Descriptor instead.
func (*CreateVerificationRequest) Descriptor() ([]byte, []int) {
	return file_identity_v2_proto_rawDescGZIP(), []int{22}
}

func (x *CreateVerificationRequest) GetConfigData() *ConfigData {
	if x != nil {
		return x.ConfigData
	}
	return nil
}

func (x *CreateVerificationRequest) GetProofRequest() string {
	if x != nil {
		return x.ProofRequest
	}
	return ""
}

type CreateVerificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *VerificationReceipt `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Error  *Error               `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *CreateVerificationResponse) Reset() {
	*x = CreateVerificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_v2_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVerificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVerificationResponse) ProtoMessage() {}

func (x *CreateVerificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v2_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVerificationResponse.ProtoReflect.Descriptor instead.
func (*CreateVerificationResponse) Descriptor() ([]byte, []int) {
	return file_identity_v2_proto_rawDescGZIP(), []int{23}
}

func (x *CreateVerificationResponse) GetResult() *VerificationReceipt {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *CreateVerificationResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type WaitVerificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigData *ConfigData `protobuf:"bytes,1,opt,name=config_data,json=configData,proto3" json:"config_data,omitempty"`
	SessionId  int64       `protobuf:"varint,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Timeout    int64       `protobuf:"varint,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *WaitVerificationRequest) Reset() {
	*x = WaitVerificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_v2_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaitVerificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitVerificationRequest) ProtoMessage() {}

func (x *WaitVerificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v2_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitVerificationRequest.ProtoReflect.Descriptor instead.
func (*WaitVerificationRequest) Descriptor() ([]byte, []int) {
	return file_identity_v2_proto_rawDescGZIP(), []int{24}
}

func (x *WaitVerificationRequest) GetConfigData() *ConfigData {
	if x != nil {
		return x.ConfigData
	}
	return nil
}

func (x *WaitVerificationRequest) GetSessionId() int64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *WaitVerificationRequest) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

type WaitVerificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  *Error `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *WaitVerificationResponse) Reset() {
	*x = WaitVerificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_v2_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaitVerificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitVerificationResponse) ProtoMessage() {}

func (x *WaitVerificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v2_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitVerificationResponse.ProtoReflect.Descriptor instead.
func (*WaitVerificationResponse) Descriptor() ([]byte, []int) {
	return file_identity_v2_proto_rawDescGZIP(), []int{25}
}

func (x *WaitVerificationResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *WaitVerificationResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type GetVerificationStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigData *ConfigData `protobuf:"bytes,1,opt,name=config_data,json=configData,proto3" json:"config_data,omitempty"`
	SessionId  int64       `protobuf:"varint,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *GetVerificationStatusRequest) Reset() {
	*x = GetVerificationStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_v2_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVerificationStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVerificationStatusRequest) ProtoMessage() {}

func (x *GetVerificationStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v2_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVerificationStatusRequest.ProtoReflect.Descriptor instead.
func (*GetVerificationStatusRequest) Descriptor() ([]byte, []int) {
	return file_identity_v2_proto_rawDescGZIP(), []int{26}
}

func (x *GetVerificationStatusRequest) GetConfigData() *ConfigData {
	if x != nil {
		return x.ConfigData
	}
	return nil
}

func (x *GetVerificationStatusRequest) GetSessionId() int64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

type GetVerificationStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  *Error `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *GetVerificationStatusResponse) Reset() {
	*x = GetVerificationStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_v2_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVerificationStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVerificationStatusResponse) ProtoMessage() {}

func (x *GetVerificationStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v2_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVerificationStatusResponse.ProtoReflect.Descriptor instead.
func (*GetVerificationStatusResponse) Descriptor() ([]byte, []int) {
	return file_identity_v2_proto_rawDescGZIP(), []int{27}
}

func (x *GetVerificationStatusResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *GetVerificationStatusResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_identity_v2_proto protoreflect.FileDescriptor

var file_identity_v2_proto_rawDesc = []byte{
	0x0a, 0x11, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x76, 0x32, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x06, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x1a, 0x0c, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x61, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x76, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x59, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x56, 0x32, 0x12, 0x33, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x6c,
	0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x73, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x56, 0x32, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x56, 0x32, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x28, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x62, 0x6c,
	0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0x5e, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x42, 0x79, 0x4b,
	0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x62, 0x6c,
	0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0x94, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33,
	0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x5f, 0x64, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x44,
	0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x22, 0x81, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x56, 0x32,
	0x52, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01,
	0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x86, 0x01, 0x0a, 0x19,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x6f, 0x4a, 0x73, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x32, 0x12, 0x33, 0x0a, 0x0b, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x34,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x56, 0x32, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x22, 0x64, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x54, 0x6f, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x56, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x66, 0x0a, 0x1b, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x46, 0x72, 0x6f, 0x6d, 0x4a, 0x73, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x32, 0x12, 0x33, 0x0a, 0x0b, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12,
	0x0a, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6a, 0x73,
	0x6f, 0x6e, 0x22, 0x88, 0x01, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x46, 0x72, 0x6f, 0x6d, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x56, 0x32, 0x12, 0x34, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b,
	0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x56, 0x32, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63,
	0x6b, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xd7, 0x05,
	0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x32, 0x12, 0x33, 0x0a, 0x0b, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x44, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x44, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x6c, 0x6f,
	0x6f, 0x63, 0x6b, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x72, 0x12, 0x46, 0x0a, 0x11, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x32, 0x52, 0x10, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x49, 0x0a, 0x12, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x56, 0x32, 0x52, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x49, 0x0a, 0x12, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c,
	0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d,
	0x61, 0x6c, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x32, 0x52, 0x11, 0x64,
	0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x12, 0x49, 0x0a, 0x12, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x5f, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62,
	0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x32, 0x52, 0x11, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61,
	0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x0f, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x0c,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x44, 0x61,
	0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x32, 0x52, 0x0e, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x4c, 0x0a,
	0x13, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x6c, 0x6f,
	0x6f, 0x63, 0x6b, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x32, 0x52, 0x12, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d,
	0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xe3, 0x07, 0x0a, 0x14, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x32,
	0x12, 0x33, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x50, 0x0a, 0x11, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x56, 0x32, 0x52, 0x10, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x53, 0x0a, 0x12, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x65, 0x72, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x32, 0x52, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x53, 0x0a, 0x12,
	0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63,
	0x6b, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x32, 0x52, 0x11,
	0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x12, 0x53, 0x0a, 0x12, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x5f, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x56, 0x32, 0x52, 0x11, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x4a, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x56, 0x32, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x12, 0x56, 0x0a, 0x13, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x56, 0x32, 0x52, 0x12, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x5d, 0x0a, 0x16, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x6c, 0x6f,
	0x6f, 0x63, 0x6b, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x75, 0x6d, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x56, 0x32, 0x52, 0x14, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x75, 0x6d, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x60, 0x0a, 0x17, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x6c, 0x6f,
	0x6f, 0x63, 0x6b, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x45, 0x6e, 0x75, 0x6d, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x56, 0x32, 0x52, 0x15, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x45, 0x6e, 0x75,
	0x6d, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x60, 0x0a, 0x17, 0x64,
	0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62,
	0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x45, 0x6e, 0x75,
	0x6d, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x56, 0x32, 0x52, 0x15, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x45,
	0x6e, 0x75, 0x6d, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0xc8, 0x01,
	0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x0a, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4b,
	0x65, 0x79, 0x52, 0x09, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x33, 0x0a,
	0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x35, 0x0a, 0x0a, 0x64, 0x69, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e,
	0x44, 0x69, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x09, 0x64, 0x69, 0x64,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64, 0x69,
	0x64, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x8f, 0x03, 0x0a, 0x13, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x32, 0x0a, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x09, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x72, 0x4b, 0x65, 0x79, 0x12, 0x33, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x6c, 0x6f, 0x6f,
	0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3b, 0x0a, 0x0d, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x44, 0x69, 0x64, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x0c, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x42, 0x0a, 0x10, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x62, 0x6c,
	0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x52, 0x0f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0xcf, 0x01, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63,
	0x6b, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x09, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x33, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3b, 0x0a,
	0x0d, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x44, 0x69,
	0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x0c, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x97, 0x01, 0x0a,
	0x19, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x0b, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x44, 0x69, 0x64, 0x12, 0x26,
	0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x52, 0x06,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x22, 0x9c, 0x01, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x56, 0x32, 0x12, 0x4a, 0x0a, 0x12, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x56, 0x32, 0x52, 0x11,
	0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70,
	0x74, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48,
	0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x60, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x64, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x5c, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x64, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69,
	0x64, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48,
	0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x75, 0x0a, 0x15, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x32, 0x12, 0x28,
	0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x56, 0x32,
	0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88,
	0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x91, 0x01, 0x0a,
	0x1a, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x52, 0x0c,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x28, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x62, 0x6c,
	0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0xae, 0x01, 0x0a, 0x19, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x32, 0x12, 0x33,
	0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x34, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b,
	0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x56, 0x32, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x6c, 0x6f, 0x6f,
	0x63, 0x6b, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x72, 0x22, 0x88, 0x01, 0x0a, 0x1a, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x32,
	0x12, 0x36, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x32,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88,
	0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x75, 0x0a, 0x19,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x0b, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x23,
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x85, 0x01, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01,
	0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x87, 0x01, 0x0a, 0x17,
	0x57, 0x61, 0x69, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62,
	0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x66, 0x0a, 0x18, 0x57, 0x61, 0x69, 0x74, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63,
	0x6b, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x72, 0x0a,
	0x1c, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a,
	0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x6b, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x62, 0x6c, 0x6f, 0x6f,
	0x63, 0x6b, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0xdc,
	0x09, 0x0a, 0x11, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x56, 0x32, 0x12, 0x53, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x56, 0x32,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x56,
	0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0c, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x62, 0x6c, 0x6f, 0x6f,
	0x63, 0x6b, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x72, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x47,
	0x65, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x12, 0x1c, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x56, 0x32, 0x1a, 0x1d, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56,
	0x32, 0x12, 0x44, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x1a,
	0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x32, 0x1a, 0x1b, 0x2e, 0x62, 0x6c, 0x6f,
	0x6f, 0x63, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x32, 0x12, 0x59, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x21, 0x2e, 0x62, 0x6c,
	0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x32, 0x1a, 0x22,
	0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x56, 0x32, 0x12, 0x5b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x21, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63,
	0x6b, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x50,
	0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x62, 0x6c,
	0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x59, 0x0a, 0x10, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x12, 0x21, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x52, 0x65, 0x76,
	0x6f, 0x6b, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x56, 0x32, 0x1a, 0x22, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e,
	0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x32, 0x12, 0x59, 0x0a, 0x10, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x6f, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x21,
	0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x54, 0x6f, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56,
	0x32, 0x1a, 0x22, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x6f, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x56, 0x32, 0x12, 0x5f, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x46, 0x72, 0x6f, 0x6d, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x62, 0x6c,
	0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x46,
	0x72, 0x6f, 0x6d, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x32,
	0x1a, 0x24, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x46, 0x72, 0x6f, 0x6d, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x56, 0x32, 0x12, 0x5b, 0x0a, 0x12, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21, 0x2e, 0x62,
	0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x49, 0x73, 0x73,
	0x75, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x2e, 0x62, 0x6c, 0x6f, 0x6f,
	0x63, 0x6b, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x62,
	0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x55, 0x0a, 0x10, 0x57, 0x61, 0x69, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x57, 0x61,
	0x69, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x57,
	0x61, 0x69, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x24, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e,
	0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x57, 0x0a,
	0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x38, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2f,
	0x62, 0x6c, 0x6f, 0x6f, 0x63, 0x6b, 0x2d, 0x73, 0x64, 0x6b, 0x2d, 0x67, 0x6f, 0x2f, 0x76, 0x32,
	0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_identity_v2_proto_rawDescOnce sync.Once
	file_identity_v2_proto_rawDescData = file_identity_v2_proto_rawDesc
)

func file_identity_v2_proto_rawDescGZIP() []byte {
	file_identity_v2_proto_rawDescOnce.Do(func() {
		file_identity_v2_proto_rawDescData = protoimpl.X.CompressGZIP(file_identity_v2_proto_rawDescData)
	})
	return file_identity_v2_proto_rawDescData
}

var file_identity_v2_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_identity_v2_proto_goTypes = []interface{}{
	(*GetSchemaRequestV2)(nil),               // 0: bloock.GetSchemaRequestV2
	(*GetSchemaResponseV2)(nil),              // 1: bloock.GetSchemaResponseV2
	(*GetIssuerByKeyResponse)(nil),           // 2: bloock.GetIssuerByKeyResponse
	(*GetCredentialProofRequest)(nil),        // 3: bloock.GetCredentialProofRequest
	(*GetCredentialProofResponse)(nil),       // 4: bloock.GetCredentialProofResponse
	(*CredentialToJsonRequestV2)(nil),        // 5: bloock.CredentialToJsonRequestV2
	(*CredentialToJsonResponseV2)(nil),       // 6: bloock.CredentialToJsonResponseV2
	(*CredentialFromJsonRequestV2)(nil),      // 7: bloock.CredentialFromJsonRequestV2
	(*CredentialFromJsonResponseV2)(nil),     // 8: bloock.CredentialFromJsonResponseV2
	(*CreateCredentialRequestV2)(nil),        // 9: bloock.CreateCredentialRequestV2
	(*BuildSchemaRequestV2)(nil),             // 10: bloock.BuildSchemaRequestV2
	(*CreateIdentityV2Request)(nil),          // 11: bloock.CreateIdentityV2Request
	(*CreateIssuerRequest)(nil),              // 12: bloock.CreateIssuerRequest
	(*GetIssuerByKeyRequest)(nil),            // 13: bloock.GetIssuerByKeyRequest
	(*PublishIssuerStateRequest)(nil),        // 14: bloock.PublishIssuerStateRequest
	(*CreateCredentialResponseV2)(nil),       // 15: bloock.CreateCredentialResponseV2
	(*CreateIdentityV2Response)(nil),         // 16: bloock.CreateIdentityV2Response
	(*CreateIssuerResponse)(nil),             // 17: bloock.CreateIssuerResponse
	(*BuildSchemaResponseV2)(nil),            // 18: bloock.BuildSchemaResponseV2
	(*PublishIssuerStateResponse)(nil),       // 19: bloock.PublishIssuerStateResponse
	(*RevokeCredentialRequestV2)(nil),        // 20: bloock.RevokeCredentialRequestV2
	(*RevokeCredentialResponseV2)(nil),       // 21: bloock.RevokeCredentialResponseV2
	(*CreateVerificationRequest)(nil),        // 22: bloock.CreateVerificationRequest
	(*CreateVerificationResponse)(nil),       // 23: bloock.CreateVerificationResponse
	(*WaitVerificationRequest)(nil),          // 24: bloock.WaitVerificationRequest
	(*WaitVerificationResponse)(nil),         // 25: bloock.WaitVerificationResponse
	(*GetVerificationStatusRequest)(nil),     // 26: bloock.GetVerificationStatusRequest
	(*GetVerificationStatusResponse)(nil),    // 27: bloock.GetVerificationStatusResponse
	(*ConfigData)(nil),                       // 28: bloock.ConfigData
	(*SchemaV2)(nil),                         // 29: bloock.SchemaV2
	(*Error)(nil),                            // 30: bloock.Error
	(*CredentialProofV2)(nil),                // 31: bloock.CredentialProofV2
	(*CredentialV2)(nil),                     // 32: bloock.CredentialV2
	(*Signer)(nil),                           // 33: bloock.Signer
	(*StringAttributeV2)(nil),                // 34: bloock.StringAttributeV2
	(*IntegerAttributeV2)(nil),               // 35: bloock.IntegerAttributeV2
	(*DecimalAttributeV2)(nil),               // 36: bloock.DecimalAttributeV2
	(*BooleanAttributeV2)(nil),               // 37: bloock.BooleanAttributeV2
	(*DateAttributeV2)(nil),                  // 38: bloock.DateAttributeV2
	(*DateTimeAttributeV2)(nil),              // 39: bloock.DateTimeAttributeV2
	(*StringAttributeDefinitionV2)(nil),      // 40: bloock.StringAttributeDefinitionV2
	(*IntegerAttributeDefinitionV2)(nil),     // 41: bloock.IntegerAttributeDefinitionV2
	(*DecimalAttributeDefinitionV2)(nil),     // 42: bloock.DecimalAttributeDefinitionV2
	(*BooleanAttributeDefinitionV2)(nil),     // 43: bloock.BooleanAttributeDefinitionV2
	(*DateAttributeDefinitionV2)(nil),        // 44: bloock.DateAttributeDefinitionV2
	(*DateTimeAttributeDefinitionV2)(nil),    // 45: bloock.DateTimeAttributeDefinitionV2
	(*StringEnumAttributeDefinitionV2)(nil),  // 46: bloock.StringEnumAttributeDefinitionV2
	(*IntegerEnumAttributeDefinitionV2)(nil), // 47: bloock.IntegerEnumAttributeDefinitionV2
	(*DecimalEnumAttributeDefinitionV2)(nil), // 48: bloock.DecimalEnumAttributeDefinitionV2
	(*IdentityKey)(nil),                      // 49: bloock.IdentityKey
	(*DidParams)(nil),                        // 50: bloock.DidParams
	(PublishInterval)(0),                     // 51: bloock.PublishInterval
	(*CredentialReceiptV2)(nil),              // 52: bloock.CredentialReceiptV2
	(*IssuerStateReceipt)(nil),               // 53: bloock.IssuerStateReceipt
	(*CredentialRevocationV2)(nil),           // 54: bloock.CredentialRevocationV2
	(*VerificationReceipt)(nil),              // 55: bloock.VerificationReceipt
}
var file_identity_v2_proto_depIdxs = []int32{
	28, // 0: bloock.GetSchemaRequestV2.config_data:type_name -> bloock.ConfigData
	29, // 1: bloock.GetSchemaResponseV2.schema:type_name -> bloock.SchemaV2
	30, // 2: bloock.GetSchemaResponseV2.error:type_name -> bloock.Error
	30, // 3: bloock.GetIssuerByKeyResponse.error:type_name -> bloock.Error
	28, // 4: bloock.GetCredentialProofRequest.config_data:type_name -> bloock.ConfigData
	31, // 5: bloock.GetCredentialProofResponse.proof:type_name -> bloock.CredentialProofV2
	30, // 6: bloock.GetCredentialProofResponse.error:type_name -> bloock.Error
	28, // 7: bloock.CredentialToJsonRequestV2.config_data:type_name -> bloock.ConfigData
	32, // 8: bloock.CredentialToJsonRequestV2.credential:type_name -> bloock.CredentialV2
	30, // 9: bloock.CredentialToJsonResponseV2.error:type_name -> bloock.Error
	28, // 10: bloock.CredentialFromJsonRequestV2.config_data:type_name -> bloock.ConfigData
	32, // 11: bloock.CredentialFromJsonResponseV2.credential:type_name -> bloock.CredentialV2
	30, // 12: bloock.CredentialFromJsonResponseV2.error:type_name -> bloock.Error
	28, // 13: bloock.CreateCredentialRequestV2.config_data:type_name -> bloock.ConfigData
	33, // 14: bloock.CreateCredentialRequestV2.signer:type_name -> bloock.Signer
	34, // 15: bloock.CreateCredentialRequestV2.string_attributes:type_name -> bloock.StringAttributeV2
	35, // 16: bloock.CreateCredentialRequestV2.integer_attributes:type_name -> bloock.IntegerAttributeV2
	36, // 17: bloock.CreateCredentialRequestV2.decimal_attributes:type_name -> bloock.DecimalAttributeV2
	37, // 18: bloock.CreateCredentialRequestV2.boolean_attributes:type_name -> bloock.BooleanAttributeV2
	38, // 19: bloock.CreateCredentialRequestV2.date_attributes:type_name -> bloock.DateAttributeV2
	39, // 20: bloock.CreateCredentialRequestV2.datetime_attributes:type_name -> bloock.DateTimeAttributeV2
	28, // 21: bloock.BuildSchemaRequestV2.config_data:type_name -> bloock.ConfigData
	40, // 22: bloock.BuildSchemaRequestV2.string_attributes:type_name -> bloock.StringAttributeDefinitionV2
	41, // 23: bloock.BuildSchemaRequestV2.integer_attributes:type_name -> bloock.IntegerAttributeDefinitionV2
	42, // 24: bloock.BuildSchemaRequestV2.decimal_attributes:type_name -> bloock.DecimalAttributeDefinitionV2
	43, // 25: bloock.BuildSchemaRequestV2.boolean_attributes:type_name -> bloock.BooleanAttributeDefinitionV2
	44, // 26: bloock.BuildSchemaRequestV2.date_attributes:type_name -> bloock.DateAttributeDefinitionV2
	45, // 27: bloock.BuildSchemaRequestV2.datetime_attributes:type_name -> bloock.DateTimeAttributeDefinitionV2
	46, // 28: bloock.BuildSchemaRequestV2.string_enum_attributes:type_name -> bloock.StringEnumAttributeDefinitionV2
	47, // 29: bloock.BuildSchemaRequestV2.integer_enum_attributes:type_name -> bloock.IntegerEnumAttributeDefinitionV2
	48, // 30: bloock.BuildSchemaRequestV2.decimal_enum_attributes:type_name -> bloock.DecimalEnumAttributeDefinitionV2
	49, // 31: bloock.CreateIdentityV2Request.issuer_key:type_name -> bloock.IdentityKey
	28, // 32: bloock.CreateIdentityV2Request.config_data:type_name -> bloock.ConfigData
	50, // 33: bloock.CreateIdentityV2Request.did_params:type_name -> bloock.DidParams
	49, // 34: bloock.CreateIssuerRequest.issuer_key:type_name -> bloock.IdentityKey
	28, // 35: bloock.CreateIssuerRequest.config_data:type_name -> bloock.ConfigData
	50, // 36: bloock.CreateIssuerRequest.issuer_params:type_name -> bloock.DidParams
	51, // 37: bloock.CreateIssuerRequest.publish_interval:type_name -> bloock.PublishInterval
	49, // 38: bloock.GetIssuerByKeyRequest.issuer_key:type_name -> bloock.IdentityKey
	28, // 39: bloock.GetIssuerByKeyRequest.config_data:type_name -> bloock.ConfigData
	50, // 40: bloock.GetIssuerByKeyRequest.issuer_params:type_name -> bloock.DidParams
	28, // 41: bloock.PublishIssuerStateRequest.config_data:type_name -> bloock.ConfigData
	33, // 42: bloock.PublishIssuerStateRequest.signer:type_name -> bloock.Signer
	52, // 43: bloock.CreateCredentialResponseV2.credential_receipt:type_name -> bloock.CredentialReceiptV2
	30, // 44: bloock.CreateCredentialResponseV2.error:type_name -> bloock.Error
	30, // 45: bloock.CreateIdentityV2Response.error:type_name -> bloock.Error
	30, // 46: bloock.CreateIssuerResponse.error:type_name -> bloock.Error
	29, // 47: bloock.BuildSchemaResponseV2.schema:type_name -> bloock.SchemaV2
	30, // 48: bloock.BuildSchemaResponseV2.error:type_name -> bloock.Error
	53, // 49: bloock.PublishIssuerStateResponse.state_receipt:type_name -> bloock.IssuerStateReceipt
	30, // 50: bloock.PublishIssuerStateResponse.error:type_name -> bloock.Error
	28, // 51: bloock.RevokeCredentialRequestV2.config_data:type_name -> bloock.ConfigData
	32, // 52: bloock.RevokeCredentialRequestV2.credential:type_name -> bloock.CredentialV2
	33, // 53: bloock.RevokeCredentialRequestV2.signer:type_name -> bloock.Signer
	54, // 54: bloock.RevokeCredentialResponseV2.result:type_name -> bloock.CredentialRevocationV2
	30, // 55: bloock.RevokeCredentialResponseV2.error:type_name -> bloock.Error
	28, // 56: bloock.CreateVerificationRequest.config_data:type_name -> bloock.ConfigData
	55, // 57: bloock.CreateVerificationResponse.result:type_name -> bloock.VerificationReceipt
	30, // 58: bloock.CreateVerificationResponse.error:type_name -> bloock.Error
	28, // 59: bloock.WaitVerificationRequest.config_data:type_name -> bloock.ConfigData
	30, // 60: bloock.WaitVerificationResponse.error:type_name -> bloock.Error
	28, // 61: bloock.GetVerificationStatusRequest.config_data:type_name -> bloock.ConfigData
	30, // 62: bloock.GetVerificationStatusResponse.error:type_name -> bloock.Error
	11, // 63: bloock.IdentityServiceV2.CreateIdentity:input_type -> bloock.CreateIdentityV2Request
	12, // 64: bloock.IdentityServiceV2.CreateIssuer:input_type -> bloock.CreateIssuerRequest
	13, // 65: bloock.IdentityServiceV2.GetIssuerByKey:input_type -> bloock.GetIssuerByKeyRequest
	10, // 66: bloock.IdentityServiceV2.BuildSchema:input_type -> bloock.BuildSchemaRequestV2
	0,  // 67: bloock.IdentityServiceV2.GetSchema:input_type -> bloock.GetSchemaRequestV2
	9,  // 68: bloock.IdentityServiceV2.CreateCredential:input_type -> bloock.CreateCredentialRequestV2
	3,  // 69: bloock.IdentityServiceV2.GetCredentialProof:input_type -> bloock.GetCredentialProofRequest
	20, // 70: bloock.IdentityServiceV2.RevokeCredential:input_type -> bloock.RevokeCredentialRequestV2
	5,  // 71: bloock.IdentityServiceV2.CredentialToJson:input_type -> bloock.CredentialToJsonRequestV2
	7,  // 72: bloock.IdentityServiceV2.CredentialFromJson:input_type -> bloock.CredentialFromJsonRequestV2
	14, // 73: bloock.IdentityServiceV2.PublishIssuerState:input_type -> bloock.PublishIssuerStateRequest
	22, // 74: bloock.IdentityServiceV2.CreateVerification:input_type -> bloock.CreateVerificationRequest
	24, // 75: bloock.IdentityServiceV2.WaitVerification:input_type -> bloock.WaitVerificationRequest
	26, // 76: bloock.IdentityServiceV2.GetVerificationStatus:input_type -> bloock.GetVerificationStatusRequest
	16, // 77: bloock.IdentityServiceV2.CreateIdentity:output_type -> bloock.CreateIdentityV2Response
	17, // 78: bloock.IdentityServiceV2.CreateIssuer:output_type -> bloock.CreateIssuerResponse
	2,  // 79: bloock.IdentityServiceV2.GetIssuerByKey:output_type -> bloock.GetIssuerByKeyResponse
	18, // 80: bloock.IdentityServiceV2.BuildSchema:output_type -> bloock.BuildSchemaResponseV2
	1,  // 81: bloock.IdentityServiceV2.GetSchema:output_type -> bloock.GetSchemaResponseV2
	15, // 82: bloock.IdentityServiceV2.CreateCredential:output_type -> bloock.CreateCredentialResponseV2
	4,  // 83: bloock.IdentityServiceV2.GetCredentialProof:output_type -> bloock.GetCredentialProofResponse
	21, // 84: bloock.IdentityServiceV2.RevokeCredential:output_type -> bloock.RevokeCredentialResponseV2
	6,  // 85: bloock.IdentityServiceV2.CredentialToJson:output_type -> bloock.CredentialToJsonResponseV2
	8,  // 86: bloock.IdentityServiceV2.CredentialFromJson:output_type -> bloock.CredentialFromJsonResponseV2
	19, // 87: bloock.IdentityServiceV2.PublishIssuerState:output_type -> bloock.PublishIssuerStateResponse
	23, // 88: bloock.IdentityServiceV2.CreateVerification:output_type -> bloock.CreateVerificationResponse
	25, // 89: bloock.IdentityServiceV2.WaitVerification:output_type -> bloock.WaitVerificationResponse
	27, // 90: bloock.IdentityServiceV2.GetVerificationStatus:output_type -> bloock.GetVerificationStatusResponse
	77, // [77:91] is the sub-list for method output_type
	63, // [63:77] is the sub-list for method input_type
	63, // [63:63] is the sub-list for extension type_name
	63, // [63:63] is the sub-list for extension extendee
	0,  // [0:63] is the sub-list for field type_name
}

func init() { file_identity_v2_proto_init() }
func file_identity_v2_proto_init() {
	if File_identity_v2_proto != nil {
		return
	}
	file_config_proto_init()
	file_authenticity_entities_proto_init()
	file_shared_proto_init()
	file_identity_entities_v2_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_identity_v2_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSchemaRequestV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_v2_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSchemaResponseV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_v2_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIssuerByKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_v2_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCredentialProofRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_v2_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCredentialProofResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_v2_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CredentialToJsonRequestV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_v2_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CredentialToJsonResponseV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_v2_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CredentialFromJsonRequestV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_v2_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CredentialFromJsonResponseV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_v2_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCredentialRequestV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_v2_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildSchemaRequestV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_v2_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateIdentityV2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_v2_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateIssuerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_v2_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIssuerByKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_v2_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishIssuerStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_v2_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCredentialResponseV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_v2_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateIdentityV2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_v2_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateIssuerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_v2_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildSchemaResponseV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_v2_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishIssuerStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_v2_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeCredentialRequestV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_v2_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeCredentialResponseV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_v2_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVerificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_v2_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVerificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_v2_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WaitVerificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_v2_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WaitVerificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_v2_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVerificationStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_v2_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVerificationStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_identity_v2_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_identity_v2_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_identity_v2_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_identity_v2_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_identity_v2_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_identity_v2_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_identity_v2_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_identity_v2_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_identity_v2_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_identity_v2_proto_msgTypes[15].OneofWrappers = []interface{}{}
	file_identity_v2_proto_msgTypes[16].OneofWrappers = []interface{}{}
	file_identity_v2_proto_msgTypes[17].OneofWrappers = []interface{}{}
	file_identity_v2_proto_msgTypes[18].OneofWrappers = []interface{}{}
	file_identity_v2_proto_msgTypes[19].OneofWrappers = []interface{}{}
	file_identity_v2_proto_msgTypes[21].OneofWrappers = []interface{}{}
	file_identity_v2_proto_msgTypes[23].OneofWrappers = []interface{}{}
	file_identity_v2_proto_msgTypes[25].OneofWrappers = []interface{}{}
	file_identity_v2_proto_msgTypes[27].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_identity_v2_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_identity_v2_proto_goTypes,
		DependencyIndexes: file_identity_v2_proto_depIdxs,
		MessageInfos:      file_identity_v2_proto_msgTypes,
	}.Build()
	File_identity_v2_proto = out.File
	file_identity_v2_proto_rawDesc = nil
	file_identity_v2_proto_goTypes = nil
	file_identity_v2_proto_depIdxs = nil
}
