<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: identity_entities.proto

namespace Bloock;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>bloock.Credential</code>
 */
class Credential extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string thread_id = 1;</code>
     */
    protected $thread_id = '';
    /**
     * Generated from protobuf field <code>.bloock.CredentialBody body = 2;</code>
     */
    protected $body = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $thread_id
     *     @type \Bloock\CredentialBody $body
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\IdentityEntities::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string thread_id = 1;</code>
     * @return string
     */
    public function getThreadId()
    {
        return $this->thread_id;
    }

    /**
     * Generated from protobuf field <code>string thread_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setThreadId($var)
    {
        GPBUtil::checkString($var, True);
        $this->thread_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.bloock.CredentialBody body = 2;</code>
     * @return \Bloock\CredentialBody|null
     */
    public function getBody()
    {
        return $this->body;
    }

    public function hasBody()
    {
        return isset($this->body);
    }

    public function clearBody()
    {
        unset($this->body);
    }

    /**
     * Generated from protobuf field <code>.bloock.CredentialBody body = 2;</code>
     * @param \Bloock\CredentialBody $var
     * @return $this
     */
    public function setBody($var)
    {
        GPBUtil::checkMessage($var, \Bloock\CredentialBody::class);
        $this->body = $var;

        return $this;
    }

}

