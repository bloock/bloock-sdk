<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: encryption_entities.proto

namespace Bloock;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>bloock.Decrypter</code>
 */
class Decrypter extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.bloock.EncryptionAlg alg = 1;</code>
     */
    protected $alg = 0;
    /**
     * Generated from protobuf field <code>.bloock.DecrypterArgs args = 2;</code>
     */
    protected $args = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $alg
     *     @type \Bloock\DecrypterArgs $args
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\EncryptionEntities::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.bloock.EncryptionAlg alg = 1;</code>
     * @return int
     */
    public function getAlg()
    {
        return $this->alg;
    }

    /**
     * Generated from protobuf field <code>.bloock.EncryptionAlg alg = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setAlg($var)
    {
        GPBUtil::checkEnum($var, \Bloock\EncryptionAlg::class);
        $this->alg = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.bloock.DecrypterArgs args = 2;</code>
     * @return \Bloock\DecrypterArgs|null
     */
    public function getArgs()
    {
        return $this->args;
    }

    public function hasArgs()
    {
        return isset($this->args);
    }

    public function clearArgs()
    {
        unset($this->args);
    }

    /**
     * Generated from protobuf field <code>.bloock.DecrypterArgs args = 2;</code>
     * @param \Bloock\DecrypterArgs $var
     * @return $this
     */
    public function setArgs($var)
    {
        GPBUtil::checkMessage($var, \Bloock\DecrypterArgs::class);
        $this->args = $var;

        return $this;
    }

}

