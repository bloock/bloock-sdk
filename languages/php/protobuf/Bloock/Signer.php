<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: authenticity_entities.proto

namespace Bloock;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>bloock.Signer</code>
 */
class Signer extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.bloock.SignerAlg alg = 1;</code>
     */
    protected $alg = 0;
    /**
     * Generated from protobuf field <code>optional .bloock.LocalKey local_key = 2;</code>
     */
    protected $local_key = null;
    /**
     * Generated from protobuf field <code>optional .bloock.ManagedKey managed_key = 3;</code>
     */
    protected $managed_key = null;
    /**
     * Generated from protobuf field <code>optional string common_name = 4;</code>
     */
    protected $common_name = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $alg
     *     @type \Bloock\LocalKey $local_key
     *     @type \Bloock\ManagedKey $managed_key
     *     @type string $common_name
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\AuthenticityEntities::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.bloock.SignerAlg alg = 1;</code>
     * @return int
     */
    public function getAlg()
    {
        return $this->alg;
    }

    /**
     * Generated from protobuf field <code>.bloock.SignerAlg alg = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setAlg($var)
    {
        GPBUtil::checkEnum($var, \Bloock\SignerAlg::class);
        $this->alg = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .bloock.LocalKey local_key = 2;</code>
     * @return \Bloock\LocalKey|null
     */
    public function getLocalKey()
    {
        return $this->local_key;
    }

    public function hasLocalKey()
    {
        return isset($this->local_key);
    }

    public function clearLocalKey()
    {
        unset($this->local_key);
    }

    /**
     * Generated from protobuf field <code>optional .bloock.LocalKey local_key = 2;</code>
     * @param \Bloock\LocalKey $var
     * @return $this
     */
    public function setLocalKey($var)
    {
        GPBUtil::checkMessage($var, \Bloock\LocalKey::class);
        $this->local_key = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .bloock.ManagedKey managed_key = 3;</code>
     * @return \Bloock\ManagedKey|null
     */
    public function getManagedKey()
    {
        return $this->managed_key;
    }

    public function hasManagedKey()
    {
        return isset($this->managed_key);
    }

    public function clearManagedKey()
    {
        unset($this->managed_key);
    }

    /**
     * Generated from protobuf field <code>optional .bloock.ManagedKey managed_key = 3;</code>
     * @param \Bloock\ManagedKey $var
     * @return $this
     */
    public function setManagedKey($var)
    {
        GPBUtil::checkMessage($var, \Bloock\ManagedKey::class);
        $this->managed_key = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional string common_name = 4;</code>
     * @return string
     */
    public function getCommonName()
    {
        return isset($this->common_name) ? $this->common_name : '';
    }

    public function hasCommonName()
    {
        return isset($this->common_name);
    }

    public function clearCommonName()
    {
        unset($this->common_name);
    }

    /**
     * Generated from protobuf field <code>optional string common_name = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setCommonName($var)
    {
        GPBUtil::checkString($var, True);
        $this->common_name = $var;

        return $this;
    }

}

