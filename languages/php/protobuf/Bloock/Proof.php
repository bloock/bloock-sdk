<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: bloock_integrity_entities.proto

namespace Bloock;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>bloock.Proof</code>
 */
class Proof extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>repeated string leaves = 1;</code>
     */
    private $leaves;
    /**
     * Generated from protobuf field <code>repeated string nodes = 2;</code>
     */
    private $nodes;
    /**
     * Generated from protobuf field <code>string depth = 3;</code>
     */
    protected $depth = '';
    /**
     * Generated from protobuf field <code>string bitmap = 4;</code>
     */
    protected $bitmap = '';
    /**
     * Generated from protobuf field <code>.bloock.ProofAnchor anchor = 5;</code>
     */
    protected $anchor = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $leaves
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $nodes
     *     @type string $depth
     *     @type string $bitmap
     *     @type \Bloock\ProofAnchor $anchor
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\BloockIntegrityEntities::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>repeated string leaves = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getLeaves()
    {
        return $this->leaves;
    }

    /**
     * Generated from protobuf field <code>repeated string leaves = 1;</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setLeaves($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->leaves = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated string nodes = 2;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getNodes()
    {
        return $this->nodes;
    }

    /**
     * Generated from protobuf field <code>repeated string nodes = 2;</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setNodes($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->nodes = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string depth = 3;</code>
     * @return string
     */
    public function getDepth()
    {
        return $this->depth;
    }

    /**
     * Generated from protobuf field <code>string depth = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setDepth($var)
    {
        GPBUtil::checkString($var, True);
        $this->depth = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string bitmap = 4;</code>
     * @return string
     */
    public function getBitmap()
    {
        return $this->bitmap;
    }

    /**
     * Generated from protobuf field <code>string bitmap = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setBitmap($var)
    {
        GPBUtil::checkString($var, True);
        $this->bitmap = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.bloock.ProofAnchor anchor = 5;</code>
     * @return \Bloock\ProofAnchor|null
     */
    public function getAnchor()
    {
        return $this->anchor;
    }

    public function hasAnchor()
    {
        return isset($this->anchor);
    }

    public function clearAnchor()
    {
        unset($this->anchor);
    }

    /**
     * Generated from protobuf field <code>.bloock.ProofAnchor anchor = 5;</code>
     * @param \Bloock\ProofAnchor $var
     * @return $this
     */
    public function setAnchor($var)
    {
        GPBUtil::checkMessage($var, \Bloock\ProofAnchor::class);
        $this->anchor = $var;

        return $this;
    }

}

