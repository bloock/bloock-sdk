<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: keys_entities.proto

namespace Bloock;

use UnexpectedValueException;

/**
 * Protobuf type <code>bloock.KeyType</code>
 */
class KeyType
{
    /**
     * Generated from protobuf enum <code>EcP256k = 0;</code>
     */
    const EcP256k = 0;
    /**
     * Generated from protobuf enum <code>Rsa2048 = 1;</code>
     */
    const Rsa2048 = 1;
    /**
     * Generated from protobuf enum <code>Rsa3072 = 2;</code>
     */
    const Rsa3072 = 2;
    /**
     * Generated from protobuf enum <code>Rsa4096 = 3;</code>
     */
    const Rsa4096 = 3;

    private static $valueToName = [
        self::EcP256k => 'EcP256k',
        self::Rsa2048 => 'Rsa2048',
        self::Rsa3072 => 'Rsa3072',
        self::Rsa4096 => 'Rsa4096',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

