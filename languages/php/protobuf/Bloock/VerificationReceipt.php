<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: bloock_identity_entities.proto

namespace Bloock;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>bloock.VerificationReceipt</code>
 */
class VerificationReceipt extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string verification_request = 1;</code>
     */
    protected $verification_request = '';
    /**
     * Generated from protobuf field <code>int64 session_id = 2;</code>
     */
    protected $session_id = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $verification_request
     *     @type int|string $session_id
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\BloockIdentityEntities::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string verification_request = 1;</code>
     * @return string
     */
    public function getVerificationRequest()
    {
        return $this->verification_request;
    }

    /**
     * Generated from protobuf field <code>string verification_request = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setVerificationRequest($var)
    {
        GPBUtil::checkString($var, True);
        $this->verification_request = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int64 session_id = 2;</code>
     * @return int|string
     */
    public function getSessionId()
    {
        return $this->session_id;
    }

    /**
     * Generated from protobuf field <code>int64 session_id = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setSessionId($var)
    {
        GPBUtil::checkInt64($var);
        $this->session_id = $var;

        return $this;
    }

}

