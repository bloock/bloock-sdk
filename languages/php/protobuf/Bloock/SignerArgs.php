<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: authenticity_entities.proto

namespace Bloock;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>bloock.SignerArgs</code>
 */
class SignerArgs extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>optional string private_key = 1;</code>
     */
    protected $private_key = null;
    /**
     * Generated from protobuf field <code>optional string common_name = 2;</code>
     */
    protected $common_name = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $private_key
     *     @type string $common_name
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\AuthenticityEntities::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>optional string private_key = 1;</code>
     * @return string
     */
    public function getPrivateKey()
    {
        return isset($this->private_key) ? $this->private_key : '';
    }

    public function hasPrivateKey()
    {
        return isset($this->private_key);
    }

    public function clearPrivateKey()
    {
        unset($this->private_key);
    }

    /**
     * Generated from protobuf field <code>optional string private_key = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setPrivateKey($var)
    {
        GPBUtil::checkString($var, True);
        $this->private_key = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional string common_name = 2;</code>
     * @return string
     */
    public function getCommonName()
    {
        return isset($this->common_name) ? $this->common_name : '';
    }

    public function hasCommonName()
    {
        return isset($this->common_name);
    }

    public function clearCommonName()
    {
        unset($this->common_name);
    }

    /**
     * Generated from protobuf field <code>optional string common_name = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setCommonName($var)
    {
        GPBUtil::checkString($var, True);
        $this->common_name = $var;

        return $this;
    }

}

