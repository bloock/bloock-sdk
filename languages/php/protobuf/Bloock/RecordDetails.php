<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: bloock_record_entities.proto

namespace Bloock;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>bloock.RecordDetails</code>
 */
class RecordDetails extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>optional .bloock.IntegrityDetails integrity = 1;</code>
     */
    protected $integrity = null;
    /**
     * Generated from protobuf field <code>optional .bloock.AuthenticityDetails authenticity = 2;</code>
     */
    protected $authenticity = null;
    /**
     * Generated from protobuf field <code>optional .bloock.EncryptionDetails encryption = 3;</code>
     */
    protected $encryption = null;
    /**
     * Generated from protobuf field <code>optional .bloock.AvailabilityDetails availability = 4;</code>
     */
    protected $availability = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Bloock\IntegrityDetails $integrity
     *     @type \Bloock\AuthenticityDetails $authenticity
     *     @type \Bloock\EncryptionDetails $encryption
     *     @type \Bloock\AvailabilityDetails $availability
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\BloockRecordEntities::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>optional .bloock.IntegrityDetails integrity = 1;</code>
     * @return \Bloock\IntegrityDetails|null
     */
    public function getIntegrity()
    {
        return $this->integrity;
    }

    public function hasIntegrity()
    {
        return isset($this->integrity);
    }

    public function clearIntegrity()
    {
        unset($this->integrity);
    }

    /**
     * Generated from protobuf field <code>optional .bloock.IntegrityDetails integrity = 1;</code>
     * @param \Bloock\IntegrityDetails $var
     * @return $this
     */
    public function setIntegrity($var)
    {
        GPBUtil::checkMessage($var, \Bloock\IntegrityDetails::class);
        $this->integrity = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .bloock.AuthenticityDetails authenticity = 2;</code>
     * @return \Bloock\AuthenticityDetails|null
     */
    public function getAuthenticity()
    {
        return $this->authenticity;
    }

    public function hasAuthenticity()
    {
        return isset($this->authenticity);
    }

    public function clearAuthenticity()
    {
        unset($this->authenticity);
    }

    /**
     * Generated from protobuf field <code>optional .bloock.AuthenticityDetails authenticity = 2;</code>
     * @param \Bloock\AuthenticityDetails $var
     * @return $this
     */
    public function setAuthenticity($var)
    {
        GPBUtil::checkMessage($var, \Bloock\AuthenticityDetails::class);
        $this->authenticity = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .bloock.EncryptionDetails encryption = 3;</code>
     * @return \Bloock\EncryptionDetails|null
     */
    public function getEncryption()
    {
        return $this->encryption;
    }

    public function hasEncryption()
    {
        return isset($this->encryption);
    }

    public function clearEncryption()
    {
        unset($this->encryption);
    }

    /**
     * Generated from protobuf field <code>optional .bloock.EncryptionDetails encryption = 3;</code>
     * @param \Bloock\EncryptionDetails $var
     * @return $this
     */
    public function setEncryption($var)
    {
        GPBUtil::checkMessage($var, \Bloock\EncryptionDetails::class);
        $this->encryption = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .bloock.AvailabilityDetails availability = 4;</code>
     * @return \Bloock\AvailabilityDetails|null
     */
    public function getAvailability()
    {
        return $this->availability;
    }

    public function hasAvailability()
    {
        return isset($this->availability);
    }

    public function clearAvailability()
    {
        unset($this->availability);
    }

    /**
     * Generated from protobuf field <code>optional .bloock.AvailabilityDetails availability = 4;</code>
     * @param \Bloock\AvailabilityDetails $var
     * @return $this
     */
    public function setAvailability($var)
    {
        GPBUtil::checkMessage($var, \Bloock\AvailabilityDetails::class);
        $this->availability = $var;

        return $this;
    }

}

