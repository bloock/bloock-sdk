<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: bloock_config.proto

namespace Bloock;

use UnexpectedValueException;

/**
 * Protobuf type <code>bloock.Network</code>
 */
class Network
{
    /**
     * Generated from protobuf enum <code>ETHEREUM_MAINNET = 0;</code>
     */
    const ETHEREUM_MAINNET = 0;
    /**
     * Generated from protobuf enum <code>ETHEREUM_SEPOLIA = 1;</code>
     */
    const ETHEREUM_SEPOLIA = 1;
    /**
     * Generated from protobuf enum <code>GNOSIS_CHAIN = 2;</code>
     */
    const GNOSIS_CHAIN = 2;
    /**
     * Generated from protobuf enum <code>POLYGON_CHAIN = 3;</code>
     */
    const POLYGON_CHAIN = 3;

    private static $valueToName = [
        self::ETHEREUM_MAINNET => 'ETHEREUM_MAINNET',
        self::ETHEREUM_SEPOLIA => 'ETHEREUM_SEPOLIA',
        self::GNOSIS_CHAIN => 'GNOSIS_CHAIN',
        self::POLYGON_CHAIN => 'POLYGON_CHAIN',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

