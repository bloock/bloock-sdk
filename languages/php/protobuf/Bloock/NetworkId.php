<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: identity_entities.proto

namespace Bloock;

use UnexpectedValueException;

/**
 * Protobuf type <code>bloock.NetworkId</code>
 */
class NetworkId
{
    /**
     * Generated from protobuf enum <code>MAIN = 0;</code>
     */
    const MAIN = 0;
    /**
     * Generated from protobuf enum <code>MUMBAI = 1;</code>
     */
    const MUMBAI = 1;
    /**
     * Generated from protobuf enum <code>GOERLI = 2;</code>
     */
    const GOERLI = 2;
    /**
     * Generated from protobuf enum <code>UNKNOWN_NETWORK = 3;</code>
     */
    const UNKNOWN_NETWORK = 3;
    /**
     * Generated from protobuf enum <code>NO_NETWORK = 4;</code>
     */
    const NO_NETWORK = 4;

    private static $valueToName = [
        self::MAIN => 'MAIN',
        self::MUMBAI => 'MUMBAI',
        self::GOERLI => 'GOERLI',
        self::UNKNOWN_NETWORK => 'UNKNOWN_NETWORK',
        self::NO_NETWORK => 'NO_NETWORK',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

