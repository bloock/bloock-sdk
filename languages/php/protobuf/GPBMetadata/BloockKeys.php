<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: bloock_keys.proto

namespace GPBMetadata;

class BloockKeys
{
    public static $is_initialized = false;

    public static function initOnce() {
        $pool = \Google\Protobuf\Internal\DescriptorPool::getGeneratedPool();

        if (static::$is_initialized == true) {
          return;
        }
        \GPBMetadata\BloockKeysEntities::initOnce();
        \GPBMetadata\BloockShared::initOnce();
        \GPBMetadata\BloockConfig::initOnce();
        $pool->internalAddGeneratedFile(
            "\x0A\x93\$\x0A\x11bloock_keys.proto\x12\x06bloock\x1A\x13bloock_shared.proto\x1A\x13bloock_config.proto\"e\x0A\x17GenerateLocalKeyRequest\x12'\x0A\x0Bconfig_data\x18\x01 \x01(\x0B2\x12.bloock.ConfigData\x12!\x0A\x08key_type\x18\x02 \x01(\x0E2\x0F.bloock.KeyType\"l\x0A\x18GenerateLocalKeyResponse\x12#\x0A\x09local_key\x18\x01 \x01(\x0B2\x10.bloock.LocalKey\x12!\x0A\x05error\x18\x02 \x01(\x0B2\x0D.bloock.ErrorH\x00\x88\x01\x01B\x08\x0A\x06_error\"n\x0A\x19GenerateManagedKeyRequest\x12'\x0A\x0Bconfig_data\x18\x01 \x01(\x0B2\x12.bloock.ConfigData\x12(\x0A\x06params\x18\x02 \x01(\x0B2\x18.bloock.ManagedKeyParams\"r\x0A\x1AGenerateManagedKeyResponse\x12'\x0A\x0Bmanaged_key\x18\x01 \x01(\x0B2\x12.bloock.ManagedKey\x12!\x0A\x05error\x18\x02 \x01(\x0B2\x0D.bloock.ErrorH\x00\x88\x01\x01B\x08\x0A\x06_error\"n\x0A\x13LoadLocalKeyRequest\x12'\x0A\x0Bconfig_data\x18\x01 \x01(\x0B2\x12.bloock.ConfigData\x12!\x0A\x08key_type\x18\x02 \x01(\x0E2\x0F.bloock.KeyType\x12\x0B\x0A\x03key\x18\x03 \x01(\x09\"h\x0A\x14LoadLocalKeyResponse\x12#\x0A\x09local_key\x18\x01 \x01(\x0B2\x10.bloock.LocalKey\x12!\x0A\x05error\x18\x02 \x01(\x0B2\x0D.bloock.ErrorH\x00\x88\x01\x01B\x08\x0A\x06_error\"L\x0A\x15LoadManagedKeyRequest\x12'\x0A\x0Bconfig_data\x18\x01 \x01(\x0B2\x12.bloock.ConfigData\x12\x0A\x0A\x02id\x18\x02 \x01(\x09\"n\x0A\x16LoadManagedKeyResponse\x12'\x0A\x0Bmanaged_key\x18\x01 \x01(\x0B2\x12.bloock.ManagedKey\x12!\x0A\x05error\x18\x02 \x01(\x0B2\x0D.bloock.ErrorH\x00\x88\x01\x01B\x08\x0A\x06_error\"z\x0A\x1FGenerateLocalCertificateRequest\x12'\x0A\x0Bconfig_data\x18\x01 \x01(\x0B2\x12.bloock.ConfigData\x12.\x0A\x06params\x18\x02 \x01(\x0B2\x1E.bloock.LocalCertificateParams\"\x84\x01\x0A GenerateLocalCertificateResponse\x123\x0A\x11local_certificate\x18\x01 \x01(\x0B2\x18.bloock.LocalCertificate\x12!\x0A\x05error\x18\x02 \x01(\x0B2\x0D.bloock.ErrorH\x00\x88\x01\x01B\x08\x0A\x06_error\"~\x0A!GenerateManagedCertificateRequest\x12'\x0A\x0Bconfig_data\x18\x01 \x01(\x0B2\x12.bloock.ConfigData\x120\x0A\x06params\x18\x02 \x01(\x0B2 .bloock.ManagedCertificateParams\"\x8A\x01\x0A\"GenerateManagedCertificateResponse\x127\x0A\x13managed_certificate\x18\x01 \x01(\x0B2\x1A.bloock.ManagedCertificate\x12!\x0A\x05error\x18\x02 \x01(\x0B2\x0D.bloock.ErrorH\x00\x88\x01\x01B\x08\x0A\x06_error\"h\x0A\x1BLoadLocalCertificateRequest\x12'\x0A\x0Bconfig_data\x18\x01 \x01(\x0B2\x12.bloock.ConfigData\x12\x0E\x0A\x06pkcs12\x18\x02 \x01(\x0C\x12\x10\x0A\x08password\x18\x03 \x01(\x09\"\x80\x01\x0A\x1CLoadLocalCertificateResponse\x123\x0A\x11local_certificate\x18\x01 \x01(\x0B2\x18.bloock.LocalCertificate\x12!\x0A\x05error\x18\x02 \x01(\x0B2\x0D.bloock.ErrorH\x00\x88\x01\x01B\x08\x0A\x06_error\"T\x0A\x1DLoadManagedCertificateRequest\x12'\x0A\x0Bconfig_data\x18\x01 \x01(\x0B2\x12.bloock.ConfigData\x12\x0A\x0A\x02id\x18\x02 \x01(\x09\"\x86\x01\x0A\x1ELoadManagedCertificateResponse\x127\x0A\x13managed_certificate\x18\x01 \x01(\x0B2\x1A.bloock.ManagedCertificate\x12!\x0A\x05error\x18\x02 \x01(\x0B2\x0D.bloock.ErrorH\x00\x88\x01\x01B\x08\x0A\x06_error\"\xB6\x01\x0A\x1FImportManagedCertificateRequest\x12'\x0A\x0Bconfig_data\x18\x01 \x01(\x0B2\x12.bloock.ConfigData\x12\x13\x0A\x0Bcertificate\x18\x02 \x01(\x0C\x12\x15\x0A\x08password\x18\x03 \x01(\x09H\x00\x88\x01\x01\x121\x0A\x10certificate_type\x18\x04 \x01(\x0E2\x17.bloock.CertificateTypeB\x0B\x0A\x09_password\"\x88\x01\x0A ImportManagedCertificateResponse\x127\x0A\x13managed_certificate\x18\x01 \x01(\x0B2\x1A.bloock.ManagedCertificate\x12!\x0A\x05error\x18\x02 \x01(\x0B2\x0D.bloock.ErrorH\x00\x88\x01\x01B\x08\x0A\x06_error\"\xDC\x01\x0A\x1DSetupTotpAccessControlRequest\x12'\x0A\x0Bconfig_data\x18\x01 \x01(\x0B2\x12.bloock.ConfigData\x12,\x0A\x0Bmanaged_key\x18\x02 \x01(\x0B2\x12.bloock.ManagedKeyH\x00\x88\x01\x01\x12<\x0A\x13managed_certificate\x18\x03 \x01(\x0B2\x1A.bloock.ManagedCertificateH\x01\x88\x01\x01B\x0E\x0A\x0C_managed_keyB\x16\x0A\x14_managed_certificate\"\x88\x01\x0A\x1ESetupTotpAccessControlResponse\x12\x0E\x0A\x06secret\x18\x01 \x01(\x09\x12\x11\x0A\x09secret_qr\x18\x02 \x01(\x09\x12\x16\x0A\x0Erecovery_codes\x18\x03 \x03(\x09\x12!\x0A\x05error\x18\x04 \x01(\x0B2\x0D.bloock.ErrorH\x00\x88\x01\x01B\x08\x0A\x06_error\"\xFD\x01\x0A\x1FSetupSecretAccessControlRequest\x12'\x0A\x0Bconfig_data\x18\x01 \x01(\x0B2\x12.bloock.ConfigData\x12\x0E\x0A\x06secret\x18\x02 \x01(\x09\x12\x0D\x0A\x05email\x18\x03 \x01(\x09\x12,\x0A\x0Bmanaged_key\x18\x04 \x01(\x0B2\x12.bloock.ManagedKeyH\x00\x88\x01\x01\x12<\x0A\x13managed_certificate\x18\x05 \x01(\x0B2\x1A.bloock.ManagedCertificateH\x01\x88\x01\x01B\x0E\x0A\x0C_managed_keyB\x16\x0A\x14_managed_certificate\"O\x0A SetupSecretAccessControlResponse\x12!\x0A\x05error\x18\x01 \x01(\x0B2\x0D.bloock.ErrorH\x00\x88\x01\x01B\x08\x0A\x06_error\"\xEC\x01\x0A\x1FRecoverTotpAccessControlRequest\x12'\x0A\x0Bconfig_data\x18\x01 \x01(\x0B2\x12.bloock.ConfigData\x12\x0C\x0A\x04code\x18\x02 \x01(\x09\x12,\x0A\x0Bmanaged_key\x18\x03 \x01(\x0B2\x12.bloock.ManagedKeyH\x00\x88\x01\x01\x12<\x0A\x13managed_certificate\x18\x04 \x01(\x0B2\x1A.bloock.ManagedCertificateH\x01\x88\x01\x01B\x0E\x0A\x0C_managed_keyB\x16\x0A\x14_managed_certificate\"\x8A\x01\x0A RecoverTotpAccessControlResponse\x12\x0E\x0A\x06secret\x18\x01 \x01(\x09\x12\x11\x0A\x09secret_qr\x18\x02 \x01(\x09\x12\x16\x0A\x0Erecovery_codes\x18\x03 \x03(\x09\x12!\x0A\x05error\x18\x04 \x01(\x0B2\x0D.bloock.ErrorH\x00\x88\x01\x01B\x08\x0A\x06_error2\xC2\x09\x0A\x0AKeyService\x12U\x0A\x10GenerateLocalKey\x12\x1F.bloock.GenerateLocalKeyRequest\x1A .bloock.GenerateLocalKeyResponse\x12I\x0A\x0CLoadLocalKey\x12\x1B.bloock.LoadLocalKeyRequest\x1A\x1C.bloock.LoadLocalKeyResponse\x12[\x0A\x12GenerateManagedKey\x12!.bloock.GenerateManagedKeyRequest\x1A\".bloock.GenerateManagedKeyResponse\x12O\x0A\x0ELoadManagedKey\x12\x1D.bloock.LoadManagedKeyRequest\x1A\x1E.bloock.LoadManagedKeyResponse\x12m\x0A\x18GenerateLocalCertificate\x12'.bloock.GenerateLocalCertificateRequest\x1A(.bloock.GenerateLocalCertificateResponse\x12a\x0A\x14LoadLocalCertificate\x12#.bloock.LoadLocalCertificateRequest\x1A\$.bloock.LoadLocalCertificateResponse\x12s\x0A\x1AGenerateManagedCertificate\x12).bloock.GenerateManagedCertificateRequest\x1A*.bloock.GenerateManagedCertificateResponse\x12g\x0A\x16LoadManagedCertificate\x12%.bloock.LoadManagedCertificateRequest\x1A&.bloock.LoadManagedCertificateResponse\x12m\x0A\x18ImportManagedCertificate\x12'.bloock.ImportManagedCertificateRequest\x1A(.bloock.ImportManagedCertificateResponse\x12g\x0A\x16SetupTotpAccessControl\x12%.bloock.SetupTotpAccessControlRequest\x1A&.bloock.SetupTotpAccessControlResponse\x12m\x0A\x18SetupSecretAccessControl\x12'.bloock.SetupSecretAccessControlRequest\x1A(.bloock.SetupSecretAccessControlResponse\x12m\x0A\x18RecoverTotpAccessControl\x12'.bloock.RecoverTotpAccessControlRequest\x1A(.bloock.RecoverTotpAccessControlResponseBW\x0A\x1Bcom.bloock.sdk.bridge.protoZ8github.com/bloock/bloock-sdk-go/v2/internal/bridge/protob\x06proto3"
        , true);

        static::$is_initialized = true;
    }
}

