name: Create Release
on:
  push:
    tags:
      - "v*"
    branches:
      - feature/EIT-2580

jobs:
  version:
    name: Compute and verify the version number
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/check_version
      - name: Set version env
        run: echo "bloock_version=$(cat VERSION)" >> $GITHUB_ENV
      - name: Check github ref matches
        if: startsWith(github.ref, 'refs/tags/')
        env:
          github_ref: ${{ github.ref }}
        run: grep "${github_ref/refs\/tags\/v/}" VERSION

  build_wasm:
    needs: [version]
    uses: ./.github/workflows/build_wasm.yml

  build_linux:
    needs: [version]
    uses: ./.github/workflows/build_linux.yml
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu, x86_64-unknown-linux-musl]
    with:
      target: ${{ matrix.target }}

  build_darwin:
    needs: [version]
    uses: ./.github/workflows/build_darwin.yml

  build_windows:
    needs: [version]
    uses: ./.github/workflows/build_windows.yml

  build_go:
    needs: [build_linux, build_darwin, build_windows]
    uses: ./.github/workflows/build_go.yml

  build_js:
    needs: [build_wasm]
    uses: ./.github/workflows/build_js.yml

  test_rust:
    needs: [build_linux, build_darwin, build_windows, build_wasm]
    uses: ./.github/workflows/test_rust.yml
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    with:
      os: ${{ matrix.os }}

  test_go:
    needs: [build_go]
    uses: ./.github/workflows/test_go.yml
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: ["1.18", "1.19"]
    with:
      os: ${{ matrix.os }}
      go-version: ${{ matrix.go-version }}

  test_js:
    needs: [build_js]
    uses: ./.github/workflows/test_js.yml
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: ["14", "16", "18"]
    with:
      os: ${{ matrix.os }}
      node-version: ${{ matrix.node-version }}

  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [test_rust, test_js, test_go]
    # if: startsWith(github.ref, 'refs/tags/')
    outputs:
      version: ${{ steps.version.outputs.version }}
      release_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v2
      - name: Set version env
        id: version
        env:
          github_ref: ${{ github.ref }}
        run: echo "::set-output name=version::$(cat VERSION)"
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: bloock ${{ steps.version.outputs.version }}
          body: |
            bloock ${{ steps.version.outputs.version }}
          draft: false
          prerelease: true

  publish_rust:
    needs: [create_release]
    uses: ./.github/workflows/publish_rust.yml
    with:
      version: ${{ needs.create_release.outputs.version }}
      release_url: ${{ needs.create_release.outputs.release_url }}

  publish_go:
    needs: [create_release]
    uses: ./.github/workflows/publish_go.yml
    with:
      version: ${{ needs.create_release.outputs.version }}
      release_url: ${{ needs.create_release.outputs.release_url }}

  publish_js:
    needs: [create_release]
    uses: ./.github/workflows/publish_js.yml
    with:
      version: ${{ needs.create_release.outputs.version }}
      release_url: ${{ needs.create_release.outputs.release_url }}
