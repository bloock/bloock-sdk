name: Create Release
on:
  push:
    tags:
      - "v*"
    branches:
      - master

jobs:
  version:
    name: Compute and verify the version number
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/check_version
      - name: Set version env
        run: echo "bloock_version=$(cat VERSION)" >> $GITHUB_ENV
      - name: Check github ref matches
        if: startsWith(github.ref, 'refs/tags/')
        env:
          github_ref: ${{ github.ref }}
        run: grep "${github_ref/refs\/tags\/v/}" VERSION

  build_binaries:
    needs: [version]
    uses: ./.github/workflows/build_rust.yml
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            cargo_command: cross
          
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            cargo_command: cross

          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            cargo_command: cross

          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            cargo_command: cross

          - os: windows-latest
            target: x86_64-pc-windows-gnu
            cargo_command: cargo

          - os: macOS-latest
            target: x86_64-apple-darwin
            cargo_command: cargo

          - os: macOS-latest
            target: aarch64-apple-darwin
            cargo_command: cargo
    with:
      os: ${{ matrix.platform.os }}
      target: ${{ matrix.platform.target }}
      cargo_command: ${{ matrix.platform.cargo_command }}

  build_wasm:
    needs: [version]
    uses: ./.github/workflows/build_wasm.yml

  build_go:
    needs: [build_binaries]
    uses: ./.github/workflows/build_go.yml

  build_python:
    needs: [build_binaries]
    uses: ./.github/workflows/build_python.yml
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    with:
      os: ${{ matrix.os }}

  build_java:
    needs: [build_binaries]
    uses: ./.github/workflows/build_java.yml

  build_php:
    needs: [build_binaries]
    uses: ./.github/workflows/build_php.yml

  build_js:
    needs: [build_wasm]
    uses: ./.github/workflows/build_js.yml

  test_rust:
    needs: [build_binaries, build_wasm]
    uses: ./.github/workflows/test_rust.yml
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    with:
      os: ${{ matrix.os }}
    secrets:
      api_host: ${{ secrets.API_HOST }}
      api_key: ${{ secrets.API_KEY }}

  test_go:
    needs: [build_go]
    uses: ./.github/workflows/test_go.yml
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: ["1.18", "1.19"]
    with:
      os: ${{ matrix.os }}
      go-version: ${{ matrix.go-version }}
    secrets:
      api_host: ${{ secrets.API_HOST }}
      api_key: ${{ secrets.API_KEY }}

  test_python:
    needs: [build_python]
    uses: ./.github/workflows/test_python.yml
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
    with:
      os: ${{ matrix.os }}
      python-version: ${{ matrix.python-version }}
    secrets:
      api_host: ${{ secrets.API_HOST }}
      api_key: ${{ secrets.API_KEY }}

  test_java:
    needs: [build_java]
    uses: ./.github/workflows/test_java.yml
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        java-version: [8, 11, 17, 19]
    with:
      os: ${{ matrix.os }}
      java-version: ${{ matrix.java-version }}
    secrets:
      api_host: ${{ secrets.API_HOST }}
      api_key: ${{ secrets.API_KEY }}

  test_php:
    needs: [build_php]
    uses: ./.github/workflows/test_php.yml
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        php-version: ["7.4", "8.0", "8.1", "8.2"]
    with:
      os: ${{ matrix.os }}
      php-version: ${{ matrix.php-version }}
    secrets:
      api_key: ${{ secrets.API_KEY }}

  test_js:
    needs: [build_js]
    uses: ./.github/workflows/test_js.yml
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: ["14", "16", "18"]
    with:
      os: ${{ matrix.os }}
      node-version: ${{ matrix.node-version }}
    secrets:
      api_host: ${{ secrets.API_HOST }}
      api_key: ${{ secrets.API_KEY }}

  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [test_rust, test_js, test_go, test_python, test_java, test_php]
    if: startsWith(github.ref, 'refs/tags/')
    outputs:
      version: ${{ steps.version.outputs.version }}
      release_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v3
      - name: Set version env
        id: version
        env:
          github_ref: ${{ github.ref }}
        run: echo "version=$(cat VERSION)" >> $GITHUB_OUTPUT
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: bloock ${{ steps.version.outputs.version }}
          body: |
            bloock ${{ steps.version.outputs.version }}
          draft: false
          prerelease: true

  release_rust:
    needs: [create_release]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/release_zip
        with:
          version: ${{ needs.create_release.outputs.version }}
          release_url: ${{ needs.create_release.outputs.release_url }}
          artifact: bloock_core_lib_dynamic
          github_token: ${{ secrets.GITHUB_TOKEN }}

  release_go:
    needs: [create_release]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/release_zip
        with:
          version: ${{ needs.create_release.outputs.version }}
          release_url: ${{ needs.create_release.outputs.release_url }}
          artifact: bloock_lib_go
          github_token: ${{ secrets.GITHUB_TOKEN }}

  release_php:
    needs: [create_release]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/release_zip
        with:
          version: ${{ needs.create_release.outputs.version }}
          release_url: ${{ needs.create_release.outputs.release_url }}
          artifact: bloock_lib_php
          github_token: ${{ secrets.GITHUB_TOKEN }}

  release_python:
    needs: [create_release]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/release_zip
        with:
          version: ${{ needs.create_release.outputs.version }}
          release_url: ${{ needs.create_release.outputs.release_url }}
          artifact: bloock_lib_python
          github_token: ${{ secrets.GITHUB_TOKEN }}

  release_js:
    needs: [create_release]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/release_zip
        with:
          version: ${{ needs.create_release.outputs.version }}
          release_url: ${{ needs.create_release.outputs.release_url }}
          artifact: bloock_lib_js
          github_token: ${{ secrets.GITHUB_TOKEN }}

  release_java:
    needs: [create_release]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/release_zip
        with:
          version: ${{ needs.create_release.outputs.version }}
          release_url: ${{ needs.create_release.outputs.release_url }}
          artifact: bloock_lib_java
          github_token: ${{ secrets.GITHUB_TOKEN }}
