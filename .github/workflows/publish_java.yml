name: Publish Java

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
    secrets:
      sonatype_username:
        required: true
      sonatype_password:
        required: true
      pgp_secret:
        required: true
      pgp_passphrase:
        required: true

jobs:
  publish_java:
    name: Publish Java
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: "v${{ github.event.inputs.version }}"
      - run: |
          curl -L -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/octet-stream" $(curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -s https://api.github.com/repos/bloock/bloock-sdk/releases/tags/v${{ github.event.inputs.version }} | jq -r '.assets[] | select(.name == "bloock_core_lib_dynamic-${{ github.event.inputs.version }}.zip") | .url') --output bloock_core_lib_dynamic-${{ github.event.inputs.version }}.zip
      - run: unzip bloock_core_lib_dynamic-${{ github.event.inputs.version }}.zip -d bloock_core_lib_dynamic-${{ github.event.inputs.version }}
      - name: Copy binaries.
        run: |
          mkdir -p languages/java/src/main/resources
          cp -r bloock_core_lib_dynamic-${{ github.event.inputs.version }}/bloock_core_lib_dynamic/* languages/java/src/main/resources/
          
          mv languages/java/src/main/resources/armv7-linux-androideabi/libbloock_bridge.so languages/java/src/main/resources/armv7-linux-androideabi/libbloock_bridge.android || true
          mv languages/java/src/main/resources/aarch64-linux-android/libbloock_bridge.so languages/java/src/main/resources/aarch64-linux-android/libbloock_bridge.android || true
          mv languages/java/src/main/resources/i686-linux-android/libbloock_bridge.so languages/java/src/main/resources/i686-linux-android/libbloock_bridge.android || true
      - name: Cleanup
        run: |
          rm languages/java/Makefile
          cp LICENSE languages/java/LICENSE
          cp README.md languages/java/README.md
      - name: Publish with Gradle
        env:
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.sonatype_username }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.sonatype_password }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.pgp_secret }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.pgp_passphrase }}
        run: ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository --no-daemon
        working-directory: languages/java
