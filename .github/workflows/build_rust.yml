name: Build Linux

on:
  workflow_call:
    inputs:
      os_name:
        required: true
        type: string
      os:
        required: true
        type: string
      target:
        required: true
        type: string
      bin:
        required: true
        type: string
      name:
        required: true
        type: string
      cargo_command:
        required: true
        type: string

jobs:
  build:
    name: Build for ${{ inputs.target }}
    runs-on: ${{ inputs.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-rust-build-${{ hashFiles('**/Cargo.lock') }}
      - name: Install toolchain if not cross-compiling
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ inputs.target }}
      - uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ !inputs.cross }}
      - name: Build binary
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ contains(inputs.cargo_command, 'cross') }}
          command: build
          args: --locked --release --target ${{ inputs.target }}
      - name: Package as archive
        shell: bash
        run: |
          cd target/${{ inputs.target }}/release
          if [[ "${{ inputs.os }}" == "windows-latest" ]]; then
            7z a ../../../${{ inputs.name }} ${{ inputs.bin }}
          else
            tar czvf ../../../${{ inputs.name }} ${{ inputs.bin }}
          fi
          cd -
      - uses: actions/upload-artifact@v2
        with:
          name: bloock_core_lib_static
          if-no-files-found: error
          path: |
            bloock_core_lib_static/libbloock_bridge-fat.a