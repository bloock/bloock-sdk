name: Build Lib

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      lang:
        required: true
        type: string
      lang-version:
        required: true
        type: string
jobs:
  build_lib:
    name: Build ${{ inputs.lang }}.
    runs-on: ${{ inputs.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup_go
        with:
          version: ${{ inputs.lang-version }}
          working-directory: languages/go
        if: ${{ inputs.lang == 'go' }}
      - uses: ./.github/actions/setup_java
        with:
          version: ${{ inputs.lang-version }}
          working-directory: languages/java
        if: ${{ inputs.lang == 'java' }}
      - uses: ./.github/actions/setup_js
        with:
          version: ${{ inputs.lang-version }}
          working-directory: languages/js
        if: ${{ inputs.lang == 'js' }}
      - uses: ./.github/actions/setup_php
        with:
          version: ${{ inputs.lang-version }}
          working-directory: languages/php
        if: ${{ inputs.lang == 'php' }}
      - uses: ./.github/actions/setup_python
        with:
          version: ${{ inputs.lang-version }}
          working-directory: languages/python
        if: ${{ inputs.lang == 'python' }}
      - name: Build
        run: make build
        env:
          CIBW_BUILD: "*64"
          CIBW_ARCHS: "${{ inputs.os == 'macos-latest' && 'universal2' || 'auto' }}"
        working-directory: languages/${{ inputs.lang }}
      - name: Cleanup
        shell: bash
        run: |
          rm -rf node_modules
          cp LICENSE languages/${{ inputs.lang }}/LICENSE
          cp README.md languages/${{ inputs.lang }}/README.md
      - uses: actions/upload-artifact@v2
        with:
          name: bloock_lib_${{ inputs.lang }}
          path: languages/${{ inputs.lang }}
