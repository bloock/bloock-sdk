name: Publish Release
on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version Number"
        required: true
jobs:
  mark-latest:
    # Mark the release about to be published as latest.
    runs-on: ubuntu-latest
    steps:
      - name: Mark release as latest
        uses: tubone24/update_release@v1.3.1
        with:
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: "v${{ github.event.inputs.version }}"
  go:
    # Notifies the go-oso repo there's a new release.
    # CI over there then pulls this tag, commits and pushes their own tag.
    runs-on: ubuntu-latest
    steps:
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.REPO_API_TOKEN }}
          repository: osohq/go-oso
          event-type: oso_publish
          client-payload: '{"version": "${{ github.event.inputs.version }}"}'

  js:
    name: Publish Node.js package to NPM
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: "v${{ github.event.inputs.version }}"
      - run: |
          curl -L -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/octet-stream" $(curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -s https://api.github.com/repos/osohq/oso/releases/tags/v${{ github.event.inputs.version }} | jq -r '.assets[] | select(.name == "oso-js-node-${{ github.event.inputs.version }}.tgz") | .url') --output oso-js-node-${{ github.event.inputs.version }}.tgz
      - name: Extract gzipped archive
        run: |
          mkdir -p oso-js-node-${{ github.event.inputs.version }}
          tar -xzf oso-js-node-${{ github.event.inputs.version }}.tgz -C oso-js-node-${{ github.event.inputs.version }} --strip-components=1
      - name: Use Node.js 16
        uses: actions/setup-node@v1
        with:
          node-version: "16"
      - name: Set up .npmrc
        working-directory: "oso-js-node-${{ github.event.inputs.version }}"
        run: echo '//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}' > .npmrc
      - run: npm publish
        working-directory: "oso-js-node-${{ github.event.inputs.version }}"
