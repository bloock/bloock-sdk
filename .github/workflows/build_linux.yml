name: Build Linux

on:
  workflow_call:
    inputs:
      target:
        required: true
        type: string

jobs:
  build_linux:
    name: Build lib Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-rust-build-${{ hashFiles('**/Cargo.lock') }}
      - name: Install Rust stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: ${{ inputs.target }}
      - uses: arduino/setup-protoc@v1
        with:
          version: "3.x"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup zigbuild
        run: |
          pip install cargo-zigbuild
      - name: Install musl tools
        if: contains(${{ inputs.target }}, 'musl')
        run: |
          sudo apt-get install musl-tools
      - name: Build release libraries
        run: |
          make -C bloock-bridge ${{ inputs.target }}
      - run: |
          cp bloock-bridge/build/native/${{ inputs.target }}/libbloock_bridge.so bloock-bridge/build/native/libbloock_bridge_${{ inputs.target }}.so
          cp bloock-bridge/build/native/${{ inputs.target }}/libbloock_bridge.a bloock-bridge/build/native/libbloock_bridge_${{ inputs.target }}.a
      - uses: actions/upload-artifact@v2
        with:
          name: bloock_core_lib_dynamic
          if-no-files-found: error
          path: |
            bloock-bridge/build/native/bloock_bridge.h
            bloock-bridge/build/native/libbloock_bridge_${{ inputs.target }}.so
      - uses: actions/upload-artifact@v2
        with:
          name: bloock_core_lib_static
          if-no-files-found: error
          path: |
            bloock-bridge/build/native/bloock_bridge.h
            bloock-bridge/build/native/libbloock_bridge_${{ inputs.target }}.a
