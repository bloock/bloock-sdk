name: Build python

on:
  workflow_call:
    inputs:
      os:
        required: false
        type: string
        default: '[{"platform": "linux", "os": "ubuntu"}, {"platform": "macos", "os": "macos-latest"}, {"platform": "windows", "os": "windows-latest"}]'

jobs:
  build:
    name: Build python
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup_python
        with:
          version: "3.10"
          working-directory: languages/python
      - name: Build docs
        run: make docs
        working-directory: languages/python
      - name: Cleanup
        shell: bash
        run: |
          cp LICENSE languages/python/LICENSE
          cp README.md languages/python/README.md
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: bloock_lib_python
          path: languages/python
  prepare-wheels:
    name: Build python
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platforms: ${{ fromJSON(inputs.os) }}
    outputs:
      linux: ${{ steps.set-matrix.outputs.linux }}
      windows: ${{ steps.set-matrix.outputs.windows }}
      macos: ${{ steps.set-matrix.outputs.macos }}
    steps:
      - uses: actions/checkout@v3
      - name: Install cibuildwheel
        run: pipx install cibuildwheel==2.11.2
      - id: set-matrix
        run: |
          MATRIX=$(
              cibuildwheel --print-build-identifiers --platform ${{ matrix.platforms.platform }} \
              | jq -nRc '{"only": inputs, "os": "${{ matrix.platforms.os }}"}' \
              | jq -sc
          )
          echo "${{ matrix.platforms.platform }}=$MATRIX" >> $GITHUB_OUTPUT
        working-directory: languages/python
    env:
      CIBW_ARCHS_LINUX: x86_64 aarch64
      CIBW_ARCHS_MACOS: x86_64 arm64
      CIBW_ARCHS_WINDOWS: AMD64
  concat-wheels:
    name: Concat wheels
    runs-on: ubuntu-latest
    needs: [prepare-wheels]
    outputs:
      include: ${{ steps.matrix.outputs.include }}
    steps:
      - id: matrix
        run: |
          PLATFORMS=$(echo '${{ needs.prepare-wheels.outputs.linux }}' && echo '${{ needs.prepare-wheels.outputs.windows }}' && echo '${{ needs.prepare-wheels.outputs.macos }}');
          MATRIX=$(echo $PLATFORMS | jq -sc);
          echo "include=$MATRIX" >> $GITHUB_OUTPUT;
  build-wheels:
    name: Build wheel ${{ matrix.only }}
    needs: [concat-wheels]
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.concat-wheels.outputs.include) }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all
      - uses: ./.github/actions/setup_python
        with:
          version: "3.10"
          working-directory: languages/python
      - uses: pypa/cibuildwheel@v2.16.5
        with:
          package-dir: languages/python
          output-dir: languages/python/wheelhouse
          only: ${{ matrix.only }}
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: bloock_lib_python_wheels
          path: languages/python/wheelhouse
