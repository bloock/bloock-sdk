syntax = "proto3";

package bloock;

option go_package = "github.com/bloock/bloock-sdk-go/v2/internal/bridge/proto";
option java_package = "com.bloock.sdk.bridge.proto";

import "identity_entities.proto";
import "shared.proto";
import "config.proto";

service IdentityService {
    rpc CreateIdentity(CreateIdentityRequest) returns (CreateIdentityResponse);
    rpc LoadIdentity(LoadIdentityRequest) returns (LoadIdentityResponse);

    rpc BuildSchema(BuildSchemaRequest) returns (BuildSchemaResponse);
    rpc GetSchema(GetSchemaRequest) returns (GetSchemaResponse);

    rpc CreateCredential(CreateCredentialRequest) returns (CreateCredentialResponse);
    rpc GetOffer(GetOfferRequest) returns (GetOfferResponse);
    rpc WaitOffer(WaitOfferRequest) returns (WaitOfferResponse);

    rpc CredentialOfferToJson(CredentialOfferToJsonRequest) returns (CredentialOfferToJsonResponse);
    rpc CredentialOfferFromJson(CredentialOfferFromJsonRequest) returns (CredentialOfferFromJsonResponse);
    rpc CredentialOfferRedeem(CredentialOfferRedeemRequest) returns (CredentialOfferRedeemResponse);

    rpc CredentialToJson(CredentialToJsonRequest) returns (CredentialToJsonResponse);
    rpc CredentialFromJson(CredentialFromJsonRequest) returns (CredentialFromJsonResponse);

    rpc VerifyCredential(VerifyCredentialRequest) returns (VerifyCredentialResponse);

    rpc RevokeCredential(RevokeCredentialRequest) returns (RevokeCredentialResponse);
}

message CreateIdentityRequest {
    ConfigData config_data = 1;
}

message CreateIdentityResponse {
    Identity identity = 1;
    optional Error error = 2;
}

message LoadIdentityRequest {
    ConfigData config_data = 1;
    string mnemonic = 2;
}

message LoadIdentityResponse {
    Identity identity = 1;
    optional Error error = 2;
}

message BuildSchemaRequest {
    ConfigData config_data = 1;
    string display_name = 2;
    string technical_name = 3;
    repeated BooleanAttributeDefinition boolean_attributes = 4;
    repeated DateAttributeDefinition date_attributes = 5;
    repeated DateTimeAttributeDefinition datetime_attributes = 6;
    repeated MultiChoiceAttributeDefinition multichoice_attributes = 7;
    repeated NumberAttributeDefinition number_attributes = 8;
}

message BuildSchemaResponse {
    Schema schema = 1;
    optional Error error = 2;
}

message GetSchemaRequest {
    ConfigData config_data = 1;
    string id = 2;
}

message GetSchemaResponse {
    Schema schema = 1;
    optional Error error = 2;
}

message CreateCredentialRequest {
    ConfigData config_data = 1;
    string schema_id = 2;
    string holder_key = 3;
    repeated BooleanAttribute boolean_attributes = 4;
    repeated DateAttribute date_attributes = 5;
    repeated DateTimeAttribute datetime_attributes = 6;
    repeated MultiChoiceAttribute multichoice_attributes = 7;
    repeated NumberAttribute number_attributes = 8;
}

message CreateCredentialResponse {
    CredentialReceipt credential_receipt = 1;
    optional Error error = 2;
}

message GetOfferRequest {
    ConfigData config_data = 1;
    string id = 2;
}

message GetOfferResponse {
    CredentialOffer offer = 1;
    optional Error error = 2;
}

message WaitOfferRequest {
    ConfigData config_data = 1;
    string offer_id = 2;
    int64 timeout = 3;
}

message WaitOfferResponse {
    optional CredentialOffer offer = 1;
    optional Error error = 2;
}

message CredentialOfferToJsonRequest {
    ConfigData config_data = 1;
    CredentialOffer credential_offer = 2;
}

message CredentialOfferToJsonResponse {
    string json = 1;
    optional Error error = 2;
}

message CredentialOfferFromJsonRequest {
    ConfigData config_data = 1;
    string json = 2;
}

message CredentialOfferFromJsonResponse {
    CredentialOffer credential_offer = 1;
    optional Error error = 2;
}

message CredentialOfferRedeemRequest {
    ConfigData config_data = 1;
    CredentialOffer credential_offer = 2;
    string identity_private_key = 3;
}

message CredentialOfferRedeemResponse {
    Credential credential = 1;
    optional Error error = 2;
}

message CredentialToJsonRequest {
    ConfigData config_data = 1;
    Credential credential = 2;
}

message CredentialToJsonResponse {
    string json = 1;
    optional Error error = 2;
}

message CredentialFromJsonRequest {
    ConfigData config_data = 1;
    string json = 2;
}

message CredentialFromJsonResponse {
    Credential credential = 1;
    optional Error error = 2;
}

message VerifyCredentialRequest {
    ConfigData config_data = 1;
    Credential credential = 2;
}

message VerifyCredentialResponse {
    CredentialVerification result = 1;
    optional Error error = 2;
}

message RevokeCredentialRequest {
    ConfigData config_data = 1;
    Credential credential = 2;
}

message RevokeCredentialResponse {
    CredentialRevocation result = 1;
    optional Error error = 2;
}
