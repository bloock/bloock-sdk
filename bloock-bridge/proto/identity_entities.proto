syntax = "proto3";

package bloock;

option go_package = "github.com/bloock/bloock-sdk-go/v2/internal/bridge/proto";
option java_package = "com.bloock.sdk.bridge.proto";

import "integrity_entities.proto";

message Identity {
    string mnemonic = 1;
    string key = 2;
    string private_key = 3;
}

message BooleanAttributeDefinition {
    string display_name = 1;
    string id = 2;
    string description = 3;
}

message DateAttributeDefinition {
    string display_name = 1;
    string id = 2;
    string description = 3;
}

message DateTimeAttributeDefinition {
    string display_name = 1;
    string id = 2;
    string description = 3;
}

message StringAttributeDefinition {
    string display_name = 1;
    string id = 2;
    string description = 3;
}

message NumberAttributeDefinition {
    string display_name = 1;
    string id = 2;
    string description = 3;
}

message BooleanAttribute {
    string id = 1;
    bool value = 2;
}

message DateAttribute {
    string id = 1;
    int64 value = 2;
}

message DateTimeAttribute {
    string id = 1;
    int64 value = 2;
}

message StringAttribute {
    string id = 1;
    string value = 2;
}

message NumberAttribute {
    string id = 1;
    int64 value = 2;
}

message Schema {
    string id = 1;
    string json_ld = 2;
}

message CredentialOffer {
    string thid = 1;
    CredentialOfferBody body = 2;
    string _from = 3;
    string _to = 4;
}

message CredentialOfferBody {
    string url = 1;
    repeated CredentialOfferBodyCredentials credentials = 2;
}

message CredentialOfferBodyCredentials {
    string id = 1;
    string description = 2;
}

message CredentialReceipt {
    string id = 1;
    int64 anchor_id = 2;
}

message Credential {
    repeated string context = 1;
    string id = 2;
    repeated string type = 3;
    string issuance_date = 4;
    string credential_subject = 5;
    CredentialStatus credential_status = 6;
    string issuer = 7;
    CredentialSchema credential_schema = 8;
    CredentialProof proof = 9;
}

message CredentialStatus {
    string id = 1;
    int64 revocation_nonce = 2;
    string type = 3;
}

message CredentialSchema {
    string id = 1;
    string type = 2;
}

message CredentialProof {
    Proof bloock_proof = 1;
    SignatureJWS signature_proof = 2;
}

message CredentialVerification {
    uint64 timestamp = 1;
    string issuer = 2;
    uint64 revocation = 3;
}

message CredentialRevocation {
    bool success = 1;
}

message SignatureJWS {
    string signature = 1;
    string protected = 2;
    SignatureHeaderJWS header = 3;
    string message_hash = 4;
}

message SignatureHeaderJWS {
    string alg = 1;
    string kid = 2;
}